{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _default;\n  }\n});\nconst _postcssvalueparser = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/postcss-value-parser\"));\nconst _utils = require(\"../utils\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction parseNode(atRule, key) {\n  // Convert only top-level @import\n  if (atRule.parent.type !== \"root\") {\n    return;\n  }\n  if (atRule.raws && atRule.raws.afterName && atRule.raws.afterName.trim().length > 0) {\n    const lastCommentIndex = atRule.raws.afterName.lastIndexOf(\"/*\");\n    const matched = atRule.raws.afterName.slice(lastCommentIndex).match(_utils.WEBPACK_IGNORE_COMMENT_REGEXP);\n    if (matched && matched[2] === \"true\") {\n      return;\n    }\n  }\n  const prevNode = atRule.prev();\n  if (prevNode && prevNode.type === \"comment\") {\n    const matched = prevNode.text.match(_utils.WEBPACK_IGNORE_COMMENT_REGEXP);\n    if (matched && matched[2] === \"true\") {\n      return;\n    }\n  }\n  // Nodes do not exists - `@import url('http://') :root {}`\n  if (atRule.nodes) {\n    const error = new Error(\"It looks like you didn't end your @import statement correctly. Child nodes are attached to it.\");\n    error.node = atRule;\n    throw error;\n  }\n  const {\n    nodes: paramsNodes\n  } = (0, _postcssvalueparser.default)(atRule[key]);\n  // No nodes - `@import ;`\n  // Invalid type - `@import foo-bar;`\n  if (paramsNodes.length === 0 || paramsNodes[0].type !== \"string\" && paramsNodes[0].type !== \"function\") {\n    const error = new Error(`Unable to find uri in \"${atRule.toString()}\"`);\n    error.node = atRule;\n    throw error;\n  }\n  let isStringValue;\n  let url;\n  if (paramsNodes[0].type === \"string\") {\n    isStringValue = true;\n    url = paramsNodes[0].value;\n  } else {\n    // Invalid function - `@import nourl(test.css);`\n    if (paramsNodes[0].value.toLowerCase() !== \"url\") {\n      const error = new Error(`Unable to find uri in \"${atRule.toString()}\"`);\n      error.node = atRule;\n      throw error;\n    }\n    isStringValue = paramsNodes[0].nodes.length !== 0 && paramsNodes[0].nodes[0].type === \"string\";\n    url = isStringValue ? paramsNodes[0].nodes[0].value : _postcssvalueparser.default.stringify(paramsNodes[0].nodes);\n  }\n  url = (0, _utils.normalizeUrl)(url, isStringValue);\n  const isRequestable = (0, _utils.isUrlRequestable)(url);\n  let prefix;\n  if (isRequestable) {\n    const queryParts = url.split(\"!\");\n    if (queryParts.length > 1) {\n      url = queryParts.pop();\n      prefix = queryParts.join(\"!\");\n    }\n  }\n  // Empty url - `@import \"\";` or `@import url();`\n  if (url.trim().length === 0) {\n    const error = new Error(`Unable to find uri in \"${atRule.toString()}\"`);\n    error.node = atRule;\n    throw error;\n  }\n  const mediaNodes = paramsNodes.slice(1);\n  let media;\n  if (mediaNodes.length > 0) {\n    media = _postcssvalueparser.default.stringify(mediaNodes).trim().toLowerCase();\n  }\n  // eslint-disable-next-line consistent-return\n  return {\n    atRule,\n    prefix,\n    url,\n    media,\n    isRequestable\n  };\n}\nconst plugin = (options = {}) => {\n  return {\n    postcssPlugin: \"postcss-import-parser\",\n    prepare(result) {\n      const parsedAtRules = [];\n      return {\n        AtRule: {\n          import(atRule) {\n            let parsedAtRule;\n            try {\n              // @ts-expect-error TODO: there is no third argument?\n              parsedAtRule = parseNode(atRule, \"params\", result);\n            } catch (error) {\n              result.warn(error.message, {\n                node: error.node\n              });\n            }\n            if (!parsedAtRule) {\n              return;\n            }\n            parsedAtRules.push(parsedAtRule);\n          }\n        },\n        async OnceExit() {\n          if (parsedAtRules.length === 0) {\n            return;\n          }\n          const resolvedAtRules = await Promise.all(parsedAtRules.map(async parsedAtRule => {\n            const {\n              atRule,\n              isRequestable,\n              prefix,\n              url,\n              media\n            } = parsedAtRule;\n            if (options.filter) {\n              const needKeep = await options.filter(url, media);\n              if (!needKeep) {\n                return;\n              }\n            }\n            if (isRequestable) {\n              const request = (0, _utils.requestify)(url, options.rootContext);\n              const {\n                resolver,\n                context\n              } = options;\n              const resolvedUrl = await (0, _utils.resolveRequests)(resolver, context, [...new Set([request, url])]);\n              if (!resolvedUrl) {\n                return;\n              }\n              if (resolvedUrl === options.resourcePath) {\n                atRule.remove();\n                return;\n              }\n              atRule.remove();\n              // eslint-disable-next-line consistent-return\n              return {\n                url: resolvedUrl,\n                media,\n                prefix,\n                isRequestable\n              };\n            }\n            atRule.remove();\n            // eslint-disable-next-line consistent-return\n            return {\n              url,\n              media,\n              prefix,\n              isRequestable\n            };\n          }));\n          const urlToNameMap = new Map();\n          for (let index = 0; index <= resolvedAtRules.length - 1; index++) {\n            const resolvedAtRule = resolvedAtRules[index];\n            if (!resolvedAtRule) {\n              continue;\n            }\n            const {\n              url,\n              isRequestable,\n              media\n            } = resolvedAtRule;\n            if (!isRequestable) {\n              options.api.push({\n                url,\n                media,\n                index\n              });\n              continue;\n            }\n            const {\n              prefix\n            } = resolvedAtRule;\n            const newUrl = prefix ? `${prefix}!${url}` : url;\n            let importName = urlToNameMap.get(newUrl);\n            if (!importName) {\n              importName = `___CSS_LOADER_AT_RULE_IMPORT_${urlToNameMap.size}___`;\n              urlToNameMap.set(newUrl, importName);\n              options.imports.push({\n                type: \"rule_import\",\n                importName,\n                url: options.urlHandler(newUrl),\n                index\n              });\n            }\n            options.api.push({\n              importName,\n              media,\n              index\n            });\n          }\n        }\n      };\n    }\n  };\n};\nplugin.postcss = true;\nconst _default = plugin;","map":{"version":3,"names":["_default","parseNode","atRule","key","parent","type","raws","afterName","trim","length","lastCommentIndex","lastIndexOf","matched","slice","match","_utils","WEBPACK_IGNORE_COMMENT_REGEXP","prevNode","prev","text","nodes","error","Error","node","paramsNodes","_postcssvalueparser","default","toString","isStringValue","url","value","toLowerCase","stringify","normalizeUrl","isRequestable","isUrlRequestable","prefix","queryParts","split","pop","join","mediaNodes","media","plugin","options","postcssPlugin","prepare","result","parsedAtRules","AtRule","import","parsedAtRule","warn","message","push","OnceExit","resolvedAtRules","Promise","all","map","filter","needKeep","request","requestify","rootContext","resolver","context","resolvedUrl","resolveRequests","Set","resourcePath","remove","urlToNameMap","Map","index","resolvedAtRule","api","newUrl","importName","get","size","set","imports","urlHandler","postcss"],"sources":["../../../../../../../src/build/webpack/loaders/css-loader/src/plugins/postcss-import-parser.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}