{"ast":null,"code":"/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  isDataUrl: null,\n  shouldUseModulesPlugins: null,\n  shouldUseImportPlugin: null,\n  shouldUseURLPlugin: null,\n  shouldUseIcssPlugin: null,\n  normalizeUrl: null,\n  requestify: null,\n  getFilter: null,\n  getModulesPlugins: null,\n  normalizeSourceMap: null,\n  getPreRequester: null,\n  getImportCode: null,\n  getModuleCode: null,\n  getExportCode: null,\n  resolveRequests: null,\n  isUrlRequestable: null,\n  sort: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  isDataUrl: function () {\n    return isDataUrl;\n  },\n  shouldUseModulesPlugins: function () {\n    return shouldUseModulesPlugins;\n  },\n  shouldUseImportPlugin: function () {\n    return shouldUseImportPlugin;\n  },\n  shouldUseURLPlugin: function () {\n    return shouldUseURLPlugin;\n  },\n  shouldUseIcssPlugin: function () {\n    return shouldUseIcssPlugin;\n  },\n  normalizeUrl: function () {\n    return normalizeUrl;\n  },\n  requestify: function () {\n    return requestify;\n  },\n  getFilter: function () {\n    return getFilter;\n  },\n  getModulesPlugins: function () {\n    return getModulesPlugins;\n  },\n  normalizeSourceMap: function () {\n    return normalizeSourceMap;\n  },\n  getPreRequester: function () {\n    return getPreRequester;\n  },\n  getImportCode: function () {\n    return getImportCode;\n  },\n  getModuleCode: function () {\n    return getModuleCode;\n  },\n  getExportCode: function () {\n    return getExportCode;\n  },\n  resolveRequests: function () {\n    return resolveRequests;\n  },\n  isUrlRequestable: function () {\n    return isUrlRequestable;\n  },\n  sort: function () {\n    return sort;\n  }\n});\nconst _url = require(\"url\");\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nconst _loaderutils3 = require(\"next/dist/compiled/loader-utils3\");\nconst _postcssmodulesvalues = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/postcss-modules-values\"));\nconst _postcssmoduleslocalbydefault = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/postcss-modules-local-by-default\"));\nconst _postcssmodulesextractimports = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/postcss-modules-extract-imports\"));\nconst _postcssmodulesscope = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/postcss-modules-scope\"));\nconst _camelcase = /*#__PURE__*/_interop_require_default(require(\"./camelcase\"));\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst whitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\";\nconst unescapeRegExp = new RegExp(`\\\\\\\\([\\\\da-f]{1,6}${whitespace}?|(${whitespace})|.)`, \"ig\");\nconst matchNativeWin32Path = /^[A-Z]:[/\\\\]|^\\\\\\\\/i;\nfunction unescape(str) {\n  return str.replace(unescapeRegExp, (_, escaped, escapedWhitespace) => {\n    const high = `0x${escaped}` - 0x10000;\n    /* eslint-disable line-comment-position */ // NaN means non-codepoint\n    // Workaround erroneous numeric interpretation of +\"0x\"\n    // eslint-disable-next-line no-self-compare\n    return high !== high || escapedWhitespace ? escaped : high < 0 ? String.fromCharCode(high + 0x10000) :\n    // eslint-disable-next-line no-bitwise\n    String.fromCharCode(high >> 10 | 0xd800, high & 0x3ff | 0xdc00);\n    /* eslint-enable line-comment-position */\n  });\n}\n\nfunction normalizePath(file) {\n  return _path.default.sep === \"\\\\\" ? file.replace(/\\\\/g, \"/\") : file;\n}\nfunction fixedEncodeURIComponent(str) {\n  return str.replace(/[!'()*]/g, c => `%${c.charCodeAt(0).toString(16)}`);\n}\nfunction normalizeUrl(url, isStringValue) {\n  let normalizedUrl = url;\n  if (isStringValue && /\\\\(\\n|\\r\\n|\\r|\\f)/.test(normalizedUrl)) {\n    normalizedUrl = normalizedUrl.replace(/\\\\(\\n|\\r\\n|\\r|\\f)/g, \"\");\n  }\n  if (matchNativeWin32Path.test(url)) {\n    try {\n      normalizedUrl = decodeURIComponent(normalizedUrl);\n    } catch (error) {\n      // Ignores invalid and broken URLs and try to resolve them as is\n    }\n    return normalizedUrl;\n  }\n  normalizedUrl = unescape(normalizedUrl);\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\n  if (isDataUrl(url)) {\n    return fixedEncodeURIComponent(normalizedUrl);\n  }\n  try {\n    normalizedUrl = decodeURI(normalizedUrl);\n  } catch (error) {\n    // Ignores invalid and broken URLs and try to resolve them as is\n  }\n  return normalizedUrl;\n}\nfunction requestify(url, rootContext) {\n  if (/^file:/i.test(url)) {\n    return (0, _url.fileURLToPath)(url);\n  }\n  if (/^[a-z][a-z0-9+.-]*:/i.test(url)) {\n    return url;\n  }\n  return url.charAt(0) === \"/\" ? (0, _loaderutils3.urlToRequest)(url, rootContext) : (0, _loaderutils3.urlToRequest)(url);\n}\nfunction getFilter(filter, resourcePath) {\n  return (...args) => {\n    if (typeof filter === \"function\") {\n      return filter(...args, resourcePath);\n    }\n    return true;\n  };\n}\nfunction shouldUseImportPlugin(options) {\n  if (options.modules.exportOnlyLocals) {\n    return false;\n  }\n  if (typeof options.import === \"boolean\") {\n    return options.import;\n  }\n  return true;\n}\nfunction shouldUseURLPlugin(options) {\n  if (options.modules.exportOnlyLocals) {\n    return false;\n  }\n  if (typeof options.url === \"boolean\") {\n    return options.url;\n  }\n  return true;\n}\nfunction shouldUseModulesPlugins(options) {\n  return options.modules.compileType === \"module\";\n}\nfunction shouldUseIcssPlugin(options) {\n  return options.icss === true || Boolean(options.modules);\n}\nfunction getModulesPlugins(options, loaderContext, meta) {\n  const {\n    mode,\n    getLocalIdent,\n    localIdentName,\n    localIdentContext,\n    localIdentHashPrefix,\n    localIdentRegExp\n  } = options.modules;\n  let plugins = [];\n  try {\n    plugins = [_postcssmodulesvalues.default, (0, _postcssmoduleslocalbydefault.default)({\n      mode\n    }), (0, _postcssmodulesextractimports.default)(), (0, _postcssmodulesscope.default)({\n      generateScopedName(exportName) {\n        return getLocalIdent(loaderContext, localIdentName, exportName, {\n          context: localIdentContext,\n          hashPrefix: localIdentHashPrefix,\n          regExp: localIdentRegExp\n        }, meta);\n      },\n      exportGlobals: options.modules.exportGlobals\n    })];\n  } catch (error) {\n    loaderContext.emitError(error);\n  }\n  return plugins;\n}\nconst IS_NATIVE_WIN32_PATH = /^[a-z]:[/\\\\]|^\\\\\\\\/i;\nconst ABSOLUTE_SCHEME = /^[a-z0-9+\\-.]+:/i;\nfunction getURLType(source) {\n  if (source[0] === \"/\") {\n    if (source[1] === \"/\") {\n      return \"scheme-relative\";\n    }\n    return \"path-absolute\";\n  }\n  if (IS_NATIVE_WIN32_PATH.test(source)) {\n    return \"path-absolute\";\n  }\n  return ABSOLUTE_SCHEME.test(source) ? \"absolute\" : \"path-relative\";\n}\nfunction normalizeSourceMap(map, resourcePath) {\n  let newMap = map;\n  // Some loader emit source map as string\n  // Strip any JSON XSSI avoidance prefix from the string (as documented in the source maps specification), and then parse the string as JSON.\n  if (typeof newMap === \"string\") {\n    newMap = JSON.parse(newMap);\n  }\n  delete newMap.file;\n  const {\n    sourceRoot\n  } = newMap;\n  delete newMap.sourceRoot;\n  if (newMap.sources) {\n    // Source maps should use forward slash because it is URLs (https://github.com/mozilla/source-map/issues/91)\n    // We should normalize path because previous loaders like `sass-loader` using backslash when generate source map\n    newMap.sources = newMap.sources.map(source => {\n      // Non-standard syntax from `postcss`\n      if (source.indexOf(\"<\") === 0) {\n        return source;\n      }\n      const sourceType = getURLType(source);\n      // Do no touch `scheme-relative` and `absolute` URLs\n      if (sourceType === \"path-relative\" || sourceType === \"path-absolute\") {\n        const absoluteSource = sourceType === \"path-relative\" && sourceRoot ? _path.default.resolve(sourceRoot, normalizePath(source)) : normalizePath(source);\n        return _path.default.relative(_path.default.dirname(resourcePath), absoluteSource);\n      }\n      return source;\n    });\n  }\n  return newMap;\n}\nfunction getPreRequester({\n  loaders,\n  loaderIndex\n}) {\n  const cache = Object.create(null);\n  return number => {\n    if (cache[number]) {\n      return cache[number];\n    }\n    if (number === false) {\n      cache[number] = \"\";\n    } else {\n      const loadersRequest = loaders.slice(loaderIndex, loaderIndex + 1 + (typeof number !== \"number\" ? 0 : number)).map(x => x.request).join(\"!\");\n      cache[number] = `-!${loadersRequest}!`;\n    }\n    return cache[number];\n  };\n}\nfunction getImportCode(imports, options) {\n  let code = \"\";\n  for (const item of imports) {\n    const {\n      importName,\n      url,\n      icss\n    } = item;\n    if (options.esModule) {\n      if (icss && options.modules.namedExport) {\n        code += `import ${options.modules.exportOnlyLocals ? \"\" : `${importName}, `}* as ${importName}_NAMED___ from ${url};\\n`;\n      } else {\n        code += `import ${importName} from ${url};\\n`;\n      }\n    } else {\n      code += `var ${importName} = require(${url});\\n`;\n    }\n  }\n  return code ? `// Imports\\n${code}` : \"\";\n}\nfunction normalizeSourceMapForRuntime(map, loaderContext) {\n  const resultMap = map ? map.toJSON() : null;\n  if (resultMap) {\n    delete resultMap.file;\n    resultMap.sourceRoot = \"\";\n    resultMap.sources = resultMap.sources.map(source => {\n      // Non-standard syntax from `postcss`\n      if (source.indexOf(\"<\") === 0) {\n        return source;\n      }\n      const sourceType = getURLType(source);\n      if (sourceType !== \"path-relative\") {\n        return source;\n      }\n      const resourceDirname = _path.default.dirname(loaderContext.resourcePath);\n      const absoluteSource = _path.default.resolve(resourceDirname, source);\n      const contextifyPath = normalizePath(_path.default.relative(loaderContext.rootContext, absoluteSource));\n      return `webpack://${contextifyPath}`;\n    });\n  }\n  return JSON.stringify(resultMap);\n}\nfunction getModuleCode(result, api, replacements, options, loaderContext) {\n  if (options.modules.exportOnlyLocals === true) {\n    return \"\";\n  }\n  const sourceMapValue = options.sourceMap ? `,${normalizeSourceMapForRuntime(result.map, loaderContext)}` : \"\";\n  let code = JSON.stringify(result.css);\n  let beforeCode = `var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(${options.sourceMap});\\n`;\n  for (const item of api) {\n    const {\n      url,\n      media,\n      dedupe\n    } = item;\n    beforeCode += url ? `___CSS_LOADER_EXPORT___.push([module.id, ${JSON.stringify(`@import url(${url});`)}${media ? `, ${JSON.stringify(media)}` : \"\"}]);\\n` : `___CSS_LOADER_EXPORT___.i(${item.importName}${media ? `, ${JSON.stringify(media)}` : dedupe ? ', \"\"' : \"\"}${dedupe ? \", true\" : \"\"});\\n`;\n  }\n  for (const item of replacements) {\n    const {\n      replacementName,\n      importName,\n      localName\n    } = item;\n    if (localName) {\n      code = code.replace(new RegExp(replacementName, \"g\"), () => options.modules.namedExport ? `\" + ${importName}_NAMED___[${JSON.stringify((0, _camelcase.default)(localName))}] + \"` : `\" + ${importName}.locals[${JSON.stringify(localName)}] + \"`);\n    } else {\n      const {\n        hash,\n        needQuotes\n      } = item;\n      const getUrlOptions = [...(hash ? [`hash: ${JSON.stringify(hash)}`] : []), ...(needQuotes ? \"needQuotes: true\" : [])];\n      const preparedOptions = getUrlOptions.length > 0 ? `, { ${getUrlOptions.join(\", \")} }` : \"\";\n      beforeCode += `var ${replacementName} = ___CSS_LOADER_GET_URL_IMPORT___(${importName}${preparedOptions});\\n`;\n      code = code.replace(new RegExp(replacementName, \"g\"), () => `\" + ${replacementName} + \"`);\n    }\n  }\n  return `${beforeCode}// Module\\n___CSS_LOADER_EXPORT___.push([module.id, ${code}, \"\"${sourceMapValue}]);\\n`;\n}\nfunction dashesCamelCase(str) {\n  return str.replace(/-+(\\w)/g, (_match, firstLetter) => firstLetter.toUpperCase());\n}\nfunction getExportCode(exports1, replacements, options) {\n  let code = \"// Exports\\n\";\n  let localsCode = \"\";\n  const addExportToLocalsCode = (name, value) => {\n    if (options.modules.namedExport) {\n      localsCode += `export const ${(0, _camelcase.default)(name)} = ${JSON.stringify(value)};\\n`;\n    } else {\n      if (localsCode) {\n        localsCode += `,\\n`;\n      }\n      localsCode += `\\t${JSON.stringify(name)}: ${JSON.stringify(value)}`;\n    }\n  };\n  for (const {\n    name,\n    value\n  } of exports1) {\n    switch (options.modules.exportLocalsConvention) {\n      case \"camelCase\":\n        {\n          addExportToLocalsCode(name, value);\n          const modifiedName = (0, _camelcase.default)(name);\n          if (modifiedName !== name) {\n            addExportToLocalsCode(modifiedName, value);\n          }\n          break;\n        }\n      case \"camelCaseOnly\":\n        {\n          addExportToLocalsCode((0, _camelcase.default)(name), value);\n          break;\n        }\n      case \"dashes\":\n        {\n          addExportToLocalsCode(name, value);\n          const modifiedName = dashesCamelCase(name);\n          if (modifiedName !== name) {\n            addExportToLocalsCode(modifiedName, value);\n          }\n          break;\n        }\n      case \"dashesOnly\":\n        {\n          addExportToLocalsCode(dashesCamelCase(name), value);\n          break;\n        }\n      case \"asIs\":\n      default:\n        addExportToLocalsCode(name, value);\n        break;\n    }\n  }\n  for (const item of replacements) {\n    const {\n      replacementName,\n      localName\n    } = item;\n    if (localName) {\n      const {\n        importName\n      } = item;\n      localsCode = localsCode.replace(new RegExp(replacementName, \"g\"), () => {\n        if (options.modules.namedExport) {\n          return `\" + ${importName}_NAMED___[${JSON.stringify((0, _camelcase.default)(localName))}] + \"`;\n        } else if (options.modules.exportOnlyLocals) {\n          return `\" + ${importName}[${JSON.stringify(localName)}] + \"`;\n        }\n        return `\" + ${importName}.locals[${JSON.stringify(localName)}] + \"`;\n      });\n    } else {\n      localsCode = localsCode.replace(new RegExp(replacementName, \"g\"), () => `\" + ${replacementName} + \"`);\n    }\n  }\n  if (options.modules.exportOnlyLocals) {\n    code += options.modules.namedExport ? localsCode : `${options.esModule ? \"export default\" : \"module.exports =\"} {\\n${localsCode}\\n};\\n`;\n    return code;\n  }\n  if (localsCode) {\n    code += options.modules.namedExport ? localsCode : `___CSS_LOADER_EXPORT___.locals = {\\n${localsCode}\\n};\\n`;\n  }\n  code += `${options.esModule ? \"export default\" : \"module.exports =\"} ___CSS_LOADER_EXPORT___;\\n`;\n  return code;\n}\nasync function resolveRequests(resolve, context, possibleRequests) {\n  return resolve(context, possibleRequests[0]).then(result => {\n    return result;\n  }).catch(error => {\n    const [, ...tailPossibleRequests] = possibleRequests;\n    if (tailPossibleRequests.length === 0) {\n      throw error;\n    }\n    return resolveRequests(resolve, context, tailPossibleRequests);\n  });\n}\nfunction isUrlRequestable(url) {\n  // Protocol-relative URLs\n  if (/^\\/\\//.test(url)) {\n    return false;\n  }\n  // `file:` protocol\n  if (/^file:/i.test(url)) {\n    return true;\n  }\n  // Absolute URLs\n  if (/^[a-z][a-z0-9+.-]*:/i.test(url)) {\n    return true;\n  }\n  // `#` URLs\n  if (/^#/.test(url)) {\n    return false;\n  }\n  return true;\n}\nfunction sort(a, b) {\n  return a.index - b.index;\n}\nfunction isDataUrl(url) {\n  if (/^data:/i.test(url)) {\n    return true;\n  }\n  return false;\n}","map":{"version":3,"names":["isDataUrl","shouldUseModulesPlugins","shouldUseImportPlugin","shouldUseURLPlugin","shouldUseIcssPlugin","normalizeUrl","requestify","getFilter","getModulesPlugins","normalizeSourceMap","getPreRequester","getImportCode","getModuleCode","getExportCode","resolveRequests","isUrlRequestable","sort","whitespace","unescapeRegExp","RegExp","matchNativeWin32Path","unescape","str","replace","_","escaped","escapedWhitespace","high","String","fromCharCode","normalizePath","file","_path","default","sep","fixedEncodeURIComponent","c","charCodeAt","toString","url","isStringValue","normalizedUrl","test","decodeURIComponent","error","decodeURI","rootContext","_url","fileURLToPath","charAt","_loaderutils3","urlToRequest","filter","resourcePath","args","options","modules","exportOnlyLocals","import","compileType","icss","Boolean","loaderContext","meta","mode","getLocalIdent","localIdentName","localIdentContext","localIdentHashPrefix","localIdentRegExp","plugins","_postcssmodulesvalues","_postcssmoduleslocalbydefault","_postcssmodulesextractimports","_postcssmodulesscope","generateScopedName","exportName","context","hashPrefix","regExp","exportGlobals","emitError","IS_NATIVE_WIN32_PATH","ABSOLUTE_SCHEME","getURLType","source","map","newMap","JSON","parse","sourceRoot","sources","indexOf","sourceType","absoluteSource","resolve","relative","dirname","loaders","loaderIndex","cache","Object","create","number","loadersRequest","slice","x","request","join","imports","code","item","importName","esModule","namedExport","normalizeSourceMapForRuntime","resultMap","toJSON","resourceDirname","contextifyPath","stringify","result","api","replacements","sourceMapValue","sourceMap","css","beforeCode","media","dedupe","replacementName","localName","_camelcase","hash","needQuotes","getUrlOptions","preparedOptions","length","dashesCamelCase","_match","firstLetter","toUpperCase","exports1","localsCode","addExportToLocalsCode","name","value","exportLocalsConvention","modifiedName","possibleRequests","then","catch","tailPossibleRequests","a","b","index"],"sources":["../../../../../../src/build/webpack/loaders/css-loader/src/utils.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}