{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"getCssInlinedLinkTags\", {\n  enumerable: true,\n  get: function () {\n    return getCssInlinedLinkTags;\n  }\n});\nfunction getCssInlinedLinkTags(clientReferenceManifest, filePath, injectedCSS, collectNewCSSImports) {\n  const filePathWithoutExt = filePath.replace(/\\.[^.]+$/, \"\");\n  const chunks = new Set();\n  const entryCSSFiles = clientReferenceManifest.entryCSSFiles[filePathWithoutExt];\n  if (entryCSSFiles) {\n    for (const file of entryCSSFiles) {\n      if (!injectedCSS.has(file)) {\n        if (collectNewCSSImports) {\n          injectedCSS.add(file);\n        }\n        chunks.add(file);\n      }\n    }\n  }\n  return [...chunks];\n}","map":{"version":3,"names":["getCssInlinedLinkTags","clientReferenceManifest","filePath","injectedCSS","collectNewCSSImports","filePathWithoutExt","replace","chunks","Set","entryCSSFiles","file","has","add"],"sources":["../../../src/server/app-render/get-css-inlined-link-tags.tsx"],"sourcesContent":[null],"mappings":";;;;;+BAKgB;;;WAAAA,qBAAA;;;AAAT,SAASA,sBACdC,uBAAgD,EAChDC,QAAgB,EAChBC,WAAwB,EACxBC,oBAA8B;EAE9B,MAAMC,kBAAA,GAAqBH,QAAA,CAASI,OAAO,CAAC,YAAY;EACxD,MAAMC,MAAA,GAAS,IAAIC,GAAA;EAEnB,MAAMC,aAAA,GACJR,uBAAA,CAAwBQ,aAAa,CAACJ,kBAAA,CAAmB;EAE3D,IAAII,aAAA,EAAe;IACjB,KAAK,MAAMC,IAAA,IAAQD,aAAA,EAAe;MAChC,IAAI,CAACN,WAAA,CAAYQ,GAAG,CAACD,IAAA,GAAO;QAC1B,IAAIN,oBAAA,EAAsB;UACxBD,WAAA,CAAYS,GAAG,CAACF,IAAA;QAClB;QACAH,MAAA,CAAOK,GAAG,CAACF,IAAA;MACb;IACF;EACF;EAEA,OAAO,C,GAAIH,MAAA,CAAO;AACpB"},"metadata":{},"sourceType":"script","externalDependencies":[]}