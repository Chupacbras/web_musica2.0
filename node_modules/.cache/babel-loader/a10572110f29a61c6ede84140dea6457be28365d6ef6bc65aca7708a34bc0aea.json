{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-use-before-define */\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  ServerClientChangeType: null,\n  getSupportedArchTriples: null,\n  lockfilePatchPromise: null,\n  loadBindings: null,\n  isWasm: null,\n  transform: null,\n  transformSync: null,\n  minify: null,\n  minifySync: null,\n  parse: null,\n  getBinaryMetadata: null,\n  initCustomTraceSubscriber: null,\n  initHeapProfiler: null,\n  teardownHeapProfiler: null,\n  teardownTraceSubscriber: null,\n  teardownCrashReporter: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  ServerClientChangeType: function () {\n    return ServerClientChangeType;\n  },\n  getSupportedArchTriples: function () {\n    return getSupportedArchTriples;\n  },\n  lockfilePatchPromise: function () {\n    return lockfilePatchPromise;\n  },\n  loadBindings: function () {\n    return loadBindings;\n  },\n  isWasm: function () {\n    return isWasm;\n  },\n  transform: function () {\n    return transform;\n  },\n  transformSync: function () {\n    return transformSync;\n  },\n  minify: function () {\n    return minify;\n  },\n  minifySync: function () {\n    return minifySync;\n  },\n  parse: function () {\n    return parse;\n  },\n  getBinaryMetadata: function () {\n    return getBinaryMetadata;\n  },\n  initCustomTraceSubscriber: function () {\n    return initCustomTraceSubscriber;\n  },\n  initHeapProfiler: function () {\n    return initHeapProfiler;\n  },\n  teardownHeapProfiler: function () {\n    return teardownHeapProfiler;\n  },\n  teardownTraceSubscriber: function () {\n    return teardownTraceSubscriber;\n  },\n  teardownCrashReporter: function () {\n    return teardownCrashReporter;\n  }\n});\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nconst _url = require(\"url\");\nconst _os = require(\"os\");\nconst _triples = require(\"next/dist/compiled/@napi-rs/triples\");\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"../output/log\"));\nconst _options = require(\"./options\");\nconst _swcloadfailure = require(\"../../telemetry/events/swc-load-failure\");\nconst _patchincorrectlockfile = require(\"../../lib/patch-incorrect-lockfile\");\nconst _downloadswc = require(\"../../lib/download-swc\");\nconst _util = require(\"util\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nconst nextVersion = \"13.5.3\";\nconst ArchName = (0, _os.arch)();\nconst PlatformName = (0, _os.platform)();\nconst infoLog = (...args) => {\n  if (process.env.NEXT_PRIVATE_BUILD_WORKER) {\n    return;\n  }\n  if (process.env.DEBUG) {\n    _log.info(...args);\n  }\n};\nconst getSupportedArchTriples = () => {\n  const {\n    darwin,\n    win32,\n    linux,\n    freebsd,\n    android\n  } = _triples.platformArchTriples;\n  return {\n    darwin,\n    win32: {\n      arm64: win32.arm64,\n      ia32: win32.ia32.filter(triple => triple.abi === \"msvc\"),\n      x64: win32.x64.filter(triple => triple.abi === \"msvc\")\n    },\n    linux: {\n      // linux[x64] includes `gnux32` abi, with x64 arch.\n      x64: linux.x64.filter(triple => triple.abi !== \"gnux32\"),\n      arm64: linux.arm64,\n      // This target is being deprecated, however we keep it in `knownDefaultWasmFallbackTriples` for now\n      arm: linux.arm\n    },\n    // Below targets are being deprecated, however we keep it in `knownDefaultWasmFallbackTriples` for now\n    freebsd: {\n      x64: freebsd.x64\n    },\n    android: {\n      arm64: android.arm64,\n      arm: android.arm\n    }\n  };\n};\nconst triples = (() => {\n  var _supportedArchTriples_PlatformName, _platformArchTriples_PlatformName;\n  const supportedArchTriples = getSupportedArchTriples();\n  const targetTriple = (_supportedArchTriples_PlatformName = supportedArchTriples[PlatformName]) == null ? void 0 : _supportedArchTriples_PlatformName[ArchName];\n  // If we have supported triple, return it right away\n  if (targetTriple) {\n    return targetTriple;\n  }\n  // If there isn't corresponding target triple in `supportedArchTriples`, check if it's excluded from original raw triples\n  // Otherwise, it is completely unsupported platforms.\n  let rawTargetTriple = (_platformArchTriples_PlatformName = _triples.platformArchTriples[PlatformName]) == null ? void 0 : _platformArchTriples_PlatformName[ArchName];\n  if (rawTargetTriple) {\n    _log.warn(`Trying to load next-swc for target triple ${rawTargetTriple}, but there next-swc does not have native bindings support`);\n  } else {\n    _log.warn(`Trying to load next-swc for unsupported platforms ${PlatformName}/${ArchName}`);\n  }\n  return [];\n})();\n// Allow to specify an absolute path to the custom turbopack binary to load.\n// If one of env variables is set, `loadNative` will try to use any turbo-* interfaces from specified\n// binary instead. This will not affect existing swc's transform, or other interfaces. This is thin,\n// naive interface - `loadBindings` will not validate neither path nor the binary.\n//\n// Note these are internal flag: there's no stability, feature guarantee.\nconst __INTERNAL_CUSTOM_TURBOPACK_BINDINGS = process.env.__INTERNAL_CUSTOM_TURBOPACK_BINDINGS;\nfunction checkVersionMismatch(pkgData) {\n  const version = pkgData.version;\n  if (version && version !== nextVersion) {\n    _log.warn(`Mismatching @next/swc version, detected: ${version} while Next.js is on ${nextVersion}. Please ensure these match`);\n  }\n}\n// These are the platforms we'll try to load wasm bindings first,\n// only try to load native bindings if loading wasm binding somehow fails.\n// Fallback to native binding is for migration period only,\n// once we can verify loading-wasm-first won't cause visible regressions,\n// we'll not include native bindings for these platform at all.\nconst knownDefaultWasmFallbackTriples = [\"x86_64-unknown-freebsd\", \"aarch64-linux-android\", \"arm-linux-androideabi\", \"armv7-unknown-linux-gnueabihf\", \"i686-pc-windows-msvc\"];\n// The last attempt's error code returned when cjs require to native bindings fails.\n// If node.js throws an error without error code, this should be `unknown` instead of undefined.\n// For the wasm-first targets (`knownDefaultWasmFallbackTriples`) this will be `unsupported_target`.\nlet lastNativeBindingsLoadErrorCode = undefined;\nlet nativeBindings;\nlet wasmBindings;\nlet downloadWasmPromise;\nlet pendingBindings;\nlet swcTraceFlushGuard;\nlet swcHeapProfilerFlushGuard;\nlet swcCrashReporterFlushGuard;\nlet downloadNativeBindingsPromise = undefined;\nconst lockfilePatchPromise = {};\nasync function loadBindings() {\n  if (pendingBindings) {\n    return pendingBindings;\n  }\n  if (process.platform === \"darwin\") {\n    // rust needs stdout to be blocking, otherwise it will throw an error (on macOS at least) when writing a lot of data (logs) to it\n    // see https://github.com/napi-rs/napi-rs/issues/1630\n    // and https://github.com/nodejs/node/blob/main/doc/api/process.md#a-note-on-process-io\n    if (process.stdout._handle != null) {\n      // @ts-ignore\n      process.stdout._handle.setBlocking(true);\n    }\n    if (process.stderr._handle != null) {\n      // @ts-ignore\n      process.stderr._handle.setBlocking(true);\n    }\n  }\n  pendingBindings = new Promise(async (resolve, _reject) => {\n    if (!lockfilePatchPromise.cur) {\n      // always run lockfile check once so that it gets patched\n      // even if it doesn't fail to load locally\n      lockfilePatchPromise.cur = (0, _patchincorrectlockfile.patchIncorrectLockfile)(process.cwd()).catch(console.error);\n    }\n    let attempts = [];\n    const disableWasmFallback = process.env.NEXT_DISABLE_SWC_WASM;\n    const shouldLoadWasmFallbackFirst = !disableWasmFallback && triples.some(triple => !!(triple == null ? void 0 : triple.raw) && knownDefaultWasmFallbackTriples.includes(triple.raw));\n    if (shouldLoadWasmFallbackFirst) {\n      lastNativeBindingsLoadErrorCode = \"unsupported_target\";\n      const fallbackBindings = await tryLoadWasmWithFallback(attempts);\n      if (fallbackBindings) {\n        return resolve(fallbackBindings);\n      }\n    }\n    // Trickle down loading `fallback` bindings:\n    //\n    // - First, try to load native bindings installed in node_modules.\n    // - If that fails with `ERR_MODULE_NOT_FOUND`, treat it as case of https://github.com/npm/cli/issues/4828\n    // that host system where generated package lock is not matching to the guest system running on, try to manually\n    // download corresponding target triple and load it. This won't be triggered if native bindings are failed to load\n    // with other reasons than `ERR_MODULE_NOT_FOUND`.\n    // - Lastly, falls back to wasm binding where possible.\n    try {\n      return resolve(loadNative());\n    } catch (a) {\n      if (Array.isArray(a) && a.every(m => m.includes(\"it was not installed\"))) {\n        let fallbackBindings = await tryLoadNativeWithFallback(attempts);\n        if (fallbackBindings) {\n          return resolve(fallbackBindings);\n        }\n      }\n      attempts = attempts.concat(a);\n    }\n    // For these platforms we already tried to load wasm and failed, skip reattempt\n    if (!shouldLoadWasmFallbackFirst && !disableWasmFallback) {\n      const fallbackBindings = await tryLoadWasmWithFallback(attempts);\n      if (fallbackBindings) {\n        return resolve(fallbackBindings);\n      }\n    }\n    logLoadFailure(attempts, true);\n  });\n  return pendingBindings;\n}\nasync function tryLoadNativeWithFallback(attempts) {\n  const nativeBindingsDirectory = _path.default.join(_path.default.dirname(require.resolve(\"next/package.json\")), \"next-swc-fallback\");\n  if (!downloadNativeBindingsPromise) {\n    downloadNativeBindingsPromise = (0, _downloadswc.downloadNativeNextSwc)(nextVersion, nativeBindingsDirectory, triples.map(triple => triple.platformArchABI));\n  }\n  await downloadNativeBindingsPromise;\n  try {\n    let bindings = loadNative(nativeBindingsDirectory);\n    return bindings;\n  } catch (a) {\n    attempts.concat(a);\n  }\n  return undefined;\n}\nasync function tryLoadWasmWithFallback(attempts) {\n  try {\n    let bindings = await loadWasm(\"\");\n    // @ts-expect-error TODO: this event has a wrong type.\n    (0, _swcloadfailure.eventSwcLoadFailure)({\n      wasm: \"enabled\",\n      nativeBindingsErrorCode: lastNativeBindingsLoadErrorCode\n    });\n    return bindings;\n  } catch (a) {\n    attempts = attempts.concat(a);\n  }\n  try {\n    // if not installed already download wasm package on-demand\n    // we download to a custom directory instead of to node_modules\n    // as node_module import attempts are cached and can't be re-attempted\n    // x-ref: https://github.com/nodejs/modules/issues/307\n    const wasmDirectory = _path.default.join(_path.default.dirname(require.resolve(\"next/package.json\")), \"wasm\");\n    if (!downloadWasmPromise) {\n      downloadWasmPromise = (0, _downloadswc.downloadWasmSwc)(nextVersion, wasmDirectory);\n    }\n    await downloadWasmPromise;\n    let bindings = await loadWasm((0, _url.pathToFileURL)(wasmDirectory).href);\n    // @ts-expect-error TODO: this event has a wrong type.\n    (0, _swcloadfailure.eventSwcLoadFailure)({\n      wasm: \"fallback\",\n      nativeBindingsErrorCode: lastNativeBindingsLoadErrorCode\n    });\n    // still log native load attempts so user is\n    // aware it failed and should be fixed\n    for (const attempt of attempts) {\n      _log.warn(attempt);\n    }\n    return bindings;\n  } catch (a) {\n    attempts = attempts.concat(a);\n  }\n}\nfunction loadBindingsSync() {\n  let attempts = [];\n  try {\n    return loadNative();\n  } catch (a) {\n    attempts = attempts.concat(a);\n  }\n  // we can leverage the wasm bindings if they are already\n  // loaded\n  if (wasmBindings) {\n    return wasmBindings;\n  }\n  logLoadFailure(attempts);\n}\nlet loggingLoadFailure = false;\nfunction logLoadFailure(attempts, triedWasm = false) {\n  // make sure we only emit the event and log the failure once\n  if (loggingLoadFailure) return;\n  loggingLoadFailure = true;\n  for (let attempt of attempts) {\n    _log.warn(attempt);\n  }\n  // @ts-expect-error TODO: this event has a wrong type.\n  (0, _swcloadfailure.eventSwcLoadFailure)({\n    wasm: triedWasm ? \"failed\" : undefined,\n    nativeBindingsErrorCode: lastNativeBindingsLoadErrorCode\n  }).then(() => lockfilePatchPromise.cur || Promise.resolve()).finally(() => {\n    _log.error(`Failed to load SWC binary for ${PlatformName}/${ArchName}, see more info here: https://nextjs.org/docs/messages/failed-loading-swc`);\n    process.exit(1);\n  });\n}\nvar ServerClientChangeType;\n(function (ServerClientChangeType) {\n  ServerClientChangeType[\"Server\"] = \"Server\";\n  ServerClientChangeType[\"Client\"] = \"Client\";\n  ServerClientChangeType[\"Both\"] = \"Both\";\n})(ServerClientChangeType || (ServerClientChangeType = {}));\n// TODO(sokra) Support wasm option.\nfunction bindingToApi(binding, _wasm) {\n  const cancel = new class Cancel extends Error {}();\n  /**\n  * Utility function to ensure all variants of an enum are handled.\n  */\n  function invariant(never, computeMessage) {\n    throw new Error(`Invariant: ${computeMessage(never)}`);\n  }\n  async function withErrorCause(fn) {\n    try {\n      return await fn();\n    } catch (nativeError) {\n      throw new Error(nativeError.message, {\n        cause: nativeError\n      });\n    }\n  }\n  /**\n  * Calls a native function and streams the result.\n  * If useBuffer is true, all values will be preserved, potentially buffered\n  * if consumed slower than produced. Else, only the latest value will be\n  * preserved.\n  */\n  function subscribe(useBuffer, nativeFunction) {\n    // A buffer of produced items. This will only contain values if the\n    // consumer is slower than the producer.\n    let buffer = [];\n    // A deferred value waiting for the next produced item. This will only\n    // exist if the consumer is faster than the producer.\n    let waiting;\n    let canceled = false;\n    // The native function will call this every time it emits a new result. We\n    // either need to notify a waiting consumer, or buffer the new result until\n    // the consumer catches up.\n    const emitResult = (err, value) => {\n      if (waiting) {\n        let {\n          resolve,\n          reject\n        } = waiting;\n        waiting = undefined;\n        if (err) reject(err);else resolve(value);\n      } else {\n        const item = {\n          err,\n          value\n        };\n        if (useBuffer) buffer.push(item);else buffer[0] = item;\n      }\n    };\n    const iterator = async function* () {\n      const task = await withErrorCause(() => nativeFunction(emitResult));\n      try {\n        while (!canceled) {\n          if (buffer.length > 0) {\n            const item = buffer.shift();\n            if (item.err) throw item.err;\n            yield item.value;\n          } else {\n            // eslint-disable-next-line no-loop-func\n            yield new Promise((resolve, reject) => {\n              waiting = {\n                resolve,\n                reject\n              };\n            });\n          }\n        }\n      } catch (e) {\n        if (e === cancel) return;\n        throw e;\n      } finally {\n        binding.rootTaskDispose(task);\n      }\n    }();\n    iterator.return = async () => {\n      canceled = true;\n      if (waiting) waiting.reject(cancel);\n      return {\n        value: undefined,\n        done: true\n      };\n    };\n    return iterator;\n  }\n  /**\n  * Like Promise.race, except that we return an array of results so that you\n  * know which promise won. This also allows multiple promises to resolve\n  * before the awaiter finally continues execution, making multiple values\n  * available.\n  */\n  function race(promises) {\n    return new Promise((resolve, reject) => {\n      const results = [];\n      for (let i = 0; i < promises.length; i++) {\n        const value = promises[i];\n        Promise.resolve(value).then(v => {\n          results[i] = v;\n          resolve(results);\n        }, e => {\n          reject(e);\n        });\n      }\n    });\n  }\n  async function rustifyProjectOptions(options) {\n    return {\n      ...options,\n      nextConfig: await serializeNextConfig(options.nextConfig),\n      jsConfig: JSON.stringify(options.jsConfig ?? {}),\n      env: Object.entries(options.env).map(([name, value]) => ({\n        name,\n        value\n      }))\n    };\n  }\n  class ProjectImpl {\n    constructor(nativeProject) {\n      this._nativeProject = nativeProject;\n    }\n    async update(options) {\n      await withErrorCause(async () => binding.projectUpdate(this._nativeProject, await rustifyProjectOptions(options)));\n    }\n    entrypointsSubscribe() {\n      const subscription = subscribe(false, async callback => binding.projectEntrypointsSubscribe(this._nativeProject, callback));\n      return async function* () {\n        for await (const entrypoints of subscription) {\n          const routes = new Map();\n          for (const {\n            pathname,\n            ...nativeRoute\n          } of entrypoints.routes) {\n            let route;\n            const routeType = nativeRoute.type;\n            switch (routeType) {\n              case \"page\":\n                route = {\n                  type: \"page\",\n                  htmlEndpoint: new EndpointImpl(nativeRoute.htmlEndpoint),\n                  dataEndpoint: new EndpointImpl(nativeRoute.dataEndpoint)\n                };\n                break;\n              case \"page-api\":\n                route = {\n                  type: \"page-api\",\n                  endpoint: new EndpointImpl(nativeRoute.endpoint)\n                };\n                break;\n              case \"app-page\":\n                route = {\n                  type: \"app-page\",\n                  htmlEndpoint: new EndpointImpl(nativeRoute.htmlEndpoint),\n                  rscEndpoint: new EndpointImpl(nativeRoute.rscEndpoint)\n                };\n                break;\n              case \"app-route\":\n                route = {\n                  type: \"app-route\",\n                  endpoint: new EndpointImpl(nativeRoute.endpoint)\n                };\n                break;\n              case \"conflict\":\n                route = {\n                  type: \"conflict\"\n                };\n                break;\n              default:\n                const _exhaustiveCheck = routeType;\n                invariant(nativeRoute, () => `Unknown route type: ${_exhaustiveCheck}`);\n            }\n            routes.set(pathname, route);\n          }\n          const napiMiddlewareToMiddleware = middleware => ({\n            endpoint: new EndpointImpl(middleware.endpoint),\n            runtime: middleware.runtime,\n            matcher: middleware.matcher\n          });\n          const middleware = entrypoints.middleware ? napiMiddlewareToMiddleware(entrypoints.middleware) : undefined;\n          yield {\n            routes,\n            middleware,\n            pagesDocumentEndpoint: new EndpointImpl(entrypoints.pagesDocumentEndpoint),\n            pagesAppEndpoint: new EndpointImpl(entrypoints.pagesAppEndpoint),\n            pagesErrorEndpoint: new EndpointImpl(entrypoints.pagesErrorEndpoint),\n            issues: entrypoints.issues,\n            diagnostics: entrypoints.diagnostics\n          };\n        }\n      }();\n    }\n    hmrEvents(identifier) {\n      const subscription = subscribe(true, async callback => binding.projectHmrEvents(this._nativeProject, identifier, callback));\n      return subscription;\n    }\n    hmrIdentifiersSubscribe() {\n      const subscription = subscribe(false, async callback => binding.projectHmrIdentifiersSubscribe(this._nativeProject, callback));\n      return subscription;\n    }\n    updateInfoSubscribe() {\n      const subscription = subscribe(true, async callback => binding.projectUpdateInfoSubscribe(this._nativeProject, callback));\n      return subscription;\n    }\n  }\n  class EndpointImpl {\n    constructor(nativeEndpoint) {\n      this._nativeEndpoint = nativeEndpoint;\n    }\n    async writeToDisk() {\n      return await withErrorCause(() => binding.endpointWriteToDisk(this._nativeEndpoint));\n    }\n    async changed() {\n      const serverSubscription = subscribe(false, async callback => binding.endpointServerChangedSubscribe(await this._nativeEndpoint, callback));\n      const clientSubscription = subscribe(false, async callback => binding.endpointClientChangedSubscribe(await this._nativeEndpoint, callback));\n      // The subscriptions will always emit once, which is the initial\n      // computation. This is not a change, so swallow it.\n      await Promise.all([serverSubscription.next(), clientSubscription.next()]);\n      return async function* () {\n        try {\n          while (true) {\n            const [server, client] = await race([serverSubscription.next(), clientSubscription.next()]);\n            const done = (server == null ? void 0 : server.done) || (client == null ? void 0 : client.done);\n            if (done) {\n              break;\n            }\n            if (server && client) {\n              yield {\n                issues: server.value.issues.concat(client.value.issues),\n                diagnostics: server.value.diagnostics.concat(client.value.diagnostics),\n                type: \"Both\"\n              };\n            } else if (server) {\n              yield {\n                ...server.value,\n                type: \"Server\"\n              };\n            } else {\n              yield {\n                ...client.value,\n                type: \"Client\"\n              };\n            }\n          }\n        } finally {\n          serverSubscription.return == null ? void 0 : serverSubscription.return.call(serverSubscription);\n          clientSubscription.return == null ? void 0 : clientSubscription.return.call(clientSubscription);\n        }\n      }();\n    }\n  }\n  async function serializeNextConfig(nextConfig) {\n    var _nextConfig_experimental_turbo, _nextConfig_experimental;\n    let nextConfigSerializable = nextConfig;\n    nextConfigSerializable.generateBuildId = await (nextConfig.generateBuildId == null ? void 0 : nextConfig.generateBuildId.call(nextConfig));\n    // TODO: these functions takes arguments, have to be supported in a different way\n    nextConfigSerializable.exportPathMap = {};\n    nextConfigSerializable.webpack = nextConfig.webpack && {};\n    if ((_nextConfig_experimental = nextConfig.experimental) == null ? void 0 : (_nextConfig_experimental_turbo = _nextConfig_experimental.turbo) == null ? void 0 : _nextConfig_experimental_turbo.rules) {\n      var _nextConfig_experimental_turbo1;\n      ensureLoadersHaveSerializableOptions((_nextConfig_experimental_turbo1 = nextConfig.experimental.turbo) == null ? void 0 : _nextConfig_experimental_turbo1.rules);\n    }\n    nextConfigSerializable.modularizeImports = nextConfigSerializable.modularizeImports ? Object.fromEntries(Object.entries(nextConfigSerializable.modularizeImports).map(([mod, config]) => [mod, {\n      ...config,\n      transform: typeof config.transform === \"string\" ? config.transform : Object.entries(config.transform).map(([key, value]) => [key, value])\n    }])) : undefined;\n    return JSON.stringify(nextConfigSerializable, null, 2);\n  }\n  function ensureLoadersHaveSerializableOptions(turbopackRules) {\n    for (const [glob, rule] of Object.entries(turbopackRules)) {\n      const loaderItems = Array.isArray(rule) ? rule : rule.loaders;\n      for (const loaderItem of loaderItems) {\n        if (typeof loaderItem !== \"string\" && !(0, _util.isDeepStrictEqual)(loaderItem, JSON.parse(JSON.stringify(loaderItem)))) {\n          throw new Error(`loader ${loaderItem.loader} for match \"${glob}\" does not have serializable options. Ensure that options passed are plain JavaScript objects and values.`);\n        }\n      }\n    }\n  }\n  async function createProject(options, turboEngineOptions) {\n    return new ProjectImpl(await binding.projectNew(await rustifyProjectOptions(options), turboEngineOptions || {}));\n  }\n  return createProject;\n}\nasync function loadWasm(importPath = \"\") {\n  if (wasmBindings) {\n    return wasmBindings;\n  }\n  let attempts = [];\n  for (let pkg of [\"@next/swc-wasm-nodejs\", \"@next/swc-wasm-web\"]) {\n    try {\n      let pkgPath = pkg;\n      if (importPath) {\n        // the import path must be exact when not in node_modules\n        pkgPath = _path.default.join(importPath, pkg, \"wasm.js\");\n      }\n      let bindings = await import(pkgPath);\n      if (pkg === \"@next/swc-wasm-web\") {\n        bindings = await bindings.default();\n      }\n      infoLog(\"next-swc build: wasm build @next/swc-wasm-web\");\n      // Note wasm binary does not support async intefaces yet, all async\n      // interface coereces to sync interfaces.\n      wasmBindings = {\n        isWasm: true,\n        transform(src, options) {\n          // TODO: we can remove fallback to sync interface once new stable version of next-swc gets published (current v12.2)\n          return (bindings == null ? void 0 : bindings.transform) ? bindings.transform(src.toString(), options) : Promise.resolve(bindings.transformSync(src.toString(), options));\n        },\n        transformSync(src, options) {\n          return bindings.transformSync(src.toString(), options);\n        },\n        minify(src, options) {\n          return (bindings == null ? void 0 : bindings.minify) ? bindings.minify(src.toString(), options) : Promise.resolve(bindings.minifySync(src.toString(), options));\n        },\n        minifySync(src, options) {\n          return bindings.minifySync(src.toString(), options);\n        },\n        parse(src, options) {\n          return (bindings == null ? void 0 : bindings.parse) ? bindings.parse(src.toString(), options) : Promise.resolve(bindings.parseSync(src.toString(), options));\n        },\n        parseSync(src, options) {\n          const astStr = bindings.parseSync(src.toString(), options);\n          return astStr;\n        },\n        getTargetTriple() {\n          return undefined;\n        },\n        turbo: {\n          startTrace: () => {\n            _log.error(\"Wasm binding does not support trace yet\");\n          },\n          entrypoints: {\n            stream: (turboTasks, rootDir, applicationDir, pageExtensions, callbackFn) => {\n              return bindings.streamEntrypoints(turboTasks, rootDir, applicationDir, pageExtensions, callbackFn);\n            },\n            get: (turboTasks, rootDir, applicationDir, pageExtensions) => {\n              return bindings.getEntrypoints(turboTasks, rootDir, applicationDir, pageExtensions);\n            }\n          }\n        },\n        mdx: {\n          compile: (src, options) => bindings.mdxCompile(src, getMdxOptions(options)),\n          compileSync: (src, options) => bindings.mdxCompileSync(src, getMdxOptions(options))\n        }\n      };\n      return wasmBindings;\n    } catch (e) {\n      // Only log attempts for loading wasm when loading as fallback\n      if (importPath) {\n        if ((e == null ? void 0 : e.code) === \"ERR_MODULE_NOT_FOUND\") {\n          attempts.push(`Attempted to load ${pkg}, but it was not installed`);\n        } else {\n          attempts.push(`Attempted to load ${pkg}, but an error occurred: ${e.message ?? e}`);\n        }\n      }\n    }\n  }\n  throw attempts;\n}\nfunction loadNative(importPath) {\n  if (nativeBindings) {\n    return nativeBindings;\n  }\n  const customBindings = !!__INTERNAL_CUSTOM_TURBOPACK_BINDINGS ? require(__INTERNAL_CUSTOM_TURBOPACK_BINDINGS) : null;\n  let bindings;\n  let attempts = [];\n  for (const triple of triples) {\n    try {\n      bindings = require(`@next/swc/native/next-swc.${triple.platformArchABI}.node`);\n      infoLog(\"next-swc build: local built @next/swc\");\n      break;\n    } catch (e) {}\n  }\n  if (!bindings) {\n    for (const triple of triples) {\n      let pkg = importPath ? _path.default.join(importPath, `@next/swc-${triple.platformArchABI}`, `next-swc.${triple.platformArchABI}.node`) : `@next/swc-${triple.platformArchABI}`;\n      try {\n        bindings = require(pkg);\n        if (!importPath) {\n          checkVersionMismatch(require(`${pkg}/package.json`));\n        }\n        break;\n      } catch (e) {\n        if ((e == null ? void 0 : e.code) === \"MODULE_NOT_FOUND\") {\n          attempts.push(`Attempted to load ${pkg}, but it was not installed`);\n        } else {\n          attempts.push(`Attempted to load ${pkg}, but an error occurred: ${e.message ?? e}`);\n        }\n        lastNativeBindingsLoadErrorCode = (e == null ? void 0 : e.code) ?? \"unknown\";\n      }\n    }\n  }\n  if (bindings) {\n    // Initialize crash reporter, as earliest as possible from any point of import.\n    // The first-time import to next-swc is not predicatble in the import tree of next.js, which makes\n    // we can't rely on explicit manual initialization as similar to trace reporter.\n    if (!swcCrashReporterFlushGuard) {\n      // Crash reports in next-swc should be treated in the same way we treat telemetry to opt out.\n      /* TODO: temporarily disable initialization while confirming logistics.\n      let telemetry = new Telemetry({ distDir: process.cwd() })\n      if (telemetry.isEnabled) {\n      swcCrashReporterFlushGuard = bindings.initCrashReporter?.()\n      }*/}\n    nativeBindings = {\n      isWasm: false,\n      transform(src, options) {\n        var _options_jsc;\n        const isModule = typeof src !== undefined && typeof src !== \"string\" && !Buffer.isBuffer(src);\n        options = options || {};\n        if (options == null ? void 0 : (_options_jsc = options.jsc) == null ? void 0 : _options_jsc.parser) {\n          options.jsc.parser.syntax = options.jsc.parser.syntax ?? \"ecmascript\";\n        }\n        return bindings.transform(isModule ? JSON.stringify(src) : src, isModule, toBuffer(options));\n      },\n      transformSync(src, options) {\n        var _options_jsc;\n        if (typeof src === undefined) {\n          throw new Error(\"transformSync doesn't implement reading the file from filesystem\");\n        } else if (Buffer.isBuffer(src)) {\n          throw new Error(\"transformSync doesn't implement taking the source code as Buffer\");\n        }\n        const isModule = typeof src !== \"string\";\n        options = options || {};\n        if (options == null ? void 0 : (_options_jsc = options.jsc) == null ? void 0 : _options_jsc.parser) {\n          options.jsc.parser.syntax = options.jsc.parser.syntax ?? \"ecmascript\";\n        }\n        return bindings.transformSync(isModule ? JSON.stringify(src) : src, isModule, toBuffer(options));\n      },\n      minify(src, options) {\n        return bindings.minify(toBuffer(src), toBuffer(options ?? {}));\n      },\n      minifySync(src, options) {\n        return bindings.minifySync(toBuffer(src), toBuffer(options ?? {}));\n      },\n      parse(src, options) {\n        return bindings.parse(src, toBuffer(options ?? {}));\n      },\n      getTargetTriple: bindings.getTargetTriple,\n      initCustomTraceSubscriber: bindings.initCustomTraceSubscriber,\n      teardownTraceSubscriber: bindings.teardownTraceSubscriber,\n      initHeapProfiler: bindings.initHeapProfiler,\n      teardownHeapProfiler: bindings.teardownHeapProfiler,\n      teardownCrashReporter: bindings.teardownCrashReporter,\n      turbo: {\n        nextBuild: options => {\n          initHeapProfiler();\n          const ret = (customBindings ?? bindings).nextBuild(options);\n          return ret;\n        },\n        startTrace: (options = {}, turboTasks) => {\n          initHeapProfiler();\n          const ret = (customBindings ?? bindings).runTurboTracing(toBuffer({\n            exact: true,\n            ...options\n          }), turboTasks);\n          return ret;\n        },\n        createTurboTasks: memoryLimit => bindings.createTurboTasks(memoryLimit),\n        entrypoints: {\n          stream: (turboTasks, rootDir, applicationDir, pageExtensions, fn) => {\n            return (customBindings ?? bindings).streamEntrypoints(turboTasks, rootDir, applicationDir, pageExtensions, fn);\n          },\n          get: (turboTasks, rootDir, applicationDir, pageExtensions) => {\n            return (customBindings ?? bindings).getEntrypoints(turboTasks, rootDir, applicationDir, pageExtensions);\n          }\n        },\n        createProject: bindingToApi(customBindings ?? bindings, false)\n      },\n      mdx: {\n        compile: (src, options) => bindings.mdxCompile(src, toBuffer(getMdxOptions(options))),\n        compileSync: (src, options) => bindings.mdxCompileSync(src, toBuffer(getMdxOptions(options)))\n      }\n    };\n    return nativeBindings;\n  }\n  throw attempts;\n}\n/// Build a mdx options object contains default values that\n/// can be parsed with serde_wasm_bindgen.\nfunction getMdxOptions(options = {}) {\n  const ret = {\n    ...options,\n    development: options.development ?? false,\n    jsx: options.jsx ?? false,\n    parse: options.parse ?? {\n      gfmStrikethroughSingleTilde: true,\n      mathTextSingleDollar: true\n    }\n  };\n  return ret;\n}\nfunction toBuffer(t) {\n  return Buffer.from(JSON.stringify(t));\n}\nasync function isWasm() {\n  let bindings = await loadBindings();\n  return bindings.isWasm;\n}\nasync function transform(src, options) {\n  let bindings = await loadBindings();\n  return bindings.transform(src, options);\n}\nfunction transformSync(src, options) {\n  let bindings = loadBindingsSync();\n  return bindings.transformSync(src, options);\n}\nasync function minify(src, options) {\n  let bindings = await loadBindings();\n  return bindings.minify(src, options);\n}\nfunction minifySync(src, options) {\n  let bindings = loadBindingsSync();\n  return bindings.minifySync(src, options);\n}\nasync function parse(src, options) {\n  let bindings = await loadBindings();\n  let parserOptions = (0, _options.getParserOptions)(options);\n  return bindings.parse(src, parserOptions).then(astStr => JSON.parse(astStr));\n}\nfunction getBinaryMetadata() {\n  var _bindings_getTargetTriple;\n  let bindings;\n  try {\n    bindings = loadNative();\n  } catch (e) {\n    // Suppress exceptions, this fn allows to fail to load native bindings\n  }\n  return {\n    target: bindings == null ? void 0 : (_bindings_getTargetTriple = bindings.getTargetTriple) == null ? void 0 : _bindings_getTargetTriple.call(bindings)\n  };\n}\nconst initCustomTraceSubscriber = traceFileName => {\n  if (!swcTraceFlushGuard) {\n    // Wasm binary doesn't support trace emission\n    let bindings = loadNative();\n    swcTraceFlushGuard = bindings.initCustomTraceSubscriber(traceFileName);\n  }\n};\nconst initHeapProfiler = () => {\n  try {\n    if (!swcHeapProfilerFlushGuard) {\n      let bindings = loadNative();\n      swcHeapProfilerFlushGuard = bindings.initHeapProfiler();\n    }\n  } catch (_) {\n    // Suppress exceptions, this fn allows to fail to load native bindings\n  }\n};\nconst teardownHeapProfiler = (() => {\n  let flushed = false;\n  return () => {\n    if (!flushed) {\n      flushed = true;\n      try {\n        let bindings = loadNative();\n        if (swcHeapProfilerFlushGuard) {\n          bindings.teardownHeapProfiler(swcHeapProfilerFlushGuard);\n        }\n      } catch (e) {\n        // Suppress exceptions, this fn allows to fail to load native bindings\n      }\n    }\n  };\n})();\nconst teardownTraceSubscriber = (() => {\n  let flushed = false;\n  return () => {\n    if (!flushed) {\n      flushed = true;\n      try {\n        let bindings = loadNative();\n        if (swcTraceFlushGuard) {\n          bindings.teardownTraceSubscriber(swcTraceFlushGuard);\n        }\n      } catch (e) {\n        // Suppress exceptions, this fn allows to fail to load native bindings\n      }\n    }\n  };\n})();\nconst teardownCrashReporter = (() => {\n  let flushed = false;\n  return () => {\n    if (!flushed) {\n      flushed = true;\n      try {\n        let bindings = loadNative();\n        if (swcCrashReporterFlushGuard) {\n          bindings.teardownCrashReporter(swcCrashReporterFlushGuard);\n        }\n      } catch (e) {\n        // Suppress exceptions, this fn allows to fail to load native bindings\n      }\n    }\n  };\n})();","map":{"version":3,"names":["getSupportedArchTriples","lockfilePatchPromise","loadBindings","isWasm","transform","transformSync","minify","minifySync","parse","getBinaryMetadata","initCustomTraceSubscriber","initHeapProfiler","teardownHeapProfiler","teardownTraceSubscriber","teardownCrashReporter","nextVersion","ArchName","_os","arch","PlatformName","platform","infoLog","args","process","env","NEXT_PRIVATE_BUILD_WORKER","DEBUG","_log","info","darwin","win32","linux","freebsd","android","_triples","platformArchTriples","arm64","ia32","filter","triple","abi","x64","arm","triples","_supportedArchTriples_PlatformName","_platformArchTriples_PlatformName","supportedArchTriples","targetTriple","rawTargetTriple","warn","__INTERNAL_CUSTOM_TURBOPACK_BINDINGS","checkVersionMismatch","pkgData","version","knownDefaultWasmFallbackTriples","lastNativeBindingsLoadErrorCode","undefined","nativeBindings","wasmBindings","downloadWasmPromise","pendingBindings","swcTraceFlushGuard","swcHeapProfilerFlushGuard","swcCrashReporterFlushGuard","downloadNativeBindingsPromise","stdout","_handle","setBlocking","stderr","Promise","resolve","_reject","cur","_patchincorrectlockfile","patchIncorrectLockfile","cwd","catch","console","error","attempts","disableWasmFallback","NEXT_DISABLE_SWC_WASM","shouldLoadWasmFallbackFirst","some","raw","includes","fallbackBindings","tryLoadWasmWithFallback","loadNative","a","Array","isArray","every","m","tryLoadNativeWithFallback","concat","logLoadFailure","nativeBindingsDirectory","_path","default","join","dirname","require","_downloadswc","downloadNativeNextSwc","map","platformArchABI","bindings","loadWasm","_swcloadfailure","eventSwcLoadFailure","wasm","nativeBindingsErrorCode","wasmDirectory","downloadWasmSwc","_url","pathToFileURL","href","attempt","loadBindingsSync","loggingLoadFailure","triedWasm","then","finally","exit","ServerClientChangeType","bindingToApi","binding","_wasm","cancel","Cancel","Error","invariant","never","computeMessage","withErrorCause","fn","nativeError","message","cause","subscribe","useBuffer","nativeFunction","buffer","waiting","canceled","emitResult","err","value","reject","item","push","iterator","task","length","shift","e","rootTaskDispose","return","done","race","promises","results","i","v","rustifyProjectOptions","options","nextConfig","serializeNextConfig","jsConfig","JSON","stringify","Object","entries","name","ProjectImpl","constructor","nativeProject","_nativeProject","update","projectUpdate","entrypointsSubscribe","subscription","callback","projectEntrypointsSubscribe","entrypoints","routes","Map","pathname","nativeRoute","route","routeType","type","htmlEndpoint","EndpointImpl","dataEndpoint","endpoint","rscEndpoint","_exhaustiveCheck","set","napiMiddlewareToMiddleware","middleware","runtime","matcher","pagesDocumentEndpoint","pagesAppEndpoint","pagesErrorEndpoint","issues","diagnostics","hmrEvents","identifier","projectHmrEvents","hmrIdentifiersSubscribe","projectHmrIdentifiersSubscribe","updateInfoSubscribe","projectUpdateInfoSubscribe","nativeEndpoint","_nativeEndpoint","writeToDisk","endpointWriteToDisk","changed","serverSubscription","endpointServerChangedSubscribe","clientSubscription","endpointClientChangedSubscribe","all","next","server","client","call","_nextConfig_experimental_turbo","_nextConfig_experimental","nextConfigSerializable","generateBuildId","exportPathMap","webpack","experimental","turbo","rules","_nextConfig_experimental_turbo1","ensureLoadersHaveSerializableOptions","modularizeImports","fromEntries","mod","config","key","turbopackRules","glob","rule","loaderItems","loaders","loaderItem","_util","isDeepStrictEqual","loader","createProject","turboEngineOptions","projectNew","importPath","pkg","pkgPath","src","toString","parseSync","astStr","getTargetTriple","startTrace","stream","turboTasks","rootDir","applicationDir","pageExtensions","callbackFn","streamEntrypoints","get","getEntrypoints","mdx","compile","mdxCompile","getMdxOptions","compileSync","mdxCompileSync","code","customBindings","_options_jsc","isModule","Buffer","isBuffer","jsc","parser","syntax","toBuffer","nextBuild","ret","runTurboTracing","exact","createTurboTasks","memoryLimit","development","jsx","gfmStrikethroughSingleTilde","mathTextSingleDollar","t","from","parserOptions","_options","getParserOptions","_bindings_getTargetTriple","target","traceFileName","_","flushed"],"sources":["../../../src/build/swc/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}