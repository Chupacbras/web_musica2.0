{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  findPageFile: null,\n  createValidFileMatcher: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  findPageFile: function () {\n    return findPageFile;\n  },\n  createValidFileMatcher: function () {\n    return createValidFileMatcher;\n  }\n});\nconst _fileexists = require(\"../../lib/file-exists\");\nconst _getpagepaths = require(\"../../shared/lib/page-path/get-page-paths\");\nconst _nonnullable = require(\"../../lib/non-nullable\");\nconst _path = require(\"path\");\nconst _fs = require(\"fs\");\nconst _log = require(\"../../build/output/log\");\nconst _chalk = /*#__PURE__*/_interop_require_default(require(\"../../lib/chalk\"));\nconst _ismetadataroute = require(\"../../lib/metadata/is-metadata-route\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nasync function isTrueCasePagePath(pagePath, pagesDir) {\n  const pageSegments = (0, _path.normalize)(pagePath).split(_path.sep).filter(Boolean);\n  const segmentExistsPromises = pageSegments.map(async (segment, i) => {\n    const segmentParentDir = (0, _path.join)(pagesDir, ...pageSegments.slice(0, i));\n    const parentDirEntries = await _fs.promises.readdir(segmentParentDir);\n    return parentDirEntries.includes(segment);\n  });\n  return (await Promise.all(segmentExistsPromises)).every(Boolean);\n}\nasync function findPageFile(pagesDir, normalizedPagePath, pageExtensions, isAppDir) {\n  const pagePaths = (0, _getpagepaths.getPagePaths)(normalizedPagePath, pageExtensions, isAppDir);\n  const [existingPath, ...others] = (await Promise.all(pagePaths.map(async path => {\n    const filePath = (0, _path.join)(pagesDir, path);\n    try {\n      return (await (0, _fileexists.fileExists)(filePath)) ? path : null;\n    } catch (err) {\n      var _err_code;\n      if (!(err == null ? void 0 : (_err_code = err.code) == null ? void 0 : _err_code.includes(\"ENOTDIR\"))) throw err;\n    }\n    return null;\n  }))).filter(_nonnullable.nonNullable);\n  if (!existingPath) {\n    return null;\n  }\n  if (!(await isTrueCasePagePath(existingPath, pagesDir))) {\n    return null;\n  }\n  if (others.length > 0) {\n    (0, _log.warn)(`Duplicate page detected. ${_chalk.default.cyan((0, _path.join)(\"pages\", existingPath))} and ${_chalk.default.cyan((0, _path.join)(\"pages\", others[0]))} both resolve to ${_chalk.default.cyan(normalizedPagePath)}.`);\n  }\n  return existingPath;\n}\nfunction createValidFileMatcher(pageExtensions, appDirPath) {\n  const getExtensionRegexString = extensions => `(?:${extensions.join(\"|\")})`;\n  const validExtensionFileRegex = new RegExp(\"\\\\.\" + getExtensionRegexString(pageExtensions) + \"$\");\n  const leafOnlyPageFileRegex = new RegExp(`(^(page|route)|[\\\\\\\\/](page|route))\\\\.${getExtensionRegexString(pageExtensions)}$`);\n  const rootNotFoundFileRegex = new RegExp(`^not-found\\\\.${getExtensionRegexString(pageExtensions)}$`);\n  /** TODO-METADATA: support other metadata routes\n  *  regex for:\n  *\n  * /robots.txt|<ext>\n  * /sitemap.xml|<ext>\n  * /favicon.ico\n  * /manifest.json|<ext>\n  * <route>/icon.png|jpg|<ext>\n  * <route>/apple-touch-icon.png|jpg|<ext>\n  *\n  */ /**\n     * Match the file if it's a metadata route file, static: if the file is a static metadata file.\n     * It needs to be a file which doesn't match the custom metadata routes e.g. `app/robots.txt/route.js`\n     */\n  function isMetadataFile(filePath) {\n    const appDirRelativePath = appDirPath ? filePath.replace(appDirPath, \"\") : filePath;\n    return (0, _ismetadataroute.isMetadataRouteFile)(appDirRelativePath, pageExtensions, true);\n  }\n  // Determine if the file is leaf node page file or route file under layouts,\n  // 'page.<extension>' | 'route.<extension>'\n  function isAppRouterPage(filePath) {\n    return leafOnlyPageFileRegex.test(filePath) || isMetadataFile(filePath);\n  }\n  function isPageFile(filePath) {\n    return validExtensionFileRegex.test(filePath) || isMetadataFile(filePath);\n  }\n  function isRootNotFound(filePath) {\n    if (!appDirPath) {\n      return false;\n    }\n    if (!filePath.startsWith(appDirPath + _path.sep)) {\n      return false;\n    }\n    const rest = filePath.slice(appDirPath.length + 1);\n    return rootNotFoundFileRegex.test(rest);\n  }\n  return {\n    isPageFile,\n    isAppRouterPage,\n    isMetadataFile,\n    isRootNotFound\n  };\n}","map":{"version":3,"names":["findPageFile","createValidFileMatcher","isTrueCasePagePath","pagePath","pagesDir","pageSegments","_path","normalize","split","sep","filter","Boolean","segmentExistsPromises","map","segment","i","segmentParentDir","join","slice","parentDirEntries","_fs","promises","readdir","includes","Promise","all","every","normalizedPagePath","pageExtensions","isAppDir","pagePaths","_getpagepaths","getPagePaths","existingPath","others","path","filePath","_fileexists","fileExists","err","_err_code","code","_nonnullable","nonNullable","length","_log","warn","_chalk","default","cyan","appDirPath","getExtensionRegexString","extensions","validExtensionFileRegex","RegExp","leafOnlyPageFileRegex","rootNotFoundFileRegex","isMetadataFile","appDirRelativePath","replace","_ismetadataroute","isMetadataRouteFile","isAppRouterPage","test","isPageFile","isRootNotFound","startsWith","rest"],"sources":["../../../src/server/lib/find-page-file.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}