{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"setupDev\", {\n  enumerable: true,\n  get: function () {\n    return setupDev;\n  }\n});\nconst _swc = require(\"../../../build/swc\");\nconst _ws = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/ws\"));\nconst _fs = /*#__PURE__*/_interop_require_default(require(\"fs\"));\nconst _url = /*#__PURE__*/_interop_require_default(require(\"url\"));\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nconst _querystring = /*#__PURE__*/_interop_require_default(require(\"querystring\"));\nconst _watchpack = /*#__PURE__*/_interop_require_default(require(\"watchpack\"));\nconst _env = require(\"@next/env\");\nconst _iserror = /*#__PURE__*/_interop_require_default(require(\"../../../lib/is-error\"));\nconst _findup = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/find-up\"));\nconst _filesystem = require(\"./filesystem\");\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"../../../build/output/log\"));\nconst _hotreloaderwebpack = /*#__PURE__*/_interop_require_wildcard(require(\"../../dev/hot-reloader-webpack\"));\nconst _shared = require(\"../../../trace/shared\");\nconst _loadjsconfig = /*#__PURE__*/_interop_require_default(require(\"../../../build/load-jsconfig\"));\nconst _findpagefile = require(\"../find-page-file\");\nconst _events = require(\"../../../telemetry/events\");\nconst _defineenvplugin = require(\"../../../build/webpack/plugins/define-env-plugin\");\nconst _logappdirerror = require(\"../../dev/log-app-dir-error\");\nconst _utils = require(\"../../../shared/lib/router/utils\");\nconst _entries = require(\"../../../build/entries\");\nconst _verifyTypeScriptSetup = require(\"../../../lib/verifyTypeScriptSetup\");\nconst _verifypartytownsetup = require(\"../../../lib/verify-partytown-setup\");\nconst _routeregex = require(\"../../../shared/lib/router/utils/route-regex\");\nconst _apppaths = require(\"../../../shared/lib/router/utils/app-paths\");\nconst _builddataroute = require(\"./build-data-route\");\nconst _routematcher = require(\"../../../shared/lib/router/utils/route-matcher\");\nconst _normalizepathsep = require(\"../../../shared/lib/page-path/normalize-path-sep\");\nconst _createclientrouterfilter = require(\"../../../lib/create-client-router-filter\");\nconst _absolutepathtopage = require(\"../../../shared/lib/page-path/absolute-path-to-page\");\nconst _generateinterceptionroutesrewrites = require(\"../../../lib/generate-interception-routes-rewrites\");\nconst _store = require(\"../../../build/output/store\");\nconst _constants = require(\"../../../shared/lib/constants\");\nconst _middlewareroutematcher = require(\"../../../shared/lib/router/utils/middleware-route-matcher\");\nconst _buildcontext = require(\"../../../build/build-context\");\nconst _worker = require(\"../../../build/worker\");\nconst _middleware = require(\"next/dist/compiled/@next/react-dev-overlay/dist/middleware\");\nconst _promises = require(\"fs/promises\");\nconst _utils1 = require(\"../../../shared/lib/utils\");\nconst _buildmanifestplugin = require(\"../../../build/webpack/plugins/build-manifest-plugin\");\nconst _shared1 = require(\"../../../build/webpack/plugins/next-types-plugin/shared\");\nconst _pathtoregexp = require(\"next/dist/compiled/path-to-regexp\");\nconst _hotreloadertypes = require(\"../../dev/hot-reloader-types\");\nconst _utils2 = require(\"../../utils\");\nconst _nextjsrequirecachehotreloader = require(\"../../../build/webpack/plugins/nextjs-require-cache-hot-reloader\");\nconst _getmetadataroute = require(\"../../../lib/metadata/get-metadata-route\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nconst wsServer = new _ws.default.Server({\n  noServer: true\n});\nasync function verifyTypeScript(opts) {\n  let usingTypeScript = false;\n  const verifyResult = await (0, _verifyTypeScriptSetup.verifyTypeScriptSetup)({\n    dir: opts.dir,\n    distDir: opts.nextConfig.distDir,\n    intentDirs: [opts.pagesDir, opts.appDir].filter(Boolean),\n    typeCheckPreflight: false,\n    tsconfigPath: opts.nextConfig.typescript.tsconfigPath,\n    disableStaticImages: opts.nextConfig.images.disableStaticImages,\n    hasAppDir: !!opts.appDir,\n    hasPagesDir: !!opts.pagesDir\n  });\n  if (verifyResult.version) {\n    usingTypeScript = true;\n  }\n  return usingTypeScript;\n}\nasync function startWatcher(opts) {\n  const {\n    nextConfig,\n    appDir,\n    pagesDir,\n    dir\n  } = opts;\n  const {\n    useFileSystemPublicRoutes\n  } = nextConfig;\n  const usingTypeScript = await verifyTypeScript(opts);\n  const distDir = _path.default.join(opts.dir, opts.nextConfig.distDir);\n  (0, _shared.setGlobal)(\"distDir\", distDir);\n  (0, _shared.setGlobal)(\"phase\", _constants.PHASE_DEVELOPMENT_SERVER);\n  const validFileMatcher = (0, _findpagefile.createValidFileMatcher)(nextConfig.pageExtensions, appDir);\n  async function propagateToWorkers(field, args) {\n    var _opts_renderWorkers_app, _opts_renderWorkers_pages;\n    await ((_opts_renderWorkers_app = opts.renderWorkers.app) == null ? void 0 : _opts_renderWorkers_app.propagateServerField(opts.dir, field, args));\n    await ((_opts_renderWorkers_pages = opts.renderWorkers.pages) == null ? void 0 : _opts_renderWorkers_pages.propagateServerField(opts.dir, field, args));\n  }\n  const serverFields = {};\n  let hotReloader;\n  if (opts.turbo) {\n    const {\n      loadBindings\n    } = require(\"../../../build/swc\");\n    let bindings = await loadBindings();\n    const {\n      jsConfig\n    } = await (0, _loadjsconfig.default)(dir, opts.nextConfig);\n    // For the debugging purpose, check if createNext or equivalent next instance setup in test cases\n    // works correctly. Normally `run-test` hides output so only will be visible when `--debug` flag is used.\n    if (process.env.TURBOPACK && process.env.NEXT_TEST_MODE) {\n      require(\"console\").log(\"Creating turbopack project\", {\n        dir,\n        testMode: process.env.NEXT_TEST_MODE\n      });\n    }\n    const project = await bindings.turbo.createProject({\n      projectPath: dir,\n      rootPath: opts.nextConfig.experimental.outputFileTracingRoot || dir,\n      nextConfig: opts.nextConfig,\n      jsConfig,\n      watch: true,\n      env: process.env,\n      serverAddr: `127.0.0.1:${opts.port}`\n    });\n    const iter = project.entrypointsSubscribe();\n    const curEntries = new Map();\n    const changeSubscriptions = new Map();\n    let prevMiddleware = undefined;\n    const globalEntries = {\n      app: undefined,\n      document: undefined,\n      error: undefined\n    };\n    let currentEntriesHandlingResolve;\n    let currentEntriesHandling = new Promise(resolve => currentEntriesHandlingResolve = resolve);\n    const hmrPayloads = new Map();\n    const turbopackUpdates = [];\n    let hmrBuilding = false;\n    const issues = new Map();\n    function issueKey(issue) {\n      return `${issue.severity} - ${issue.filePath} - ${issue.title}\\n${issue.description}\\n\\n`;\n    }\n    function formatIssue(issue) {\n      const {\n        filePath,\n        title,\n        description,\n        source,\n        detail\n      } = issue;\n      let formattedTitle = title.replace(/\\n/g, \"\\n    \");\n      let message = \"\";\n      let formattedFilePath = filePath.replace(\"[project]/\", \"\").replaceAll(\"/./\", \"/\").replace(\"\\\\\\\\?\\\\\", \"\");\n      if (source) {\n        const {\n          start,\n          end\n        } = source;\n        message = `${issue.severity} - ${formattedFilePath}:${start.line + 1}:${start.column}  ${formattedTitle}`;\n        if (source.source.content) {\n          const {\n            codeFrameColumns\n          } = require(\"next/dist/compiled/babel/code-frame\");\n          message += \"\\n\\n\" + codeFrameColumns(source.source.content, {\n            start: {\n              line: start.line + 1,\n              column: start.column + 1\n            },\n            end: {\n              line: end.line + 1,\n              column: end.column + 1\n            }\n          }, {\n            forceColor: true\n          });\n        }\n      } else {\n        message = `${formattedTitle}`;\n      }\n      if (description) {\n        message += `\\n${description.replace(/\\n/g, \"\\n    \")}`;\n      }\n      if (detail) {\n        message += `\\n${detail.replace(/\\n/g, \"\\n    \")}`;\n      }\n      return message;\n    }\n    class ModuleBuildError extends Error {}\n    function processIssues(name, result, throwIssue = false) {\n      const oldSet = issues.get(name) ?? new Map();\n      const newSet = new Map();\n      issues.set(name, newSet);\n      for (const issue of result.issues) {\n        // TODO better formatting\n        if (issue.severity !== \"error\" && issue.severity !== \"fatal\") continue;\n        const key = issueKey(issue);\n        const formatted = formatIssue(issue);\n        if (!throwIssue && !oldSet.has(key)) {\n          console.error(`  ⚠ ${key} ${formatted}\\n\\n`);\n        }\n        newSet.set(key, issue);\n        if (throwIssue) {\n          throw new ModuleBuildError(formatted);\n        }\n      }\n      for (const issue of oldSet.keys()) {\n        if (!newSet.has(issue)) {\n          console.error(`✅ ${name} fixed ${issue}`);\n        }\n      }\n    }\n    async function processResult(result) {\n      const hasAppPaths = result.serverPaths.some(p => p.startsWith(\"server/app\"));\n      if (hasAppPaths) {\n        (0, _nextjsrequirecachehotreloader.deleteAppClientCache)();\n      }\n      for (const file of result.serverPaths.map(p => _path.default.join(distDir, p))) {\n        (0, _nextjsrequirecachehotreloader.deleteCache)(file);\n      }\n      return result;\n    }\n    let hmrHash = 0;\n    const sendHmrDebounce = (0, _utils2.debounce)(() => {\n      const errors = new Map();\n      for (const [, issueMap] of issues) {\n        for (const [key, issue] of issueMap) {\n          if (errors.has(key)) continue;\n          const message = formatIssue(issue);\n          errors.set(key, {\n            message,\n            details: issue.detail\n          });\n        }\n      }\n      hotReloader.send({\n        action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.SYNC,\n        hash: String(++hmrHash),\n        errors: [...errors.values()],\n        warnings: [],\n        versionInfo: {\n          installed: \"0.0.0\",\n          staleness: \"unknown\"\n        }\n      });\n      hmrBuilding = false;\n      if (errors.size === 0) {\n        for (const payload of hmrPayloads.values()) {\n          hotReloader.send(payload);\n        }\n        hmrPayloads.clear();\n        if (turbopackUpdates.length > 0) {\n          hotReloader.send({\n            type: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_MESSAGE,\n            data: turbopackUpdates\n          });\n          turbopackUpdates.length = 0;\n        }\n      }\n    }, 2);\n    function sendHmr(key, id, payload) {\n      // We've detected a change in some part of the graph. If nothing has\n      // been inserted into building yet, then this is the first change\n      // emitted, but their may be many more coming.\n      if (!hmrBuilding) {\n        hotReloader.send({\n          action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.BUILDING\n        });\n        hmrBuilding = true;\n      }\n      hmrPayloads.set(`${key}:${id}`, payload);\n      sendHmrDebounce();\n    }\n    function sendTurbopackMessage(payload) {\n      // We've detected a change in some part of the graph. If nothing has\n      // been inserted into building yet, then this is the first change\n      // emitted, but their may be many more coming.\n      if (!hmrBuilding) {\n        hotReloader.send({\n          action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.BUILDING\n        });\n        hmrBuilding = true;\n      }\n      turbopackUpdates.push(payload);\n      sendHmrDebounce();\n    }\n    async function loadPartialManifest(name, pageName, type = \"pages\") {\n      const manifestPath = _path.default.posix.join(distDir, `server`, type === \"app-route\" ? \"app\" : type, type === \"middleware\" ? \"\" : pageName === \"/\" ? \"index\" : pageName === \"/index\" || pageName.startsWith(\"/index/\") ? `/index${pageName}` : pageName, type === \"app\" ? \"page\" : type === \"app-route\" ? \"route\" : \"\", name);\n      return JSON.parse(await (0, _promises.readFile)(_path.default.posix.join(manifestPath), \"utf-8\"));\n    }\n    const buildManifests = new Map();\n    const appBuildManifests = new Map();\n    const pagesManifests = new Map();\n    const appPathsManifests = new Map();\n    const middlewareManifests = new Map();\n    const clientToHmrSubscription = new Map();\n    const clients = new Set();\n    async function loadMiddlewareManifest(pageName, type) {\n      middlewareManifests.set(pageName, await loadPartialManifest(_constants.MIDDLEWARE_MANIFEST, pageName, type));\n    }\n    async function loadBuildManifest(pageName, type = \"pages\") {\n      buildManifests.set(pageName, await loadPartialManifest(_constants.BUILD_MANIFEST, pageName, type));\n    }\n    async function loadAppBuildManifest(pageName) {\n      appBuildManifests.set(pageName, await loadPartialManifest(_constants.APP_BUILD_MANIFEST, pageName, \"app\"));\n    }\n    async function loadPagesManifest(pageName) {\n      pagesManifests.set(pageName, await loadPartialManifest(_constants.PAGES_MANIFEST, pageName));\n    }\n    async function loadAppPathManifest(pageName, type = \"app\") {\n      appPathsManifests.set(pageName, await loadPartialManifest(_constants.APP_PATHS_MANIFEST, pageName, type));\n    }\n    const buildingReported = new Set();\n    async function changeSubscription(page, endpoint, makePayload) {\n      if (!endpoint || changeSubscriptions.has(page)) return;\n      const changed = await endpoint.changed();\n      changeSubscriptions.set(page, changed);\n      for await (const change of changed) {\n        _store.store.setState({\n          loading: true,\n          trigger: page\n        }, true);\n        processIssues(page, change);\n        const payload = makePayload(page, change);\n        if (payload) sendHmr(\"endpoint-change\", page, payload);\n      }\n    }\n    function clearChangeSubscription(page) {\n      const subscription = changeSubscriptions.get(page);\n      if (subscription) {\n        subscription.return == null ? void 0 : subscription.return.call(subscription);\n        changeSubscriptions.delete(page);\n      }\n      issues.delete(page);\n    }\n    try {\n      async function handleEntries() {\n        for await (const entrypoints of iter) {\n          if (!currentEntriesHandlingResolve) {\n            currentEntriesHandling = new Promise(\n            // eslint-disable-next-line no-loop-func\n            resolve => currentEntriesHandlingResolve = resolve);\n          }\n          globalEntries.app = entrypoints.pagesAppEndpoint;\n          globalEntries.document = entrypoints.pagesDocumentEndpoint;\n          globalEntries.error = entrypoints.pagesErrorEndpoint;\n          curEntries.clear();\n          for (const [pathname, route] of entrypoints.routes) {\n            switch (route.type) {\n              case \"page\":\n              case \"page-api\":\n              case \"app-page\":\n              case \"app-route\":\n                {\n                  curEntries.set(pathname, route);\n                  break;\n                }\n              default:\n                _log.info(`skipping ${pathname} (${route.type})`);\n                break;\n            }\n          }\n          for (const [pathname, subscription] of changeSubscriptions) {\n            if (pathname === \"\") {\n              continue;\n            }\n            if (!curEntries.has(pathname)) {\n              subscription.return == null ? void 0 : subscription.return.call(subscription);\n              changeSubscriptions.delete(pathname);\n            }\n          }\n          const {\n            middleware\n          } = entrypoints;\n          // We check for explicit true/false, since it's initialized to\n          // undefined during the first loop (middlewareChanges event is\n          // unnecessary during the first serve)\n          if (prevMiddleware === true && !middleware) {\n            // Went from middleware to no middleware\n            clearChangeSubscription(\"middleware\");\n            sendHmr(\"entrypoint-change\", \"middleware\", {\n              event: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES\n            });\n          } else if (prevMiddleware === false && middleware) {\n            // Went from no middleware to middleware\n            sendHmr(\"endpoint-change\", \"middleware\", {\n              event: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES\n            });\n          }\n          if (middleware) {\n            var _middlewareManifests_get;\n            const writtenEndpoint = await processResult(await middleware.endpoint.writeToDisk());\n            processIssues(\"middleware\", writtenEndpoint);\n            await loadMiddlewareManifest(\"middleware\", \"middleware\");\n            serverFields.actualMiddlewareFile = \"middleware\";\n            serverFields.middleware = {\n              match: null,\n              page: \"/\",\n              matchers: (_middlewareManifests_get = middlewareManifests.get(\"middleware\")) == null ? void 0 : _middlewareManifests_get.middleware[\"/\"].matchers\n            };\n            changeSubscription(\"middleware\", middleware.endpoint, () => {\n              return {\n                event: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.MIDDLEWARE_CHANGES\n              };\n            });\n            prevMiddleware = true;\n          } else {\n            middlewareManifests.delete(\"middleware\");\n            serverFields.actualMiddlewareFile = undefined;\n            serverFields.middleware = undefined;\n            prevMiddleware = false;\n          }\n          await propagateToWorkers(\"actualMiddlewareFile\", serverFields.actualMiddlewareFile);\n          await propagateToWorkers(\"middleware\", serverFields.middleware);\n          currentEntriesHandlingResolve();\n          currentEntriesHandlingResolve = undefined;\n        }\n      }\n      handleEntries().catch(err => {\n        console.error(err);\n        process.exit(1);\n      });\n    } catch (e) {\n      console.error(e);\n    }\n    function mergeBuildManifests(manifests) {\n      const manifest = {\n        pages: {\n          \"/_app\": []\n        },\n        // Something in next.js depends on these to exist even for app dir rendering\n        devFiles: [],\n        ampDevFiles: [],\n        polyfillFiles: [],\n        lowPriorityFiles: [\"static/development/_ssgManifest.js\", \"static/development/_buildManifest.js\"],\n        rootMainFiles: [],\n        ampFirstPages: []\n      };\n      for (const m of manifests) {\n        Object.assign(manifest.pages, m.pages);\n        if (m.rootMainFiles.length) manifest.rootMainFiles = m.rootMainFiles;\n      }\n      return manifest;\n    }\n    function mergeAppBuildManifests(manifests) {\n      const manifest = {\n        pages: {}\n      };\n      for (const m of manifests) {\n        Object.assign(manifest.pages, m.pages);\n      }\n      return manifest;\n    }\n    function mergePagesManifests(manifests) {\n      const manifest = {};\n      for (const m of manifests) {\n        Object.assign(manifest, m);\n      }\n      return manifest;\n    }\n    function mergeMiddlewareManifests(manifests) {\n      const manifest = {\n        version: 2,\n        middleware: {},\n        sortedMiddleware: [],\n        functions: {}\n      };\n      for (const m of manifests) {\n        Object.assign(manifest.functions, m.functions);\n        Object.assign(manifest.middleware, m.middleware);\n      }\n      for (const fun of Object.values(manifest.functions).concat(Object.values(manifest.middleware))) {\n        for (const matcher of fun.matchers) {\n          if (!matcher.regexp) {\n            matcher.regexp = (0, _pathtoregexp.pathToRegexp)(matcher.originalSource, [], {\n              delimiter: \"/\",\n              sensitive: false,\n              strict: true\n            }).source.replaceAll(\"\\\\/\", \"/\");\n          }\n        }\n      }\n      manifest.sortedMiddleware = Object.keys(manifest.middleware);\n      return manifest;\n    }\n    async function writeFileAtomic(filePath, content) {\n      const tempPath = filePath + \".tmp.\" + Math.random().toString(36).slice(2);\n      try {\n        await (0, _promises.writeFile)(tempPath, content, \"utf-8\");\n        await (0, _promises.rename)(tempPath, filePath);\n      } catch (e) {\n        try {\n          await (0, _promises.unlink)(tempPath);\n        } catch {\n          // ignore\n        }\n        throw e;\n      }\n    }\n    async function writeBuildManifest() {\n      const buildManifest = mergeBuildManifests(buildManifests.values());\n      const buildManifestPath = _path.default.join(distDir, _constants.BUILD_MANIFEST);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(buildManifestPath);\n      await writeFileAtomic(buildManifestPath, JSON.stringify(buildManifest, null, 2));\n      const content = {\n        __rewrites: {\n          afterFiles: [],\n          beforeFiles: [],\n          fallback: []\n        },\n        ...Object.fromEntries([...curEntries.keys()].map(pathname => [pathname, `static/chunks/pages${pathname === \"/\" ? \"/index\" : pathname}.js`])),\n        sortedPages: [...curEntries.keys()]\n      };\n      const buildManifestJs = `self.__BUILD_MANIFEST = ${JSON.stringify(content)};self.__BUILD_MANIFEST_CB && self.__BUILD_MANIFEST_CB()`;\n      await writeFileAtomic(_path.default.join(distDir, \"static\", \"development\", \"_buildManifest.js\"), buildManifestJs);\n      await writeFileAtomic(_path.default.join(distDir, \"static\", \"development\", \"_ssgManifest.js\"), _buildmanifestplugin.srcEmptySsgManifest);\n    }\n    async function writeFallbackBuildManifest() {\n      const fallbackBuildManifest = mergeBuildManifests([buildManifests.get(\"_app\"), buildManifests.get(\"_error\")].filter(Boolean));\n      const fallbackBuildManifestPath = _path.default.join(distDir, `fallback-${_constants.BUILD_MANIFEST}`);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(fallbackBuildManifestPath);\n      await writeFileAtomic(fallbackBuildManifestPath, JSON.stringify(fallbackBuildManifest, null, 2));\n    }\n    async function writeAppBuildManifest() {\n      const appBuildManifest = mergeAppBuildManifests(appBuildManifests.values());\n      const appBuildManifestPath = _path.default.join(distDir, _constants.APP_BUILD_MANIFEST);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(appBuildManifestPath);\n      await writeFileAtomic(appBuildManifestPath, JSON.stringify(appBuildManifest, null, 2));\n    }\n    async function writePagesManifest() {\n      const pagesManifest = mergePagesManifests(pagesManifests.values());\n      const pagesManifestPath = _path.default.join(distDir, \"server\", _constants.PAGES_MANIFEST);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(pagesManifestPath);\n      await writeFileAtomic(pagesManifestPath, JSON.stringify(pagesManifest, null, 2));\n    }\n    async function writeAppPathsManifest() {\n      const appPathsManifest = mergePagesManifests(appPathsManifests.values());\n      const appPathsManifestPath = _path.default.join(distDir, \"server\", _constants.APP_PATHS_MANIFEST);\n      (0, _nextjsrequirecachehotreloader.deleteCache)(appPathsManifestPath);\n      await writeFileAtomic(appPathsManifestPath, JSON.stringify(appPathsManifest, null, 2));\n    }\n    async function writeMiddlewareManifest() {\n      const middlewareManifest = mergeMiddlewareManifests(middlewareManifests.values());\n      const middlewareManifestPath = _path.default.join(distDir, \"server/middleware-manifest.json\");\n      (0, _nextjsrequirecachehotreloader.deleteCache)(middlewareManifestPath);\n      await writeFileAtomic(middlewareManifestPath, JSON.stringify(middlewareManifest, null, 2));\n    }\n    async function writeFontManifest() {\n      // TODO: turbopack should write the correct\n      // version of this\n      const fontManifestPath = _path.default.join(distDir, \"server\", _constants.NEXT_FONT_MANIFEST + \".json\");\n      (0, _nextjsrequirecachehotreloader.deleteCache)(fontManifestPath);\n      await writeFileAtomic(fontManifestPath, JSON.stringify({\n        pages: {},\n        app: {},\n        appUsingSizeAdjust: false,\n        pagesUsingSizeAdjust: false\n      }, null, 2));\n    }\n    async function writeOtherManifests() {\n      const loadableManifestPath = _path.default.join(distDir, \"react-loadable-manifest.json\");\n      (0, _nextjsrequirecachehotreloader.deleteCache)(loadableManifestPath);\n      await writeFileAtomic(loadableManifestPath, JSON.stringify({}, null, 2));\n    }\n    async function subscribeToHmrEvents(id, client) {\n      let mapping = clientToHmrSubscription.get(client);\n      if (mapping === undefined) {\n        mapping = new Map();\n        clientToHmrSubscription.set(client, mapping);\n      }\n      if (mapping.has(id)) return;\n      const subscription = project.hmrEvents(id);\n      mapping.set(id, subscription);\n      // The subscription will always emit once, which is the initial\n      // computation. This is not a change, so swallow it.\n      try {\n        await subscription.next();\n      } catch (e) {\n        // The client is using an HMR session from a previous server, tell them\n        // to fully reload the page to resolve the issue. We can't use\n        // `hotReloader.send` since that would force very connected client to\n        // reload, only this client is out of date.\n        const reloadAction = {\n          action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE\n        };\n        client.send(JSON.stringify(reloadAction));\n        client.close();\n        return;\n      }\n      for await (const data of subscription) {\n        processIssues(id, data);\n        sendTurbopackMessage(data);\n      }\n    }\n    function unsubscribeToHmrEvents(id, client) {\n      const mapping = clientToHmrSubscription.get(client);\n      const subscription = mapping == null ? void 0 : mapping.get(id);\n      subscription == null ? void 0 : subscription.return();\n    }\n    // Write empty manifests\n    await (0, _promises.mkdir)(_path.default.join(distDir, \"server\"), {\n      recursive: true\n    });\n    await (0, _promises.mkdir)(_path.default.join(distDir, \"static/development\"), {\n      recursive: true\n    });\n    await (0, _promises.writeFile)(_path.default.join(distDir, \"package.json\"), JSON.stringify({\n      type: \"commonjs\"\n    }, null, 2));\n    await currentEntriesHandling;\n    await writeBuildManifest();\n    await writeAppBuildManifest();\n    await writeFallbackBuildManifest();\n    await writePagesManifest();\n    await writeAppPathsManifest();\n    await writeMiddlewareManifest();\n    await writeOtherManifests();\n    await writeFontManifest();\n    const turbopackHotReloader = {\n      activeWebpackConfigs: undefined,\n      serverStats: null,\n      edgeServerStats: null,\n      async run(req, _res, _parsedUrl) {\n        var _req_url;\n        // intercept page chunks request and ensure them with turbopack\n        if ((_req_url = req.url) == null ? void 0 : _req_url.startsWith(\"/_next/static/chunks/pages/\")) {\n          const params = (0, _hotreloaderwebpack.matchNextPageBundleRequest)(req.url);\n          if (params) {\n            const decodedPagePath = `/${params.path.map(param => decodeURIComponent(param)).join(\"/\")}`;\n            await hotReloader.ensurePage({\n              page: decodedPagePath,\n              clientOnly: false\n            }).catch(console.error);\n          }\n        }\n        // Request was not finished.\n        return {\n          finished: undefined\n        };\n      },\n      // TODO: Figure out if socket type can match the NextJsHotReloaderInterface\n      onHMR(req, socket, head) {\n        wsServer.handleUpgrade(req, socket, head, client => {\n          clients.add(client);\n          client.on(\"close\", () => clients.delete(client));\n          client.addEventListener(\"message\", ({\n            data\n          }) => {\n            const parsedData = JSON.parse(typeof data !== \"string\" ? data.toString() : data);\n            // Next.js messages\n            switch (parsedData.event) {\n              case \"ping\":\n                break;\n              case \"span-end\":\n              case \"client-error\":\n              case \"client-warning\":\n              case \"client-success\":\n              case \"server-component-reload-page\":\n              case \"client-reload-page\":\n              case \"client-removed-page\":\n              case \"client-full-reload\":\n                break;\n              default:\n                // Might be a Turbopack message...\n                if (!parsedData.type) {\n                  throw new Error(`unrecognized HMR message \"${data}\"`);\n                }\n            }\n            // Turbopack messages\n            switch (parsedData.type) {\n              case \"turbopack-subscribe\":\n                subscribeToHmrEvents(parsedData.path, client);\n                break;\n              case \"turbopack-unsubscribe\":\n                unsubscribeToHmrEvents(parsedData.path, client);\n                break;\n              default:\n                if (!parsedData.event) {\n                  throw new Error(`unrecognized Turbopack HMR message \"${data}\"`);\n                }\n            }\n          });\n          const turbopackConnected = {\n            type: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.TURBOPACK_CONNECTED\n          };\n          client.send(JSON.stringify(turbopackConnected));\n        });\n      },\n      send(action) {\n        const payload = JSON.stringify(action);\n        for (const client of clients) {\n          client.send(payload);\n        }\n      },\n      setHmrServerError(_error) {\n        // Not implemented yet.\n      },\n      clearHmrServerError() {\n        // Not implemented yet.\n      },\n      async start() {\n        // Not implemented yet.\n      },\n      async stop() {\n        // Not implemented yet.\n      },\n      async getCompilationErrors(_page) {\n        return [];\n      },\n      invalidate() {\n        // Not implemented yet.\n      },\n      async buildFallbackError() {\n        // Not implemented yet.\n      },\n      async ensurePage({\n        page: inputPage,\n        // Unused parameters\n        // clientOnly,\n        // appPaths,\n        match,\n        isApp\n      }) {\n        var _match_definition, _match_definition1;\n        let page = (match == null ? void 0 : (_match_definition = match.definition) == null ? void 0 : _match_definition.pathname) ?? inputPage;\n        if (page === \"/_error\") {\n          if (globalEntries.app) {\n            const writtenEndpoint = await processResult(await globalEntries.app.writeToDisk());\n            processIssues(\"_app\", writtenEndpoint);\n          }\n          await loadBuildManifest(\"_app\");\n          await loadPagesManifest(\"_app\");\n          if (globalEntries.document) {\n            const writtenEndpoint = await processResult(await globalEntries.document.writeToDisk());\n            changeSubscription(\"_document\", globalEntries.document, () => {\n              return {\n                action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE\n              };\n            });\n            processIssues(\"_document\", writtenEndpoint);\n          }\n          await loadPagesManifest(\"_document\");\n          if (globalEntries.error) {\n            const writtenEndpoint = await processResult(await globalEntries.error.writeToDisk());\n            processIssues(page, writtenEndpoint);\n          }\n          await loadBuildManifest(\"_error\");\n          await loadPagesManifest(\"_error\");\n          await writeBuildManifest();\n          await writeFallbackBuildManifest();\n          await writePagesManifest();\n          await writeMiddlewareManifest();\n          await writeOtherManifests();\n          return;\n        }\n        await currentEntriesHandling;\n        const route = curEntries.get(page) ?? curEntries.get((0, _apppaths.normalizeAppPath)((0, _getmetadataroute.normalizeMetadataRoute)((match == null ? void 0 : (_match_definition1 = match.definition) == null ? void 0 : _match_definition1.page) ?? inputPage)));\n        if (!route) {\n          // TODO: why is this entry missing in turbopack?\n          if (page === \"/_app\") return;\n          if (page === \"/_document\") return;\n          if (page === \"/middleware\") return;\n          throw new _utils1.PageNotFoundError(`route not found ${page}`);\n        }\n        if (!buildingReported.has(page)) {\n          buildingReported.add(page);\n          let suffix;\n          switch (route.type) {\n            case \"app-page\":\n              suffix = \"page\";\n              break;\n            case \"app-route\":\n              suffix = \"route\";\n              break;\n            case \"page\":\n            case \"page-api\":\n              suffix = \"\";\n              break;\n            default:\n              throw new Error(\"Unexpected route type \" + route.type);\n          }\n          _store.store.setState({\n            loading: true,\n            trigger: `${page}${!page.endsWith(\"/\") && suffix.length > 0 ? \"/\" : \"\"}${suffix}`\n          }, true);\n        }\n        switch (route.type) {\n          case \"page\":\n            {\n              if (isApp) {\n                throw new Error(`mis-matched route type: isApp && page for ${page}`);\n              }\n              if (globalEntries.app) {\n                const writtenEndpoint = await processResult(await globalEntries.app.writeToDisk());\n                processIssues(\"_app\", writtenEndpoint);\n              }\n              await loadBuildManifest(\"_app\");\n              await loadPagesManifest(\"_app\");\n              if (globalEntries.document) {\n                const writtenEndpoint = await processResult(await globalEntries.document.writeToDisk());\n                changeSubscription(\"_document\", globalEntries.document, () => {\n                  return {\n                    action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.RELOAD_PAGE\n                  };\n                });\n                processIssues(\"_document\", writtenEndpoint);\n              }\n              await loadPagesManifest(\"_document\");\n              const writtenEndpoint = await processResult(await route.htmlEndpoint.writeToDisk());\n              changeSubscription(page, route.dataEndpoint, (pageName, change) => {\n                switch (change.type) {\n                  case _swc.ServerClientChangeType.Server:\n                  case _swc.ServerClientChangeType.Both:\n                    return {\n                      event: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.SERVER_ONLY_CHANGES,\n                      pages: [pageName]\n                    };\n                  default:\n                }\n              });\n              const type = writtenEndpoint == null ? void 0 : writtenEndpoint.type;\n              await loadBuildManifest(page);\n              await loadPagesManifest(page);\n              if (type === \"edge\") {\n                await loadMiddlewareManifest(page, \"pages\");\n              } else {\n                middlewareManifests.delete(page);\n              }\n              await writeBuildManifest();\n              await writeFallbackBuildManifest();\n              await writePagesManifest();\n              await writeMiddlewareManifest();\n              await writeOtherManifests();\n              processIssues(page, writtenEndpoint, true);\n              break;\n            }\n          case \"page-api\":\n            {\n              // We don't throw on ensureOpts.isApp === true here\n              // since this can happen when app pages make\n              // api requests to page API routes.\n              const writtenEndpoint = await processResult(await route.endpoint.writeToDisk());\n              const type = writtenEndpoint == null ? void 0 : writtenEndpoint.type;\n              await loadPagesManifest(page);\n              if (type === \"edge\") {\n                await loadMiddlewareManifest(page, \"pages\");\n              } else {\n                middlewareManifests.delete(page);\n              }\n              await writePagesManifest();\n              await writeMiddlewareManifest();\n              await writeOtherManifests();\n              processIssues(page, writtenEndpoint, true);\n              break;\n            }\n          case \"app-page\":\n            {\n              const writtenEndpoint = await processResult(await route.htmlEndpoint.writeToDisk());\n              changeSubscription(page, route.rscEndpoint, (_page, change) => {\n                switch (change.type) {\n                  case _swc.ServerClientChangeType.Server:\n                  case _swc.ServerClientChangeType.Both:\n                    return {\n                      action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.SERVER_COMPONENT_CHANGES\n                    };\n                  default:\n                }\n              });\n              await loadAppBuildManifest(page);\n              await loadBuildManifest(page, \"app\");\n              await loadAppPathManifest(page, \"app\");\n              await writeAppBuildManifest();\n              await writeBuildManifest();\n              await writeAppPathsManifest();\n              await writeMiddlewareManifest();\n              await writeOtherManifests();\n              processIssues(page, writtenEndpoint, true);\n              break;\n            }\n          case \"app-route\":\n            {\n              const writtenEndpoint = await processResult(await route.endpoint.writeToDisk());\n              const type = writtenEndpoint == null ? void 0 : writtenEndpoint.type;\n              await loadAppPathManifest(page, \"app-route\");\n              if (type === \"edge\") {\n                await loadMiddlewareManifest(page, \"app-route\");\n              } else {\n                middlewareManifests.delete(page);\n              }\n              await writeAppBuildManifest();\n              await writeAppPathsManifest();\n              await writeMiddlewareManifest();\n              await writeMiddlewareManifest();\n              await writeOtherManifests();\n              processIssues(page, writtenEndpoint, true);\n              break;\n            }\n          default:\n            {\n              throw new Error(`unknown route type ${route.type} for ${page}`);\n            }\n        }\n        _store.store.setState({\n          loading: false\n        }, true);\n      }\n    };\n    hotReloader = turbopackHotReloader;\n  } else {\n    hotReloader = new _hotreloaderwebpack.default(opts.dir, {\n      appDir,\n      pagesDir,\n      distDir: distDir,\n      config: opts.nextConfig,\n      buildId: \"development\",\n      telemetry: opts.telemetry,\n      rewrites: opts.fsChecker.rewrites,\n      previewProps: opts.fsChecker.prerenderManifest.preview\n    });\n  }\n  await hotReloader.start();\n  if (opts.nextConfig.experimental.nextScriptWorkers) {\n    await (0, _verifypartytownsetup.verifyPartytownSetup)(opts.dir, _path.default.join(distDir, _constants.CLIENT_STATIC_FILES_PATH));\n  }\n  opts.fsChecker.ensureCallback(async function ensure(item) {\n    if (item.type === \"appFile\" || item.type === \"pageFile\") {\n      await hotReloader.ensurePage({\n        clientOnly: false,\n        page: item.itemPath,\n        isApp: item.type === \"appFile\"\n      });\n    }\n  });\n  let resolved = false;\n  let prevSortedRoutes = [];\n  await new Promise(async (resolve, reject) => {\n    if (pagesDir) {\n      // Watchpack doesn't emit an event for an empty directory\n      _fs.default.readdir(pagesDir, (_, files) => {\n        if (files == null ? void 0 : files.length) {\n          return;\n        }\n        if (!resolved) {\n          resolve();\n          resolved = true;\n        }\n      });\n    }\n    const pages = pagesDir ? [pagesDir] : [];\n    const app = appDir ? [appDir] : [];\n    const directories = [...pages, ...app];\n    const rootDir = pagesDir || appDir;\n    const files = [...(0, _worker.getPossibleMiddlewareFilenames)(_path.default.join(rootDir, \"..\"), nextConfig.pageExtensions), ...(0, _worker.getPossibleInstrumentationHookFilenames)(_path.default.join(rootDir, \"..\"), nextConfig.pageExtensions)];\n    let nestedMiddleware = [];\n    const envFiles = [\".env.development.local\", \".env.local\", \".env.development\", \".env\"].map(file => _path.default.join(dir, file));\n    files.push(...envFiles);\n    // tsconfig/jsconfig paths hot-reloading\n    const tsconfigPaths = [_path.default.join(dir, \"tsconfig.json\"), _path.default.join(dir, \"jsconfig.json\")];\n    files.push(...tsconfigPaths);\n    const wp = new _watchpack.default({\n      ignored: pathname => {\n        return !files.some(file => file.startsWith(pathname)) && !directories.some(d => pathname.startsWith(d) || d.startsWith(pathname));\n      }\n    });\n    const fileWatchTimes = new Map();\n    let enabledTypeScript = usingTypeScript;\n    let previousClientRouterFilters;\n    let previousConflictingPagePaths = new Set();\n    wp.on(\"aggregated\", async () => {\n      var _serverFields_middleware, _serverFields_middleware1, _generateInterceptionRoutesRewrites;\n      let middlewareMatchers;\n      const routedPages = [];\n      const knownFiles = wp.getTimeInfoEntries();\n      const appPaths = {};\n      const pageNameSet = new Set();\n      const conflictingAppPagePaths = new Set();\n      const appPageFilePaths = new Map();\n      const pagesPageFilePaths = new Map();\n      let envChange = false;\n      let tsconfigChange = false;\n      let conflictingPageChange = 0;\n      let hasRootAppNotFound = false;\n      const {\n        appFiles,\n        pageFiles\n      } = opts.fsChecker;\n      appFiles.clear();\n      pageFiles.clear();\n      _shared1.devPageFiles.clear();\n      const sortedKnownFiles = [...knownFiles.keys()].sort((0, _entries.sortByPageExts)(nextConfig.pageExtensions));\n      for (const fileName of sortedKnownFiles) {\n        if (!files.includes(fileName) && !directories.some(d => fileName.startsWith(d))) {\n          continue;\n        }\n        const meta = knownFiles.get(fileName);\n        const watchTime = fileWatchTimes.get(fileName);\n        // If the file is showing up for the first time or the meta.timestamp is changed since last time\n        const watchTimeChange = watchTime === undefined || watchTime && watchTime !== (meta == null ? void 0 : meta.timestamp);\n        fileWatchTimes.set(fileName, meta.timestamp);\n        if (envFiles.includes(fileName)) {\n          if (watchTimeChange) {\n            envChange = true;\n          }\n          continue;\n        }\n        if (tsconfigPaths.includes(fileName)) {\n          if (fileName.endsWith(\"tsconfig.json\")) {\n            enabledTypeScript = true;\n          }\n          if (watchTimeChange) {\n            tsconfigChange = true;\n          }\n          continue;\n        }\n        if ((meta == null ? void 0 : meta.accuracy) === undefined || !validFileMatcher.isPageFile(fileName)) {\n          continue;\n        }\n        const isAppPath = Boolean(appDir && (0, _normalizepathsep.normalizePathSep)(fileName).startsWith((0, _normalizepathsep.normalizePathSep)(appDir) + \"/\"));\n        const isPagePath = Boolean(pagesDir && (0, _normalizepathsep.normalizePathSep)(fileName).startsWith((0, _normalizepathsep.normalizePathSep)(pagesDir) + \"/\"));\n        const rootFile = (0, _absolutepathtopage.absolutePathToPage)(fileName, {\n          dir: dir,\n          extensions: nextConfig.pageExtensions,\n          keepIndex: false,\n          pagesType: \"root\"\n        });\n        if ((0, _worker.isMiddlewareFile)(rootFile)) {\n          var _staticInfo_middleware;\n          const staticInfo = await (0, _entries.getStaticInfoIncludingLayouts)({\n            pageFilePath: fileName,\n            config: nextConfig,\n            appDir: appDir,\n            page: rootFile,\n            isDev: true,\n            isInsideAppDir: isAppPath,\n            pageExtensions: nextConfig.pageExtensions\n          });\n          if (nextConfig.output === \"export\") {\n            _log.error('Middleware cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export');\n            continue;\n          }\n          serverFields.actualMiddlewareFile = rootFile;\n          await propagateToWorkers(\"actualMiddlewareFile\", serverFields.actualMiddlewareFile);\n          middlewareMatchers = ((_staticInfo_middleware = staticInfo.middleware) == null ? void 0 : _staticInfo_middleware.matchers) || [{\n            regexp: \".*\",\n            originalSource: \"/:path*\"\n          }];\n          continue;\n        }\n        if ((0, _worker.isInstrumentationHookFile)(rootFile) && nextConfig.experimental.instrumentationHook) {\n          _buildcontext.NextBuildContext.hasInstrumentationHook = true;\n          serverFields.actualInstrumentationHookFile = rootFile;\n          await propagateToWorkers(\"actualInstrumentationHookFile\", serverFields.actualInstrumentationHookFile);\n          continue;\n        }\n        if (fileName.endsWith(\".ts\") || fileName.endsWith(\".tsx\")) {\n          enabledTypeScript = true;\n        }\n        if (!(isAppPath || isPagePath)) {\n          continue;\n        }\n        // Collect all current filenames for the TS plugin to use\n        _shared1.devPageFiles.add(fileName);\n        let pageName = (0, _absolutepathtopage.absolutePathToPage)(fileName, {\n          dir: isAppPath ? appDir : pagesDir,\n          extensions: nextConfig.pageExtensions,\n          keepIndex: isAppPath,\n          pagesType: isAppPath ? \"app\" : \"pages\"\n        });\n        if (!isAppPath && pageName.startsWith(\"/api/\") && nextConfig.output === \"export\") {\n          _log.error('API Routes cannot be used with \"output: export\". See more info here: https://nextjs.org/docs/advanced-features/static-html-export');\n          continue;\n        }\n        if (isAppPath) {\n          const isRootNotFound = validFileMatcher.isRootNotFound(fileName);\n          hasRootAppNotFound = true;\n          if (isRootNotFound) {\n            continue;\n          }\n          if (!isRootNotFound && !validFileMatcher.isAppRouterPage(fileName)) {\n            continue;\n          }\n          // Ignore files/directories starting with `_` in the app directory\n          if ((0, _normalizepathsep.normalizePathSep)(pageName).includes(\"/_\")) {\n            continue;\n          }\n          const originalPageName = pageName;\n          pageName = (0, _apppaths.normalizeAppPath)(pageName).replace(/%5F/g, \"_\");\n          if (!appPaths[pageName]) {\n            appPaths[pageName] = [];\n          }\n          appPaths[pageName].push(originalPageName);\n          if (useFileSystemPublicRoutes) {\n            appFiles.add(pageName);\n          }\n          if (routedPages.includes(pageName)) {\n            continue;\n          }\n        } else {\n          if (useFileSystemPublicRoutes) {\n            pageFiles.add(pageName);\n            // always add to nextDataRoutes for now but in future only add\n            // entries that actually use getStaticProps/getServerSideProps\n            opts.fsChecker.nextDataRoutes.add(pageName);\n          }\n        }\n        (isAppPath ? appPageFilePaths : pagesPageFilePaths).set(pageName, fileName);\n        if (appDir && pageNameSet.has(pageName)) {\n          conflictingAppPagePaths.add(pageName);\n        } else {\n          pageNameSet.add(pageName);\n        }\n        /**\n        * If there is a middleware that is not declared in the root we will\n        * warn without adding it so it doesn't make its way into the system.\n        */\n        if (/[\\\\\\\\/]_middleware$/.test(pageName)) {\n          nestedMiddleware.push(pageName);\n          continue;\n        }\n        routedPages.push(pageName);\n      }\n      const numConflicting = conflictingAppPagePaths.size;\n      conflictingPageChange = numConflicting - previousConflictingPagePaths.size;\n      if (conflictingPageChange !== 0) {\n        if (numConflicting > 0) {\n          let errorMessage = `Conflicting app and page file${numConflicting === 1 ? \" was\" : \"s were\"} found, please remove the conflicting files to continue:\\n`;\n          for (const p of conflictingAppPagePaths) {\n            const appPath = _path.default.relative(dir, appPageFilePaths.get(p));\n            const pagesPath = _path.default.relative(dir, pagesPageFilePaths.get(p));\n            errorMessage += `  \"${pagesPath}\" - \"${appPath}\"\\n`;\n          }\n          hotReloader.setHmrServerError(new Error(errorMessage));\n        } else if (numConflicting === 0) {\n          hotReloader.clearHmrServerError();\n          await propagateToWorkers(\"reloadMatchers\", undefined);\n        }\n      }\n      previousConflictingPagePaths = conflictingAppPagePaths;\n      let clientRouterFilters;\n      if (nextConfig.experimental.clientRouterFilter) {\n        clientRouterFilters = (0, _createclientrouterfilter.createClientRouterFilter)(Object.keys(appPaths), nextConfig.experimental.clientRouterFilterRedirects ? (nextConfig._originalRedirects || []).filter(r => !r.internal) : [], nextConfig.experimental.clientRouterFilterAllowedRate);\n        if (!previousClientRouterFilters || JSON.stringify(previousClientRouterFilters) !== JSON.stringify(clientRouterFilters)) {\n          envChange = true;\n          previousClientRouterFilters = clientRouterFilters;\n        }\n      }\n      if (!usingTypeScript && enabledTypeScript) {\n        // we tolerate the error here as this is best effort\n        // and the manual install command will be shown\n        await verifyTypeScript(opts).then(() => {\n          tsconfigChange = true;\n        }).catch(() => {});\n      }\n      if (envChange || tsconfigChange) {\n        var _hotReloader_activeWebpackConfigs;\n        if (envChange) {\n          // only log changes in router server\n          (0, _env.loadEnvConfig)(dir, true, _log, true, envFilePath => {\n            _log.info(`Reload env: ${envFilePath}`);\n          });\n          await propagateToWorkers(\"loadEnvConfig\", [{\n            dev: true,\n            forceReload: true,\n            silent: true\n          }]);\n        }\n        let tsconfigResult;\n        if (tsconfigChange) {\n          try {\n            tsconfigResult = await (0, _loadjsconfig.default)(dir, nextConfig);\n          } catch (_) {\n            /* do we want to log if there are syntax errors in tsconfig  while editing? */}\n        }\n        (_hotReloader_activeWebpackConfigs = hotReloader.activeWebpackConfigs) == null ? void 0 : _hotReloader_activeWebpackConfigs.forEach((config, idx) => {\n          const isClient = idx === 0;\n          const isNodeServer = idx === 1;\n          const isEdgeServer = idx === 2;\n          const hasRewrites = opts.fsChecker.rewrites.afterFiles.length > 0 || opts.fsChecker.rewrites.beforeFiles.length > 0 || opts.fsChecker.rewrites.fallback.length > 0;\n          if (tsconfigChange) {\n            var _config_resolve_plugins, _config_resolve;\n            (_config_resolve = config.resolve) == null ? void 0 : (_config_resolve_plugins = _config_resolve.plugins) == null ? void 0 : _config_resolve_plugins.forEach(plugin => {\n              // look for the JsConfigPathsPlugin and update with\n              // the latest paths/baseUrl config\n              if (plugin && plugin.jsConfigPlugin && tsconfigResult) {\n                var _config_resolve_modules, _config_resolve, _jsConfig_compilerOptions;\n                const {\n                  resolvedBaseUrl,\n                  jsConfig\n                } = tsconfigResult;\n                const currentResolvedBaseUrl = plugin.resolvedBaseUrl;\n                const resolvedUrlIndex = (_config_resolve = config.resolve) == null ? void 0 : (_config_resolve_modules = _config_resolve.modules) == null ? void 0 : _config_resolve_modules.findIndex(item => item === currentResolvedBaseUrl);\n                if (resolvedBaseUrl && resolvedBaseUrl !== currentResolvedBaseUrl) {\n                  var _config_resolve_modules1, _config_resolve1;\n                  // remove old baseUrl and add new one\n                  if (resolvedUrlIndex && resolvedUrlIndex > -1) {\n                    var _config_resolve_modules2, _config_resolve2;\n                    (_config_resolve2 = config.resolve) == null ? void 0 : (_config_resolve_modules2 = _config_resolve2.modules) == null ? void 0 : _config_resolve_modules2.splice(resolvedUrlIndex, 1);\n                  }\n                  (_config_resolve1 = config.resolve) == null ? void 0 : (_config_resolve_modules1 = _config_resolve1.modules) == null ? void 0 : _config_resolve_modules1.push(resolvedBaseUrl);\n                }\n                if ((jsConfig == null ? void 0 : (_jsConfig_compilerOptions = jsConfig.compilerOptions) == null ? void 0 : _jsConfig_compilerOptions.paths) && resolvedBaseUrl) {\n                  Object.keys(plugin.paths).forEach(key => {\n                    delete plugin.paths[key];\n                  });\n                  Object.assign(plugin.paths, jsConfig.compilerOptions.paths);\n                  plugin.resolvedBaseUrl = resolvedBaseUrl;\n                }\n              }\n            });\n          }\n          if (envChange) {\n            var _config_plugins;\n            (_config_plugins = config.plugins) == null ? void 0 : _config_plugins.forEach(plugin => {\n              // we look for the DefinePlugin definitions so we can\n              // update them on the active compilers\n              if (plugin && typeof plugin.definitions === \"object\" && plugin.definitions.__NEXT_DEFINE_ENV) {\n                const newDefine = (0, _defineenvplugin.getDefineEnv)({\n                  allowedRevalidateHeaderKeys: undefined,\n                  clientRouterFilters,\n                  config: nextConfig,\n                  dev: true,\n                  distDir,\n                  fetchCacheKeyPrefix: undefined,\n                  hasRewrites,\n                  isClient,\n                  isEdgeServer,\n                  isNodeOrEdgeCompilation: isNodeServer || isEdgeServer,\n                  isNodeServer,\n                  middlewareMatchers: undefined,\n                  previewModeId: undefined\n                });\n                Object.keys(plugin.definitions).forEach(key => {\n                  if (!(key in newDefine)) {\n                    delete plugin.definitions[key];\n                  }\n                });\n                Object.assign(plugin.definitions, newDefine);\n              }\n            });\n          }\n        });\n        hotReloader.invalidate({\n          reloadAfterInvalidation: envChange\n        });\n      }\n      if (nestedMiddleware.length > 0) {\n        _log.error(new _worker.NestedMiddlewareError(nestedMiddleware, dir, pagesDir || appDir).message);\n        nestedMiddleware = [];\n      }\n      // Make sure to sort parallel routes to make the result deterministic.\n      serverFields.appPathRoutes = Object.fromEntries(Object.entries(appPaths).map(([k, v]) => [k, v.sort()]));\n      await propagateToWorkers(\"appPathRoutes\", serverFields.appPathRoutes);\n      // TODO: pass this to fsChecker/next-dev-server?\n      serverFields.middleware = middlewareMatchers ? {\n        match: null,\n        page: \"/\",\n        matchers: middlewareMatchers\n      } : undefined;\n      await propagateToWorkers(\"middleware\", serverFields.middleware);\n      serverFields.hasAppNotFound = hasRootAppNotFound;\n      opts.fsChecker.middlewareMatcher = ((_serverFields_middleware = serverFields.middleware) == null ? void 0 : _serverFields_middleware.matchers) ? (0, _middlewareroutematcher.getMiddlewareRouteMatcher)((_serverFields_middleware1 = serverFields.middleware) == null ? void 0 : _serverFields_middleware1.matchers) : undefined;\n      opts.fsChecker.interceptionRoutes = ((_generateInterceptionRoutesRewrites = (0, _generateinterceptionroutesrewrites.generateInterceptionRoutesRewrites)(Object.keys(appPaths))) == null ? void 0 : _generateInterceptionRoutesRewrites.map(item => (0, _filesystem.buildCustomRoute)(\"before_files_rewrite\", item, opts.nextConfig.basePath, opts.nextConfig.experimental.caseSensitiveRoutes))) || [];\n      const exportPathMap = typeof nextConfig.exportPathMap === \"function\" && (await (nextConfig.exportPathMap == null ? void 0 : nextConfig.exportPathMap.call(nextConfig, {}, {\n        dev: true,\n        dir: opts.dir,\n        outDir: null,\n        distDir: distDir,\n        buildId: \"development\"\n      }))) || {};\n      for (const [key, value] of Object.entries(exportPathMap || {})) {\n        opts.fsChecker.interceptionRoutes.push((0, _filesystem.buildCustomRoute)(\"before_files_rewrite\", {\n          source: key,\n          destination: `${value.page}${value.query ? \"?\" : \"\"}${_querystring.default.stringify(value.query)}`\n        }, opts.nextConfig.basePath, opts.nextConfig.experimental.caseSensitiveRoutes));\n      }\n      try {\n        // we serve a separate manifest with all pages for the client in\n        // dev mode so that we can match a page after a rewrite on the client\n        // before it has been built and is populated in the _buildManifest\n        const sortedRoutes = (0, _utils.getSortedRoutes)(routedPages);\n        opts.fsChecker.dynamicRoutes = sortedRoutes.map(page => {\n          const regex = (0, _routeregex.getRouteRegex)(page);\n          return {\n            regex: regex.re.toString(),\n            match: (0, _routematcher.getRouteMatcher)(regex),\n            page\n          };\n        });\n        const dataRoutes = [];\n        for (const page of sortedRoutes) {\n          const route = (0, _builddataroute.buildDataRoute)(page, \"development\");\n          const routeRegex = (0, _routeregex.getRouteRegex)(route.page);\n          dataRoutes.push({\n            ...route,\n            regex: routeRegex.re.toString(),\n            match: (0, _routematcher.getRouteMatcher)({\n              // TODO: fix this in the manifest itself, must also be fixed in\n              // upstream builder that relies on this\n              re: opts.nextConfig.i18n ? new RegExp(route.dataRouteRegex.replace(`/development/`, `/development/(?<nextLocale>[^/]+?)/`)) : new RegExp(route.dataRouteRegex),\n              groups: routeRegex.groups\n            })\n          });\n        }\n        opts.fsChecker.dynamicRoutes.unshift(...dataRoutes);\n        if (!(prevSortedRoutes == null ? void 0 : prevSortedRoutes.every((val, idx) => val === sortedRoutes[idx]))) {\n          const addedRoutes = sortedRoutes.filter(route => !prevSortedRoutes.includes(route));\n          const removedRoutes = prevSortedRoutes.filter(route => !sortedRoutes.includes(route));\n          // emit the change so clients fetch the update\n          hotReloader.send({\n            action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.DEV_PAGES_MANIFEST_UPDATE,\n            data: [{\n              devPagesManifest: true\n            }]\n          });\n          addedRoutes.forEach(route => {\n            hotReloader.send({\n              action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.ADDED_PAGE,\n              data: [route]\n            });\n          });\n          removedRoutes.forEach(route => {\n            hotReloader.send({\n              action: _hotreloadertypes.HMR_ACTIONS_SENT_TO_BROWSER.REMOVED_PAGE,\n              data: [route]\n            });\n          });\n        }\n        prevSortedRoutes = sortedRoutes;\n        if (!resolved) {\n          resolve();\n          resolved = true;\n        }\n      } catch (e) {\n        if (!resolved) {\n          reject(e);\n          resolved = true;\n        } else {\n          _log.warn(\"Failed to reload dynamic routes:\", e);\n        }\n      } finally {\n        // Reload the matchers. The filesystem would have been written to,\n        // and the matchers need to re-scan it to update the router.\n        await propagateToWorkers(\"reloadMatchers\", undefined);\n      }\n    });\n    wp.watch({\n      directories: [dir],\n      startTime: 0\n    });\n  });\n  const clientPagesManifestPath = `/_next/${_constants.CLIENT_STATIC_FILES_PATH}/development/${_constants.DEV_CLIENT_PAGES_MANIFEST}`;\n  opts.fsChecker.devVirtualFsItems.add(clientPagesManifestPath);\n  const devMiddlewareManifestPath = `/_next/${_constants.CLIENT_STATIC_FILES_PATH}/development/${_constants.DEV_MIDDLEWARE_MANIFEST}`;\n  opts.fsChecker.devVirtualFsItems.add(devMiddlewareManifestPath);\n  async function requestHandler(req, res) {\n    var _parsedUrl_pathname, _parsedUrl_pathname1;\n    const parsedUrl = _url.default.parse(req.url || \"/\");\n    if ((_parsedUrl_pathname = parsedUrl.pathname) == null ? void 0 : _parsedUrl_pathname.includes(clientPagesManifestPath)) {\n      res.statusCode = 200;\n      res.setHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n      res.end(JSON.stringify({\n        pages: prevSortedRoutes.filter(route => !opts.fsChecker.appFiles.has(route))\n      }));\n      return {\n        finished: true\n      };\n    }\n    if ((_parsedUrl_pathname1 = parsedUrl.pathname) == null ? void 0 : _parsedUrl_pathname1.includes(devMiddlewareManifestPath)) {\n      var _serverFields_middleware;\n      res.statusCode = 200;\n      res.setHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n      res.end(JSON.stringify(((_serverFields_middleware = serverFields.middleware) == null ? void 0 : _serverFields_middleware.matchers) || []));\n      return {\n        finished: true\n      };\n    }\n    return {\n      finished: false\n    };\n  }\n  async function logErrorWithOriginalStack(err, type) {\n    let usedOriginalStack = false;\n    if ((0, _iserror.default)(err) && err.stack) {\n      try {\n        const frames = (0, _middleware.parseStack)(err.stack);\n        // Filter out internal edge related runtime stack\n        const frame = frames.find(({\n          file\n        }) => !(file == null ? void 0 : file.startsWith(\"eval\")) && !(file == null ? void 0 : file.includes(\"web/adapter\")) && !(file == null ? void 0 : file.includes(\"web/globals\")) && !(file == null ? void 0 : file.includes(\"sandbox/context\")) && !(file == null ? void 0 : file.includes(\"<anonymous>\")));\n        if ((frame == null ? void 0 : frame.lineNumber) && (frame == null ? void 0 : frame.file)) {\n          var _hotReloader_edgeServerStats, _hotReloader_serverStats, _frame_file, _frame_file1, _hotReloader_serverStats1, _hotReloader_edgeServerStats1;\n          const moduleId = frame.file.replace(/^(webpack-internal:\\/\\/\\/|file:\\/\\/)/, \"\");\n          const modulePath = frame.file.replace(/^(webpack-internal:\\/\\/\\/|file:\\/\\/)(\\(.*\\)\\/)?/, \"\");\n          const src = (0, _middleware.getErrorSource)(err);\n          const isEdgeCompiler = src === _constants.COMPILER_NAMES.edgeServer;\n          const compilation = isEdgeCompiler ? (_hotReloader_edgeServerStats = hotReloader.edgeServerStats) == null ? void 0 : _hotReloader_edgeServerStats.compilation : (_hotReloader_serverStats = hotReloader.serverStats) == null ? void 0 : _hotReloader_serverStats.compilation;\n          const source = await (0, _middleware.getSourceById)(!!((_frame_file = frame.file) == null ? void 0 : _frame_file.startsWith(_path.default.sep)) || !!((_frame_file1 = frame.file) == null ? void 0 : _frame_file1.startsWith(\"file:\")), moduleId, compilation);\n          const originalFrame = await (0, _middleware.createOriginalStackFrame)({\n            line: frame.lineNumber,\n            column: frame.column,\n            source,\n            frame,\n            moduleId,\n            modulePath,\n            rootDirectory: opts.dir,\n            errorMessage: err.message,\n            serverCompilation: isEdgeCompiler ? undefined : (_hotReloader_serverStats1 = hotReloader.serverStats) == null ? void 0 : _hotReloader_serverStats1.compilation,\n            edgeCompilation: isEdgeCompiler ? (_hotReloader_edgeServerStats1 = hotReloader.edgeServerStats) == null ? void 0 : _hotReloader_edgeServerStats1.compilation : undefined\n          }).catch(() => {});\n          if (originalFrame) {\n            const {\n              originalCodeFrame,\n              originalStackFrame\n            } = originalFrame;\n            const {\n              file,\n              lineNumber,\n              column,\n              methodName\n            } = originalStackFrame;\n            _log[type === \"warning\" ? \"warn\" : \"error\"](`${file} (${lineNumber}:${column}) @ ${methodName}`);\n            if (isEdgeCompiler) {\n              err = err.message;\n            }\n            if (type === \"warning\") {\n              _log.warn(err);\n            } else if (type === \"app-dir\") {\n              (0, _logappdirerror.logAppDirError)(err);\n            } else if (type) {\n              _log.error(`${type}:`, err);\n            } else {\n              _log.error(err);\n            }\n            console[type === \"warning\" ? \"warn\" : \"error\"](originalCodeFrame);\n            usedOriginalStack = true;\n          }\n        }\n      } catch (_) {\n        // failed to load original stack using source maps\n        // this un-actionable by users so we don't show the\n        // internal error and only show the provided stack\n      }\n    }\n    if (!usedOriginalStack) {\n      if (type === \"warning\") {\n        _log.warn(err);\n      } else if (type === \"app-dir\") {\n        (0, _logappdirerror.logAppDirError)(err);\n      } else if (type) {\n        _log.error(`${type}:`, err);\n      } else {\n        _log.error(err);\n      }\n    }\n  }\n  return {\n    serverFields,\n    hotReloader,\n    requestHandler,\n    logErrorWithOriginalStack,\n    async ensureMiddleware() {\n      if (!serverFields.actualMiddlewareFile) return;\n      return hotReloader.ensurePage({\n        page: serverFields.actualMiddlewareFile,\n        clientOnly: false\n      });\n    }\n  };\n}\nasync function setupDev(opts) {\n  const isSrcDir = _path.default.relative(opts.dir, opts.pagesDir || opts.appDir || \"\").startsWith(\"src\");\n  const result = await startWatcher(opts);\n  opts.telemetry.record((0, _events.eventCliSession)(_path.default.join(opts.dir, opts.nextConfig.distDir), opts.nextConfig, {\n    webpackVersion: 5,\n    isSrcDir,\n    turboFlag: false,\n    cliCommand: \"dev\",\n    appDir: !!opts.appDir,\n    pagesDir: !!opts.pagesDir,\n    isCustomServer: !!opts.isCustomServer,\n    hasNowJson: !!(await (0, _findup.default)(\"now.json\", {\n      cwd: opts.dir\n    }))\n  }));\n  return result;\n}","map":{"version":3,"names":["setupDev","wsServer","_ws","default","Server","noServer","verifyTypeScript","opts","usingTypeScript","verifyResult","_verifyTypeScriptSetup","verifyTypeScriptSetup","dir","distDir","nextConfig","intentDirs","pagesDir","appDir","filter","Boolean","typeCheckPreflight","tsconfigPath","typescript","disableStaticImages","images","hasAppDir","hasPagesDir","version","startWatcher","useFileSystemPublicRoutes","_path","join","_shared","setGlobal","_constants","PHASE_DEVELOPMENT_SERVER","validFileMatcher","_findpagefile","createValidFileMatcher","pageExtensions","propagateToWorkers","field","args","_opts_renderWorkers_app","_opts_renderWorkers_pages","renderWorkers","app","propagateServerField","pages","serverFields","hotReloader","turbo","loadBindings","require","bindings","jsConfig","_loadjsconfig","process","env","TURBOPACK","NEXT_TEST_MODE","log","testMode","project","createProject","projectPath","rootPath","experimental","outputFileTracingRoot","watch","serverAddr","port","iter","entrypointsSubscribe","curEntries","Map","changeSubscriptions","prevMiddleware","undefined","globalEntries","document","error","currentEntriesHandlingResolve","currentEntriesHandling","Promise","resolve","hmrPayloads","turbopackUpdates","hmrBuilding","issues","issueKey","issue","severity","filePath","title","description","formatIssue","source","detail","formattedTitle","replace","message","formattedFilePath","replaceAll","start","end","line","column","content","codeFrameColumns","forceColor","ModuleBuildError","Error","processIssues","name","result","throwIssue","oldSet","get","newSet","set","key","formatted","has","console","keys","processResult","hasAppPaths","serverPaths","some","p","startsWith","_nextjsrequirecachehotreloader","deleteAppClientCache","file","map","deleteCache","hmrHash","sendHmrDebounce","_utils2","debounce","errors","issueMap","details","send","action","_hotreloadertypes","HMR_ACTIONS_SENT_TO_BROWSER","SYNC","hash","String","values","warnings","versionInfo","installed","staleness","size","payload","clear","length","type","TURBOPACK_MESSAGE","data","sendHmr","id","BUILDING","sendTurbopackMessage","push","loadPartialManifest","pageName","manifestPath","posix","JSON","parse","_promises","readFile","buildManifests","appBuildManifests","pagesManifests","appPathsManifests","middlewareManifests","clientToHmrSubscription","clients","Set","loadMiddlewareManifest","MIDDLEWARE_MANIFEST","loadBuildManifest","BUILD_MANIFEST","loadAppBuildManifest","APP_BUILD_MANIFEST","loadPagesManifest","PAGES_MANIFEST","loadAppPathManifest","APP_PATHS_MANIFEST","buildingReported","changeSubscription","page","endpoint","makePayload","changed","change","_store","store","setState","loading","trigger","clearChangeSubscription","subscription","return","call","delete","handleEntries","entrypoints","pagesAppEndpoint","pagesDocumentEndpoint","pagesErrorEndpoint","pathname","route","routes","_log","info","middleware","event","MIDDLEWARE_CHANGES","_middlewareManifests_get","writtenEndpoint","writeToDisk","actualMiddlewareFile","match","matchers","catch","err","exit","e","mergeBuildManifests","manifests","manifest","devFiles","ampDevFiles","polyfillFiles","lowPriorityFiles","rootMainFiles","ampFirstPages","m","Object","assign","mergeAppBuildManifests","mergePagesManifests","mergeMiddlewareManifests","sortedMiddleware","functions","fun","concat","matcher","regexp","_pathtoregexp","pathToRegexp","originalSource","delimiter","sensitive","strict","writeFileAtomic","tempPath","Math","random","toString","slice","writeFile","rename","unlink","writeBuildManifest","buildManifest","buildManifestPath","stringify","__rewrites","afterFiles","beforeFiles","fallback","fromEntries","sortedPages","buildManifestJs","_buildmanifestplugin","srcEmptySsgManifest","writeFallbackBuildManifest","fallbackBuildManifest","fallbackBuildManifestPath","writeAppBuildManifest","appBuildManifest","appBuildManifestPath","writePagesManifest","pagesManifest","pagesManifestPath","writeAppPathsManifest","appPathsManifest","appPathsManifestPath","writeMiddlewareManifest","middlewareManifest","middlewareManifestPath","writeFontManifest","fontManifestPath","NEXT_FONT_MANIFEST","appUsingSizeAdjust","pagesUsingSizeAdjust","writeOtherManifests","loadableManifestPath","subscribeToHmrEvents","client","mapping","hmrEvents","next","reloadAction","RELOAD_PAGE","close","unsubscribeToHmrEvents","mkdir","recursive","turbopackHotReloader","activeWebpackConfigs","serverStats","edgeServerStats","run","req","_res","_parsedUrl","_req_url","url","params","_hotreloaderwebpack","matchNextPageBundleRequest","decodedPagePath","path","param","decodeURIComponent","ensurePage","clientOnly","finished","onHMR","socket","head","handleUpgrade","add","on","addEventListener","parsedData","turbopackConnected","TURBOPACK_CONNECTED","setHmrServerError","_error","clearHmrServerError","stop","getCompilationErrors","_page","invalidate","buildFallbackError","inputPage","isApp","_match_definition","_match_definition1","definition","_apppaths","normalizeAppPath","_getmetadataroute","normalizeMetadataRoute","_utils1","PageNotFoundError","suffix","endsWith","htmlEndpoint","dataEndpoint","_swc","ServerClientChangeType","Both","SERVER_ONLY_CHANGES","rscEndpoint","SERVER_COMPONENT_CHANGES","config","buildId","telemetry","rewrites","fsChecker","previewProps","prerenderManifest","preview","nextScriptWorkers","_verifypartytownsetup","verifyPartytownSetup","CLIENT_STATIC_FILES_PATH","ensureCallback","ensure","item","itemPath","resolved","prevSortedRoutes","reject","_fs","readdir","_","files","directories","rootDir","_worker","getPossibleMiddlewareFilenames","getPossibleInstrumentationHookFilenames","nestedMiddleware","envFiles","tsconfigPaths","wp","_watchpack","ignored","d","fileWatchTimes","enabledTypeScript","previousClientRouterFilters","previousConflictingPagePaths","_serverFields_middleware","_serverFields_middleware1","_generateInterceptionRoutesRewrites","middlewareMatchers","routedPages","knownFiles","getTimeInfoEntries","appPaths","pageNameSet","conflictingAppPagePaths","appPageFilePaths","pagesPageFilePaths","envChange","tsconfigChange","conflictingPageChange","hasRootAppNotFound","appFiles","pageFiles","_shared1","devPageFiles","sortedKnownFiles","sort","_entries","sortByPageExts","fileName","includes","meta","watchTime","watchTimeChange","timestamp","accuracy","isPageFile","isAppPath","_normalizepathsep","normalizePathSep","isPagePath","rootFile","_absolutepathtopage","absolutePathToPage","extensions","keepIndex","pagesType","isMiddlewareFile","_staticInfo_middleware","staticInfo","getStaticInfoIncludingLayouts","pageFilePath","isDev","isInsideAppDir","output","isInstrumentationHookFile","instrumentationHook","_buildcontext","NextBuildContext","hasInstrumentationHook","actualInstrumentationHookFile","isRootNotFound","isAppRouterPage","originalPageName","nextDataRoutes","test","numConflicting","errorMessage","appPath","relative","pagesPath","clientRouterFilters","clientRouterFilter","_createclientrouterfilter","createClientRouterFilter","clientRouterFilterRedirects","_originalRedirects","r","internal","clientRouterFilterAllowedRate","then","_hotReloader_activeWebpackConfigs","_env","loadEnvConfig","envFilePath","dev","forceReload","silent","tsconfigResult","forEach","idx","isClient","isNodeServer","isEdgeServer","hasRewrites","_config_resolve_plugins","_config_resolve","plugins","plugin","jsConfigPlugin","_config_resolve_modules","_jsConfig_compilerOptions","resolvedBaseUrl","currentResolvedBaseUrl","resolvedUrlIndex","modules","findIndex","_config_resolve_modules1","_config_resolve1","_config_resolve_modules2","_config_resolve2","splice","compilerOptions","paths","_config_plugins","definitions","__NEXT_DEFINE_ENV","newDefine","_defineenvplugin","getDefineEnv","allowedRevalidateHeaderKeys","fetchCacheKeyPrefix","isNodeOrEdgeCompilation","previewModeId","reloadAfterInvalidation","NestedMiddlewareError","appPathRoutes","entries","k","v","hasAppNotFound","middlewareMatcher","_middlewareroutematcher","getMiddlewareRouteMatcher","interceptionRoutes","_generateinterceptionroutesrewrites","generateInterceptionRoutesRewrites","_filesystem","buildCustomRoute","basePath","caseSensitiveRoutes","exportPathMap","outDir","value","destination","query","_querystring","sortedRoutes","_utils","getSortedRoutes","dynamicRoutes","regex","_routeregex","getRouteRegex","re","_routematcher","getRouteMatcher","dataRoutes","_builddataroute","buildDataRoute","routeRegex","i18n","RegExp","dataRouteRegex","groups","unshift","every","val","addedRoutes","removedRoutes","DEV_PAGES_MANIFEST_UPDATE","devPagesManifest","ADDED_PAGE","REMOVED_PAGE","warn","startTime","clientPagesManifestPath","DEV_CLIENT_PAGES_MANIFEST","devVirtualFsItems","devMiddlewareManifestPath","DEV_MIDDLEWARE_MANIFEST","requestHandler","res","_parsedUrl_pathname","_parsedUrl_pathname1","parsedUrl","_url","statusCode","setHeader","logErrorWithOriginalStack","usedOriginalStack","_iserror","stack","frames","_middleware","parseStack","frame","find","lineNumber","_hotReloader_edgeServerStats","_hotReloader_serverStats","_frame_file","_frame_file1","_hotReloader_serverStats1","_hotReloader_edgeServerStats1","moduleId","modulePath","src","getErrorSource","isEdgeCompiler","COMPILER_NAMES","edgeServer","compilation","getSourceById","sep","originalFrame","createOriginalStackFrame","rootDirectory","serverCompilation","edgeCompilation","originalCodeFrame","originalStackFrame","methodName","_logappdirerror","logAppDirError","ensureMiddleware","isSrcDir","record","_events","eventCliSession","webpackVersion","turboFlag","cliCommand","isCustomServer","hasNowJson","_findup","cwd"],"sources":["../../../../src/server/lib/router-utils/setup-dev.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}