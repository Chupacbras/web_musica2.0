{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  getRouteLoaderEntry: null,\n  default: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  getRouteLoaderEntry: function () {\n    return getRouteLoaderEntry;\n  },\n  default: function () {\n    return _default;\n  }\n});\nconst _querystring = require(\"querystring\");\nconst _getmodulebuildinfo = require(\"../get-module-build-info\");\nconst _routekind = require(\"../../../../server/future/route-kind\");\nconst _normalizepagepath = require(\"../../../../shared/lib/page-path/normalize-page-path\");\nconst _utils = require(\"../utils\");\nconst _worker = require(\"../../../worker\");\nconst _loadentrypoint = require(\"../../../load-entrypoint\");\nfunction getRouteLoaderEntry(options) {\n  switch (options.kind) {\n    case _routekind.RouteKind.PAGES:\n      {\n        const query = {\n          kind: options.kind,\n          page: options.page,\n          preferredRegion: options.preferredRegion,\n          absolutePagePath: options.absolutePagePath,\n          // These are the path references to the internal components that may be\n          // overridden by userland components.\n          absoluteAppPath: options.pages[\"/_app\"],\n          absoluteDocumentPath: options.pages[\"/_document\"],\n          middlewareConfigBase64: (0, _utils.encodeToBase64)(options.middlewareConfig)\n        };\n        return `next-route-loader?${(0, _querystring.stringify)(query)}!`;\n      }\n    case _routekind.RouteKind.PAGES_API:\n      {\n        const query = {\n          kind: options.kind,\n          page: options.page,\n          preferredRegion: options.preferredRegion,\n          absolutePagePath: options.absolutePagePath,\n          middlewareConfigBase64: (0, _utils.encodeToBase64)(options.middlewareConfig)\n        };\n        return `next-route-loader?${(0, _querystring.stringify)(query)}!`;\n      }\n    default:\n      {\n        throw new Error(\"Invariant: Unexpected route kind\");\n      }\n  }\n}\nconst loadPages = async ({\n  page,\n  absolutePagePath,\n  absoluteDocumentPath,\n  absoluteAppPath,\n  preferredRegion,\n  middlewareConfigBase64\n}, buildInfo) => {\n  const middlewareConfig = (0, _utils.decodeFromBase64)(middlewareConfigBase64);\n  // Attach build info to the module.\n  buildInfo.route = {\n    page,\n    absolutePagePath,\n    preferredRegion,\n    middlewareConfig\n  };\n  let file = await (0, _loadentrypoint.loadEntrypoint)(\"pages\", {\n    VAR_USERLAND: absolutePagePath,\n    VAR_MODULE_DOCUMENT: absoluteDocumentPath,\n    VAR_MODULE_APP: absoluteAppPath,\n    VAR_DEFINITION_PAGE: (0, _normalizepagepath.normalizePagePath)(page),\n    VAR_DEFINITION_PATHNAME: page\n  });\n  if ((0, _worker.isInstrumentationHookFile)(page)) {\n    // When we're building the instrumentation page (only when the\n    // instrumentation file conflicts with a page also labeled\n    // /instrumentation) hoist the `register` method.\n    file += '\\nexport const register = hoist(userland, \"register\")';\n  }\n  return file;\n};\nconst loadPagesAPI = async ({\n  page,\n  absolutePagePath,\n  preferredRegion,\n  middlewareConfigBase64\n}, buildInfo) => {\n  const middlewareConfig = (0, _utils.decodeFromBase64)(middlewareConfigBase64);\n  // Attach build info to the module.\n  buildInfo.route = {\n    page,\n    absolutePagePath,\n    preferredRegion,\n    middlewareConfig\n  };\n  return await (0, _loadentrypoint.loadEntrypoint)(\"pages-api\", {\n    VAR_USERLAND: absolutePagePath,\n    VAR_DEFINITION_PAGE: (0, _normalizepagepath.normalizePagePath)(page),\n    VAR_DEFINITION_PATHNAME: page\n  });\n};\n/**\n * Handles the `next-route-loader` options.\n * @returns the loader definition function\n */\nconst loader = async function () {\n  if (!this._module) {\n    throw new Error(\"Invariant: expected this to reference a module\");\n  }\n  const buildInfo = (0, _getmodulebuildinfo.getModuleBuildInfo)(this._module);\n  const opts = this.getOptions();\n  switch (opts.kind) {\n    case _routekind.RouteKind.PAGES:\n      {\n        return await loadPages(opts, buildInfo);\n      }\n    case _routekind.RouteKind.PAGES_API:\n      {\n        return await loadPagesAPI(opts, buildInfo);\n      }\n    default:\n      {\n        throw new Error(\"Invariant: Unexpected route kind\");\n      }\n  }\n};\nconst _default = loader;","map":{"version":3,"names":["getRouteLoaderEntry","default","_default","options","kind","_routekind","RouteKind","PAGES","query","page","preferredRegion","absolutePagePath","absoluteAppPath","pages","absoluteDocumentPath","middlewareConfigBase64","_utils","encodeToBase64","middlewareConfig","_querystring","stringify","PAGES_API","Error","loadPages","buildInfo","decodeFromBase64","route","file","_loadentrypoint","loadEntrypoint","VAR_USERLAND","VAR_MODULE_DOCUMENT","VAR_MODULE_APP","VAR_DEFINITION_PAGE","_normalizepagepath","normalizePagePath","VAR_DEFINITION_PATHNAME","_worker","isInstrumentationHookFile","loadPagesAPI","loader","_module","_getmodulebuildinfo","getModuleBuildInfo","opts","getOptions"],"sources":["../../../../../src/build/webpack/loaders/next-route-loader/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}