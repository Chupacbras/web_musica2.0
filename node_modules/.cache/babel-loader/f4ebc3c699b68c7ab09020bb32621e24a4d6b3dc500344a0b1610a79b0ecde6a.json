{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  getRSCModuleInformation: null,\n  getMiddlewareMatchers: null,\n  isDynamicMetadataRoute: null,\n  getPageStaticInfo: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  getRSCModuleInformation: function () {\n    return getRSCModuleInformation;\n  },\n  getMiddlewareMatchers: function () {\n    return getMiddlewareMatchers;\n  },\n  isDynamicMetadataRoute: function () {\n    return isDynamicMetadataRoute;\n  },\n  getPageStaticInfo: function () {\n    return getPageStaticInfo;\n  }\n});\nconst _fs = require(\"fs\");\nconst _lrucache = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/lru-cache\"));\nconst _micromatch = require(\"next/dist/compiled/micromatch\");\nconst _extractconstvalue = require(\"./extract-const-value\");\nconst _parsemodule = require(\"./parse-module\");\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"../output/log\"));\nconst _constants = require(\"../../lib/constants\");\nconst _loadcustomroutes = require(\"../../lib/load-custom-routes\");\nconst _trytoparsepath = require(\"../../lib/try-to-parse-path\");\nconst _isapiroute = require(\"../../lib/is-api-route\");\nconst _isedgeruntime = require(\"../../lib/is-edge-runtime\");\nconst _constants1 = require(\"../../shared/lib/constants\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n// TODO: migrate preferredRegion here\n// Don't forget to update the next-types-plugin file as well\nconst AUTHORIZED_EXTRA_ROUTER_PROPS = [\"maxDuration\"];\nconst CLIENT_MODULE_LABEL = /\\/\\* __next_internal_client_entry_do_not_use__ ([^ ]*) (cjs|auto) \\*\\//;\nconst ACTION_MODULE_LABEL = /\\/\\* __next_internal_action_entry_do_not_use__ ([^ ]+) \\*\\//;\nconst CLIENT_DIRECTIVE = \"use client\";\nconst SERVER_ACTION_DIRECTIVE = \"use server\";\nfunction getRSCModuleInformation(source, isServerLayer) {\n  var _source_match_, _source_match, _clientInfoMatch_;\n  const actions = (_source_match = source.match(ACTION_MODULE_LABEL)) == null ? void 0 : (_source_match_ = _source_match[1]) == null ? void 0 : _source_match_.split(\",\");\n  const clientInfoMatch = source.match(CLIENT_MODULE_LABEL);\n  const isClientRef = !!clientInfoMatch;\n  if (!isServerLayer) {\n    return {\n      type: _constants1.RSC_MODULE_TYPES.client,\n      actions,\n      isClientRef\n    };\n  }\n  const clientRefs = clientInfoMatch == null ? void 0 : (_clientInfoMatch_ = clientInfoMatch[1]) == null ? void 0 : _clientInfoMatch_.split(\",\");\n  const clientEntryType = clientInfoMatch == null ? void 0 : clientInfoMatch[2];\n  const type = clientRefs ? _constants1.RSC_MODULE_TYPES.client : _constants1.RSC_MODULE_TYPES.server;\n  return {\n    type,\n    actions,\n    clientRefs,\n    clientEntryType,\n    isClientRef\n  };\n}\nconst warnedInvalidValueMap = {\n  runtime: new Map(),\n  preferredRegion: new Map()\n};\nfunction warnInvalidValue(pageFilePath, key, message) {\n  if (warnedInvalidValueMap[key].has(pageFilePath)) return;\n  _log.warn(`Next.js can't recognize the exported \\`${key}\\` field in \"${pageFilePath}\" as ${message}.` + \"\\n\" + \"The default runtime will be used instead.\");\n  warnedInvalidValueMap[key].set(pageFilePath, true);\n}\n/**\n * Receives a parsed AST from SWC and checks if it belongs to a module that\n * requires a runtime to be specified. Those are:\n *   - Modules with `export function getStaticProps | getServerSideProps`\n *   - Modules with `export { getStaticProps | getServerSideProps } <from ...>`\n *   - Modules with `export const runtime = ...`\n */\nfunction checkExports(swcAST, pageFilePath) {\n  const exportsSet = new Set([\"getStaticProps\", \"getServerSideProps\", \"generateImageMetadata\", \"generateSitemaps\", \"generateStaticParams\"]);\n  if (Array.isArray(swcAST == null ? void 0 : swcAST.body)) {\n    try {\n      let runtime;\n      let preferredRegion;\n      let ssr = false;\n      let ssg = false;\n      let generateImageMetadata = false;\n      let generateSitemaps = false;\n      let generateStaticParams = false;\n      let extraProperties = new Set();\n      let directives = new Set();\n      let hasLeadingNonDirectiveNode = false;\n      for (const node of swcAST.body) {\n        var _node_declaration, _node_declaration1, _node_declaration_identifier, _node_declaration2;\n        // There should be no non-string literals nodes before directives\n        if (node.type === \"ExpressionStatement\" && node.expression.type === \"StringLiteral\") {\n          if (!hasLeadingNonDirectiveNode) {\n            const directive = node.expression.value;\n            if (CLIENT_DIRECTIVE === directive) {\n              directives.add(\"client\");\n            }\n            if (SERVER_ACTION_DIRECTIVE === directive) {\n              directives.add(\"server\");\n            }\n          }\n        } else {\n          hasLeadingNonDirectiveNode = true;\n        }\n        if (node.type === \"ExportDeclaration\" && ((_node_declaration = node.declaration) == null ? void 0 : _node_declaration.type) === \"VariableDeclaration\") {\n          var _node_declaration3;\n          for (const declaration of (_node_declaration3 = node.declaration) == null ? void 0 : _node_declaration3.declarations) {\n            if (declaration.id.value === \"runtime\") {\n              runtime = declaration.init.value;\n            } else if (declaration.id.value === \"preferredRegion\") {\n              if (declaration.init.type === \"ArrayExpression\") {\n                const elements = [];\n                for (const element of declaration.init.elements) {\n                  const {\n                    expression\n                  } = element;\n                  if (expression.type !== \"StringLiteral\") {\n                    continue;\n                  }\n                  elements.push(expression.value);\n                }\n                preferredRegion = elements;\n              } else {\n                preferredRegion = declaration.init.value;\n              }\n            } else {\n              extraProperties.add(declaration.id.value);\n            }\n          }\n        }\n        if (node.type === \"ExportDeclaration\" && ((_node_declaration1 = node.declaration) == null ? void 0 : _node_declaration1.type) === \"FunctionDeclaration\" && exportsSet.has((_node_declaration_identifier = node.declaration.identifier) == null ? void 0 : _node_declaration_identifier.value)) {\n          const id = node.declaration.identifier.value;\n          ssg = id === \"getStaticProps\";\n          ssr = id === \"getServerSideProps\";\n          generateImageMetadata = id === \"generateImageMetadata\";\n          generateSitemaps = id === \"generateSitemaps\";\n          generateStaticParams = id === \"generateStaticParams\";\n        }\n        if (node.type === \"ExportDeclaration\" && ((_node_declaration2 = node.declaration) == null ? void 0 : _node_declaration2.type) === \"VariableDeclaration\") {\n          var _node_declaration_declarations_, _node_declaration4;\n          const id = (_node_declaration4 = node.declaration) == null ? void 0 : (_node_declaration_declarations_ = _node_declaration4.declarations[0]) == null ? void 0 : _node_declaration_declarations_.id.value;\n          if (exportsSet.has(id)) {\n            ssg = id === \"getStaticProps\";\n            ssr = id === \"getServerSideProps\";\n            generateImageMetadata = id === \"generateImageMetadata\";\n            generateSitemaps = id === \"generateSitemaps\";\n            generateStaticParams = id === \"generateStaticParams\";\n          }\n        }\n        if (node.type === \"ExportNamedDeclaration\") {\n          const values = node.specifiers.map(specifier => {\n            var _specifier_orig, _specifier_orig1;\n            return specifier.type === \"ExportSpecifier\" && ((_specifier_orig = specifier.orig) == null ? void 0 : _specifier_orig.type) === \"Identifier\" && ((_specifier_orig1 = specifier.orig) == null ? void 0 : _specifier_orig1.value);\n          });\n          for (const value of values) {\n            if (!ssg && value === \"getStaticProps\") ssg = true;\n            if (!ssr && value === \"getServerSideProps\") ssr = true;\n            if (!generateImageMetadata && value === \"generateImageMetadata\") generateImageMetadata = true;\n            if (!generateSitemaps && value === \"generateSitemaps\") generateSitemaps = true;\n            if (!generateStaticParams && value === \"generateStaticParams\") generateStaticParams = true;\n            if (!runtime && value === \"runtime\") warnInvalidValue(pageFilePath, \"runtime\", \"it was not assigned to a string literal\");\n            if (!preferredRegion && value === \"preferredRegion\") warnInvalidValue(pageFilePath, \"preferredRegion\", \"it was not assigned to a string literal or an array of string literals\");\n          }\n        }\n      }\n      return {\n        ssr,\n        ssg,\n        runtime,\n        preferredRegion,\n        generateImageMetadata,\n        generateSitemaps,\n        generateStaticParams,\n        extraProperties,\n        directives\n      };\n    } catch (err) {}\n  }\n  return {\n    ssg: false,\n    ssr: false,\n    runtime: undefined,\n    preferredRegion: undefined,\n    generateImageMetadata: false,\n    generateSitemaps: false,\n    generateStaticParams: false,\n    extraProperties: undefined,\n    directives: undefined\n  };\n}\nasync function tryToReadFile(filePath, shouldThrow) {\n  try {\n    return await _fs.promises.readFile(filePath, {\n      encoding: \"utf8\"\n    });\n  } catch (error) {\n    if (shouldThrow) {\n      error.message = `Next.js ERROR: Failed to read file ${filePath}:\\n${error.message}`;\n      throw error;\n    }\n  }\n}\nfunction getMiddlewareMatchers(matcherOrMatchers, nextConfig) {\n  let matchers = [];\n  if (Array.isArray(matcherOrMatchers)) {\n    matchers = matcherOrMatchers;\n  } else {\n    matchers.push(matcherOrMatchers);\n  }\n  const {\n    i18n\n  } = nextConfig;\n  const originalSourceMap = new Map();\n  let routes = matchers.map(m => {\n    let middleware = typeof m === \"string\" ? {\n      source: m\n    } : m;\n    if (middleware) {\n      originalSourceMap.set(middleware, middleware.source);\n    }\n    return middleware;\n  });\n  // check before we process the routes and after to ensure\n  // they are still valid\n  (0, _loadcustomroutes.checkCustomRoutes)(routes, \"middleware\");\n  routes = routes.map(r => {\n    let {\n      source\n    } = r;\n    const isRoot = source === \"/\";\n    if ((i18n == null ? void 0 : i18n.locales) && r.locale !== false) {\n      source = `/:nextInternalLocale((?!_next/)[^/.]{1,})${isRoot ? \"\" : source}`;\n    }\n    source = `/:nextData(_next/data/[^/]{1,})?${source}${isRoot ? `(${nextConfig.i18n ? \"|\\\\.json|\" : \"\"}/?index|/?index\\\\.json)?` : \"(.json)?\"}`;\n    if (nextConfig.basePath) {\n      source = `${nextConfig.basePath}${source}`;\n    }\n    r.source = source;\n    return r;\n  });\n  (0, _loadcustomroutes.checkCustomRoutes)(routes, \"middleware\");\n  return routes.map(r => {\n    const {\n      source,\n      ...rest\n    } = r;\n    const parsedPage = (0, _trytoparsepath.tryToParsePath)(source);\n    if (parsedPage.error || !parsedPage.regexStr) {\n      throw new Error(`Invalid source: ${source}`);\n    }\n    const originalSource = originalSourceMap.get(r);\n    return {\n      ...rest,\n      regexp: parsedPage.regexStr,\n      originalSource: originalSource || source\n    };\n  });\n}\nfunction getMiddlewareConfig(pageFilePath, config, nextConfig) {\n  const result = {};\n  if (config.matcher) {\n    result.matchers = getMiddlewareMatchers(config.matcher, nextConfig);\n  }\n  if (typeof config.regions === \"string\" || Array.isArray(config.regions)) {\n    result.regions = config.regions;\n  } else if (typeof config.regions !== \"undefined\") {\n    _log.warn(`The \\`regions\\` config was ignored: config must be empty, a string or an array of strings. (${pageFilePath})`);\n  }\n  if (config.unstable_allowDynamic) {\n    result.unstable_allowDynamicGlobs = Array.isArray(config.unstable_allowDynamic) ? config.unstable_allowDynamic : [config.unstable_allowDynamic];\n    for (const glob of result.unstable_allowDynamicGlobs ?? []) {\n      try {\n        (0, _micromatch.matcher)(glob);\n      } catch (err) {\n        throw new Error(`${pageFilePath} exported 'config.unstable_allowDynamic' contains invalid pattern '${glob}': ${err.message}`);\n      }\n    }\n  }\n  return result;\n}\nconst apiRouteWarnings = new _lrucache.default({\n  max: 250\n});\nfunction warnAboutExperimentalEdge(apiRoute) {\n  if (process.env.NODE_ENV === \"production\" && process.env.NEXT_PRIVATE_BUILD_WORKER === \"1\") {\n    return;\n  }\n  if (apiRouteWarnings.has(apiRoute)) {\n    return;\n  }\n  _log.warn(apiRoute ? `${apiRoute} provided runtime 'experimental-edge'. It can be updated to 'edge' instead.` : `You are using an experimental edge runtime, the API might change.`);\n  apiRouteWarnings.set(apiRoute, 1);\n}\nconst warnedUnsupportedValueMap = new _lrucache.default({\n  max: 250\n});\nfunction warnAboutUnsupportedValue(pageFilePath, page, error) {\n  if (warnedUnsupportedValueMap.has(pageFilePath)) {\n    return;\n  }\n  _log.warn(`Next.js can't recognize the exported \\`config\\` field in ` + (page ? `route \"${page}\"` : `\"${pageFilePath}\"`) + \":\\n\" + error.message + (error.path ? ` at \"${error.path}\"` : \"\") + \".\\n\" + \"The default config will be used instead.\\n\" + \"Read More - https://nextjs.org/docs/messages/invalid-page-config\");\n  warnedUnsupportedValueMap.set(pageFilePath, true);\n}\nasync function isDynamicMetadataRoute(pageFilePath) {\n  const fileContent = (await tryToReadFile(pageFilePath, true)) || \"\";\n  if (!/generateImageMetadata|generateSitemaps/.test(fileContent)) return false;\n  const swcAST = await (0, _parsemodule.parseModule)(pageFilePath, fileContent);\n  const exportsInfo = checkExports(swcAST, pageFilePath);\n  return !exportsInfo.generateImageMetadata || !exportsInfo.generateSitemaps;\n}\nasync function getPageStaticInfo(params) {\n  const {\n    isDev,\n    pageFilePath,\n    nextConfig,\n    page,\n    pageType\n  } = params;\n  const fileContent = (await tryToReadFile(pageFilePath, !isDev)) || \"\";\n  if (/runtime|preferredRegion|getStaticProps|getServerSideProps|generateStaticParams|export const/.test(fileContent)) {\n    const swcAST = await (0, _parsemodule.parseModule)(pageFilePath, fileContent);\n    const {\n      ssg,\n      ssr,\n      runtime,\n      preferredRegion,\n      generateStaticParams,\n      extraProperties,\n      directives\n    } = checkExports(swcAST, pageFilePath);\n    const rscInfo = getRSCModuleInformation(fileContent, true);\n    const rsc = rscInfo.type;\n    // default / failsafe value for config\n    let config;\n    try {\n      config = (0, _extractconstvalue.extractExportedConstValue)(swcAST, \"config\");\n    } catch (e) {\n      if (e instanceof _extractconstvalue.UnsupportedValueError) {\n        warnAboutUnsupportedValue(pageFilePath, page, e);\n      }\n      // `export config` doesn't exist, or other unknown error throw by swc, silence them\n    }\n\n    const extraConfig = {};\n    if (extraProperties && pageType === \"app\") {\n      for (const prop of extraProperties) {\n        if (!AUTHORIZED_EXTRA_ROUTER_PROPS.includes(prop)) continue;\n        try {\n          extraConfig[prop] = (0, _extractconstvalue.extractExportedConstValue)(swcAST, prop);\n        } catch (e) {\n          if (e instanceof _extractconstvalue.UnsupportedValueError) {\n            warnAboutUnsupportedValue(pageFilePath, page, e);\n          }\n        }\n      }\n    } else if (pageType === \"pages\") {\n      for (const key in config) {\n        if (!AUTHORIZED_EXTRA_ROUTER_PROPS.includes(key)) continue;\n        extraConfig[key] = config[key];\n      }\n    }\n    if (pageType === \"app\") {\n      if (config) {\n        let message = `Page config in ${pageFilePath} is deprecated. Replace \\`export const config=…\\` with the following:`;\n        if (config.runtime) {\n          message += `\\n  - \\`export const runtime = ${JSON.stringify(config.runtime)}\\``;\n        }\n        if (config.regions) {\n          message += `\\n  - \\`export const preferredRegion = ${JSON.stringify(config.regions)}\\``;\n        }\n        message += `\\nVisit https://nextjs.org/docs/app/api-reference/file-conventions/route-segment-config for more information.`;\n        if (isDev) {\n          _log.warnOnce(message);\n        } else {\n          throw new Error(message);\n        }\n        config = {};\n      }\n    }\n    if (!config) config = {};\n    // We use `export const config = { runtime: '...' }` to specify the page runtime for pages/.\n    // In the new app directory, we prefer to use `export const runtime = '...'`\n    // and deprecate the old way. To prevent breaking changes for `pages`, we use the exported config\n    // as the fallback value.\n    let resolvedRuntime;\n    if (pageType === \"app\") {\n      resolvedRuntime = runtime;\n    } else {\n      resolvedRuntime = runtime || config.runtime;\n    }\n    if (typeof resolvedRuntime !== \"undefined\" && resolvedRuntime !== _constants.SERVER_RUNTIME.nodejs && !(0, _isedgeruntime.isEdgeRuntime)(resolvedRuntime)) {\n      const options = Object.values(_constants.SERVER_RUNTIME).join(\", \");\n      const message = typeof resolvedRuntime !== \"string\" ? `The \\`runtime\\` config must be a string. Please leave it empty or choose one of: ${options}` : `Provided runtime \"${resolvedRuntime}\" is not supported. Please leave it empty or choose one of: ${options}`;\n      if (isDev) {\n        _log.error(message);\n      } else {\n        throw new Error(message);\n      }\n    }\n    const requiresServerRuntime = ssr || ssg || pageType === \"app\";\n    const isAnAPIRoute = (0, _isapiroute.isAPIRoute)(page == null ? void 0 : page.replace(/^(?:\\/src)?\\/pages\\//, \"/\"));\n    resolvedRuntime = (0, _isedgeruntime.isEdgeRuntime)(resolvedRuntime) || requiresServerRuntime ? resolvedRuntime : undefined;\n    if (resolvedRuntime === _constants.SERVER_RUNTIME.experimentalEdge) {\n      warnAboutExperimentalEdge(isAnAPIRoute ? page : null);\n    }\n    if (resolvedRuntime === _constants.SERVER_RUNTIME.edge && pageType === \"pages\" && page && !isAnAPIRoute) {\n      const message = `Page ${page} provided runtime 'edge', the edge runtime for rendering is currently experimental. Use runtime 'experimental-edge' instead.`;\n      if (isDev) {\n        _log.error(message);\n      } else {\n        throw new Error(message);\n      }\n    }\n    const middlewareConfig = getMiddlewareConfig(page ?? \"middleware/edge API route\", config, nextConfig);\n    if (pageType === \"app\" && (directives == null ? void 0 : directives.has(\"client\")) && generateStaticParams) {\n      throw new Error(`Page \"${page}\" cannot use both \"use client\" and export function \"generateStaticParams()\".`);\n    }\n    return {\n      ssr,\n      ssg,\n      rsc,\n      generateStaticParams,\n      amp: config.amp || false,\n      ...(middlewareConfig && {\n        middleware: middlewareConfig\n      }),\n      ...(resolvedRuntime && {\n        runtime: resolvedRuntime\n      }),\n      preferredRegion,\n      extraConfig\n    };\n  }\n  return {\n    ssr: false,\n    ssg: false,\n    rsc: _constants1.RSC_MODULE_TYPES.server,\n    generateStaticParams: false,\n    amp: false,\n    runtime: undefined\n  };\n}","map":{"version":3,"names":["getRSCModuleInformation","getMiddlewareMatchers","isDynamicMetadataRoute","getPageStaticInfo","AUTHORIZED_EXTRA_ROUTER_PROPS","CLIENT_MODULE_LABEL","ACTION_MODULE_LABEL","CLIENT_DIRECTIVE","SERVER_ACTION_DIRECTIVE","source","isServerLayer","_source_match_","_source_match","_clientInfoMatch_","actions","match","split","clientInfoMatch","isClientRef","type","_constants1","RSC_MODULE_TYPES","client","clientRefs","clientEntryType","server","warnedInvalidValueMap","runtime","Map","preferredRegion","warnInvalidValue","pageFilePath","key","message","has","_log","warn","set","checkExports","swcAST","exportsSet","Set","Array","isArray","body","ssr","ssg","generateImageMetadata","generateSitemaps","generateStaticParams","extraProperties","directives","hasLeadingNonDirectiveNode","node","_node_declaration","_node_declaration1","_node_declaration_identifier","_node_declaration2","expression","directive","value","add","declaration","_node_declaration3","declarations","id","init","elements","element","push","identifier","_node_declaration_declarations_","_node_declaration4","values","specifiers","map","specifier","_specifier_orig","_specifier_orig1","orig","err","undefined","tryToReadFile","filePath","shouldThrow","_fs","promises","readFile","encoding","error","matcherOrMatchers","nextConfig","matchers","i18n","originalSourceMap","routes","m","middleware","_loadcustomroutes","checkCustomRoutes","r","isRoot","locales","locale","basePath","rest","parsedPage","_trytoparsepath","tryToParsePath","regexStr","Error","originalSource","get","regexp","getMiddlewareConfig","config","result","matcher","regions","unstable_allowDynamic","unstable_allowDynamicGlobs","glob","_micromatch","apiRouteWarnings","_lrucache","default","max","warnAboutExperimentalEdge","apiRoute","process","env","NODE_ENV","NEXT_PRIVATE_BUILD_WORKER","warnedUnsupportedValueMap","warnAboutUnsupportedValue","page","path","fileContent","test","_parsemodule","parseModule","exportsInfo","params","isDev","pageType","rscInfo","rsc","_extractconstvalue","extractExportedConstValue","e","UnsupportedValueError","extraConfig","prop","includes","JSON","stringify","warnOnce","resolvedRuntime","_constants","SERVER_RUNTIME","nodejs","_isedgeruntime","isEdgeRuntime","options","Object","join","requiresServerRuntime","isAnAPIRoute","_isapiroute","isAPIRoute","replace","experimentalEdge","edge","middlewareConfig","amp"],"sources":["../../../src/build/analysis/get-page-static-info.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}