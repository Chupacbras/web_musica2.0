{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst ReactRefreshModule_runtime_1 = __importDefault(require(\"./internal/ReactRefreshModule.runtime\"));\nlet refreshModuleRuntime = ReactRefreshModule_runtime_1.default.toString();\nrefreshModuleRuntime = refreshModuleRuntime.slice(refreshModuleRuntime.indexOf('{') + 1, refreshModuleRuntime.lastIndexOf('}'))\n// Given that the import above executes the module we need to make sure it does not crash on `import.meta` not being allowed.\n.replace('global.importMeta', 'import.meta');\nlet commonJsrefreshModuleRuntime = refreshModuleRuntime.replace('import.meta.webpackHot', 'module.hot');\nconst ReactRefreshLoader = function ReactRefreshLoader(source, inputSourceMap) {\n  this.callback(null, `${source}\\n\\n;${\n  // Account for commonjs not supporting `import.meta\n  this.resourcePath.endsWith('.cjs') ? commonJsrefreshModuleRuntime : refreshModuleRuntime}`, inputSourceMap);\n};\nexports.default = ReactRefreshLoader;","map":{"version":3,"names":["__importDefault","mod","__esModule","Object","defineProperty","exports","value","ReactRefreshModule_runtime_1","require","refreshModuleRuntime","default","toString","slice","indexOf","lastIndexOf","replace","commonJsrefreshModuleRuntime","ReactRefreshLoader","source","inputSourceMap","callback","resourcePath","endsWith"],"sources":["/Users/albertformatger/Documents/GitHub/web_musica/node_modules/next/dist/compiled/@next/react-refresh-utils/dist/loader.js"],"sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ReactRefreshModule_runtime_1 = __importDefault(require(\"./internal/ReactRefreshModule.runtime\"));\nlet refreshModuleRuntime = ReactRefreshModule_runtime_1.default.toString();\nrefreshModuleRuntime = refreshModuleRuntime\n    .slice(refreshModuleRuntime.indexOf('{') + 1, refreshModuleRuntime.lastIndexOf('}'))\n    // Given that the import above executes the module we need to make sure it does not crash on `import.meta` not being allowed.\n    .replace('global.importMeta', 'import.meta');\nlet commonJsrefreshModuleRuntime = refreshModuleRuntime.replace('import.meta.webpackHot', 'module.hot');\nconst ReactRefreshLoader = function ReactRefreshLoader(source, inputSourceMap) {\n    this.callback(null, `${source}\\n\\n;${\n    // Account for commonjs not supporting `import.meta\n    this.resourcePath.endsWith('.cjs')\n        ? commonJsrefreshModuleRuntime\n        : refreshModuleRuntime}`, inputSourceMap);\n};\nexports.default = ReactRefreshLoader;\n//# sourceMappingURL=loader.js.map"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,eAAe,GAAI,IAAI,IAAI,IAAI,CAACA,eAAe,IAAK,UAAUC,GAAG,EAAE;EACnE,OAAQA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAID,GAAG,GAAG;IAAE,SAAS,EAAEA;EAAI,CAAC;AAC7D,CAAC;AACDE,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,4BAA4B,GAAGP,eAAe,CAACQ,OAAO,CAAC,uCAAuC,CAAC,CAAC;AACtG,IAAIC,oBAAoB,GAAGF,4BAA4B,CAACG,OAAO,CAACC,QAAQ,CAAC,CAAC;AAC1EF,oBAAoB,GAAGA,oBAAoB,CACtCG,KAAK,CAACH,oBAAoB,CAACI,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAEJ,oBAAoB,CAACK,WAAW,CAAC,GAAG,CAAC;AACnF;AAAA,CACCC,OAAO,CAAC,mBAAmB,EAAE,aAAa,CAAC;AAChD,IAAIC,4BAA4B,GAAGP,oBAAoB,CAACM,OAAO,CAAC,wBAAwB,EAAE,YAAY,CAAC;AACvG,MAAME,kBAAkB,GAAG,SAASA,kBAAkBA,CAACC,MAAM,EAAEC,cAAc,EAAE;EAC3E,IAAI,CAACC,QAAQ,CAAC,IAAI,EAAG,GAAEF,MAAO;EAC9B;EACA,IAAI,CAACG,YAAY,CAACC,QAAQ,CAAC,MAAM,CAAC,GAC5BN,4BAA4B,GAC5BP,oBAAqB,EAAC,EAAEU,cAAc,CAAC;AACjD,CAAC;AACDd,OAAO,CAACK,OAAO,GAAGO,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}