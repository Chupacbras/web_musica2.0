{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"createMetadataComponents\", {\n  enumerable: true,\n  get: function () {\n    return createMetadataComponents;\n  }\n});\nconst _react = /*#__PURE__*/_interop_require_default(require(\"react\"));\nconst _basic = require(\"./generate/basic\");\nconst _alternate = require(\"./generate/alternate\");\nconst _opengraph = require(\"./generate/opengraph\");\nconst _icons = require(\"./generate/icons\");\nconst _resolvemetadata = require(\"./resolve-metadata\");\nconst _meta = require(\"./generate/meta\");\nconst _defaultmetadata = require(\"./default-metadata\");\nconst _notfound = require(\"../../client/components/not-found\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction createMetadataComponents({\n  tree,\n  pathname,\n  searchParams,\n  getDynamicParamFromSegment,\n  appUsingSizeAdjust,\n  errorType\n}) {\n  const metadataContext = {\n    pathname\n  };\n  let resolve;\n  // Only use promise.resolve here to avoid unhandled rejections\n  const metadataErrorResolving = new Promise(res => {\n    resolve = res;\n  });\n  async function MetadataTree() {\n    const defaultMetadata = (0, _defaultmetadata.createDefaultMetadata)();\n    let metadata = defaultMetadata;\n    let error;\n    const errorMetadataItem = [null, null];\n    const errorConvention = errorType === \"redirect\" ? undefined : errorType;\n    const [resolvedMetadata, resolvedError] = await (0, _resolvemetadata.resolveMetadata)({\n      tree,\n      parentParams: {},\n      metadataItems: [],\n      errorMetadataItem,\n      searchParams,\n      getDynamicParamFromSegment,\n      errorConvention,\n      metadataContext\n    });\n    if (!resolvedError) {\n      metadata = resolvedMetadata;\n      resolve(undefined);\n    } else {\n      error = resolvedError;\n      // If the error triggers in initial metadata resolving, re-resolve with proper error type.\n      // They'll be saved for flight data, when hydrates, it will replaces the SSR'd metadata with this.\n      // for not-found error: resolve not-found metadata\n      if (!errorType && (0, _notfound.isNotFoundError)(resolvedError)) {\n        const [notFoundMetadata, notFoundMetadataError] = await (0, _resolvemetadata.resolveMetadata)({\n          tree,\n          parentParams: {},\n          metadataItems: [],\n          errorMetadataItem,\n          searchParams,\n          getDynamicParamFromSegment,\n          errorConvention: \"not-found\",\n          metadataContext\n        });\n        metadata = notFoundMetadata;\n        error = notFoundMetadataError || error;\n      }\n      resolve(error);\n    }\n    const elements = (0, _meta.MetaFilter)([(0, _basic.BasicMetadata)({\n      metadata\n    }), (0, _alternate.AlternatesMetadata)({\n      alternates: metadata.alternates\n    }), (0, _basic.ItunesMeta)({\n      itunes: metadata.itunes\n    }), (0, _basic.FormatDetectionMeta)({\n      formatDetection: metadata.formatDetection\n    }), (0, _basic.VerificationMeta)({\n      verification: metadata.verification\n    }), (0, _basic.AppleWebAppMeta)({\n      appleWebApp: metadata.appleWebApp\n    }), (0, _opengraph.OpenGraphMetadata)({\n      openGraph: metadata.openGraph\n    }), (0, _opengraph.TwitterMetadata)({\n      twitter: metadata.twitter\n    }), (0, _opengraph.AppLinksMeta)({\n      appLinks: metadata.appLinks\n    }), (0, _icons.IconsMetadata)({\n      icons: metadata.icons\n    })]);\n    if (appUsingSizeAdjust) elements.push( /*#__PURE__*/_react.default.createElement(\"meta\", {\n      name: \"next-size-adjust\"\n    }));\n    return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, elements.map((el, index) => {\n      return /*#__PURE__*/_react.default.cloneElement(el, {\n        key: index\n      });\n    }));\n  }\n  async function MetadataOutlet() {\n    const error = await metadataErrorResolving;\n    if (error) {\n      throw error;\n    }\n    return null;\n  }\n  // @ts-expect-error async server components\n  return [MetadataTree, MetadataOutlet];\n}","map":{"version":3,"names":["createMetadataComponents","tree","pathname","searchParams","getDynamicParamFromSegment","appUsingSizeAdjust","errorType","metadataContext","resolve","metadataErrorResolving","Promise","res","MetadataTree","defaultMetadata","_defaultmetadata","createDefaultMetadata","metadata","error","errorMetadataItem","errorConvention","undefined","resolvedMetadata","resolvedError","_resolvemetadata","resolveMetadata","parentParams","metadataItems","_notfound","isNotFoundError","notFoundMetadata","notFoundMetadataError","elements","_meta","MetaFilter","_basic","BasicMetadata","_alternate","AlternatesMetadata","alternates","ItunesMeta","itunes","FormatDetectionMeta","formatDetection","VerificationMeta","verification","AppleWebAppMeta","appleWebApp","_opengraph","OpenGraphMetadata","openGraph","TwitterMetadata","twitter","AppLinksMeta","appLinks","_icons","IconsMetadata","icons","push","_react","default","createElement","name","Fragment","map","el","index","cloneElement","key","MetadataOutlet"],"sources":["../../../src/lib/metadata/metadata.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}