{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"createErrorHandler\", {\n  enumerable: true,\n  get: function () {\n    return createErrorHandler;\n  }\n});\nconst _hooksservercontext = require(\"../../client/components/hooks-server-context\");\nconst _stringhash = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/string-hash\"));\nconst _formatservererror = require(\"../../lib/format-server-error\");\nconst _notfound = require(\"../../client/components/not-found\");\nconst _redirect = require(\"../../client/components/redirect\");\nconst _nossrerror = require(\"../../shared/lib/lazy-dynamic/no-ssr-error\");\nconst _tracer = require(\"../lib/trace/tracer\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction createErrorHandler({\n  /**\n  * Used for debugging\n  */\n  _source,\n  dev,\n  isNextExport,\n  errorLogger,\n  capturedErrors,\n  allCapturedErrors\n}) {\n  return err => {\n    var _err_message;\n    if (allCapturedErrors) allCapturedErrors.push(err);\n    if (err && (err.digest === _hooksservercontext.DYNAMIC_ERROR_CODE || (0, _notfound.isNotFoundError)(err) || err.digest === _nossrerror.NEXT_DYNAMIC_NO_SSR_CODE || (0, _redirect.isRedirectError)(err))) {\n      return err.digest;\n    }\n    // Format server errors in development to add more helpful error messages\n    if (dev) {\n      (0, _formatservererror.formatServerError)(err);\n    }\n    // Used for debugging error source\n    // console.error(_source, err)\n    // Don't log the suppressed error during export\n    if (!(isNextExport && (err == null ? void 0 : (_err_message = err.message) == null ? void 0 : _err_message.includes(\"The specific message is omitted in production builds to avoid leaking sensitive details.\")))) {\n      // Record exception in an active span, if available.\n      const span = (0, _tracer.getTracer)().getActiveScopeSpan();\n      if (span) {\n        span.recordException(err);\n        span.setStatus({\n          code: _tracer.SpanStatusCode.ERROR,\n          message: err.message\n        });\n      }\n      if (errorLogger) {\n        errorLogger(err).catch(() => {});\n      } else {\n        // The error logger is currently not provided in the edge runtime.\n        // Use `log-app-dir-error` instead.\n        // It won't log the source code, but the error will be more useful.\n        if (process.env.NODE_ENV !== \"production\") {\n          const {\n            logAppDirError\n          } = require(\"../dev/log-app-dir-error\");\n          logAppDirError(err);\n        }\n        if (process.env.NODE_ENV === \"production\") {\n          console.error(err);\n        }\n      }\n    }\n    capturedErrors.push(err);\n    // TODO-APP: look at using webcrypto instead. Requires a promise to be awaited.\n    return (0, _stringhash.default)(err.message + err.stack + (err.digest || \"\")).toString();\n  };\n}","map":{"version":3,"names":["createErrorHandler","_source","dev","isNextExport","errorLogger","capturedErrors","allCapturedErrors","err","_err_message","push","digest","_hooksservercontext","DYNAMIC_ERROR_CODE","_notfound","isNotFoundError","_nossrerror","NEXT_DYNAMIC_NO_SSR_CODE","_redirect","isRedirectError","_formatservererror","formatServerError","message","includes","span","_tracer","getTracer","getActiveScopeSpan","recordException","setStatus","code","SpanStatusCode","ERROR","catch","process","env","NODE_ENV","logAppDirError","require","console","error","_stringhash","default","stack","toString"],"sources":["../../../src/server/app-render/create-error-handler.tsx"],"sourcesContent":[null],"mappings":";;;;;+BAagB;;;WAAAA,kBAAA;;;oCAbmB;kEACZ;mCACW;0BACF;0BACA;4BACS;wBACC;;;;;;AAOnC,SAASA,mBAAmB;EACjC;;;EAGAC,OAAO;EACPC,GAAG;EACHC,YAAY;EACZC,WAAW;EACXC,cAAc;EACdC;AAAiB,CAQlB;EACC,OAAQC,GAAA;QAuBFC,YAAA;IAtBJ,IAAIF,iBAAA,EAAmBA,iBAAA,CAAkBG,IAAI,CAACF,GAAA;IAE9C,IACEA,GAAA,KACCA,GAAA,CAAIG,MAAM,KAAKC,mBAAA,CAAAC,kBAAkB,IAChC,IAAAC,SAAA,CAAAC,eAAe,EAACP,GAAA,KAChBA,GAAA,CAAIG,MAAM,KAAKK,WAAA,CAAAC,wBAAwB,IACvC,IAAAC,SAAA,CAAAC,eAAe,EAACX,GAAA,CAAG,GACrB;MACA,OAAOA,GAAA,CAAIG,MAAM;IACnB;IAEA;IACA,IAAIR,GAAA,EAAK;MACP,IAAAiB,kBAAA,CAAAC,iBAAiB,EAACb,GAAA;IACpB;IACA;IACA;IACA;IACA,IACE,EACEJ,YAAA,KACAI,GAAA,qBAAAC,YAAA,GAAAD,GAAA,CAAKc,OAAO,qBAAZb,YAAA,CAAcc,QAAQ,CACpB,4FACF,GAEF;MACA;MACA,MAAMC,IAAA,GAAO,IAAAC,OAAA,CAAAC,SAAS,IAAGC,kBAAkB;MAC3C,IAAIH,IAAA,EAAM;QACRA,IAAA,CAAKI,eAAe,CAACpB,GAAA;QACrBgB,IAAA,CAAKK,SAAS,CAAC;UACbC,IAAA,EAAML,OAAA,CAAAM,cAAc,CAACC,KAAK;UAC1BV,OAAA,EAASd,GAAA,CAAIc;QACf;MACF;MAEA,IAAIjB,WAAA,EAAa;QACfA,WAAA,CAAYG,GAAA,EAAKyB,KAAK,CAAC,OAAO;MAChC,OAAO;QACL;QACA;QACA;QACA,IAAIC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;UACzC,MAAM;YAAEC;UAAc,CAAE,GACtBC,OAAA,CAAQ;UACVD,cAAA,CAAe7B,GAAA;QACjB;QACA,IAAI0B,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;UACzCG,OAAA,CAAQC,KAAK,CAAChC,GAAA;QAChB;MACF;IACF;IAEAF,cAAA,CAAeI,IAAI,CAACF,GAAA;IACpB;IACA,OAAO,IAAAiC,WAAA,CAAAC,OAAU,EAAClC,GAAA,CAAIc,OAAO,GAAGd,GAAA,CAAImC,KAAK,IAAInC,GAAA,CAAIG,MAAM,IAAI,EAAC,GAAIiC,QAAQ;EAC1E;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}