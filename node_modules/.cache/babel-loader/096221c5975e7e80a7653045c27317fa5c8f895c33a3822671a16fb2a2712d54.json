{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"ClientReferenceManifestPlugin\", {\n  enumerable: true,\n  get: function () {\n    return ClientReferenceManifestPlugin;\n  }\n});\nconst _path = /*#__PURE__*/_interop_require_wildcard(require(\"path\"));\nconst _webpack = require(\"next/dist/compiled/webpack/webpack\");\nconst _constants = require(\"../../../shared/lib/constants\");\nconst _buildcontext = require(\"../../build-context\");\nconst _nonnullable = require(\"../../../lib/non-nullable\");\nconst _constants1 = require(\"../../../lib/constants\");\nconst _normalizepagepath = require(\"../../../shared/lib/page-path/normalize-page-path\");\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nconst pluginState = (0, _buildcontext.getProxiedPluginState)({\n  serverModuleIds: {},\n  edgeServerModuleIds: {},\n  ASYNC_CLIENT_MODULES: []\n});\nfunction getAppPathRequiredChunks(chunkGroup) {\n  return chunkGroup.chunks.map(requiredChunk => {\n    if (_constants.SYSTEM_ENTRYPOINTS.has(requiredChunk.name || \"\")) {\n      return null;\n    }\n    // Get the actual chunk file names from the chunk file list.\n    // It's possible that the chunk is generated via `import()`, in\n    // that case the chunk file name will be '[name].[contenthash]'\n    // instead of '[name]-[chunkhash]'.\n    return [...requiredChunk.files].map(file => {\n      // It's possible that a chunk also emits CSS files, that will\n      // be handled separatedly.\n      if (!file.endsWith(\".js\")) return null;\n      if (file.endsWith(\".hot-update.js\")) return null;\n      return requiredChunk.id + \":\" + file;\n    });\n  }).flat().filter(_nonnullable.nonNullable);\n}\n// Normalize the entry names to their \"group names\" so a page can easily track\n// all the manifest items it needs from parent groups by looking up the group\n// segments:\n// - app/foo/loading -> app/foo\n// - app/foo/page -> app/foo\n// - app/(group)/@named/foo/page -> app/foo\n// - app/(.)foo/(..)bar/loading -> app/bar\nfunction entryNameToGroupName(entryName) {\n  let groupName = entryName.slice(0, entryName.lastIndexOf(\"/\")).replace(/\\/@[^/]+/g, \"\") // Remove the group with lookahead to make sure it's not interception route\n  .replace(/\\/\\([^/]+\\)(?=(\\/|$))/g, \"\");\n  // Interception routes\n  groupName = groupName.replace(/^.+\\/\\(\\.\\.\\.\\)/g, \"app/\").replace(/\\/\\(\\.\\)/g, \"/\");\n  // Interception routes (recursive)\n  while (/\\/[^/]+\\/\\(\\.\\.\\)/.test(groupName)) {\n    groupName = groupName.replace(/\\/[^/]+\\/\\(\\.\\.\\)/g, \"/\");\n  }\n  return groupName;\n}\nfunction mergeManifest(manifest, manifestToMerge) {\n  Object.assign(manifest.clientModules, manifestToMerge.clientModules);\n  Object.assign(manifest.ssrModuleMapping, manifestToMerge.ssrModuleMapping);\n  Object.assign(manifest.edgeSSRModuleMapping, manifestToMerge.edgeSSRModuleMapping);\n  Object.assign(manifest.entryCSSFiles, manifestToMerge.entryCSSFiles);\n}\nconst PLUGIN_NAME = \"ClientReferenceManifestPlugin\";\nclass ClientReferenceManifestPlugin {\n  constructor(options) {\n    this.dev = false;\n    this.dev = options.dev;\n    this.appDir = options.appDir;\n    this.appDirBase = _path.default.dirname(this.appDir) + _path.default.sep;\n    this.ASYNC_CLIENT_MODULES = new Set(pluginState.ASYNC_CLIENT_MODULES);\n  }\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, {\n      normalModuleFactory\n    }) => {\n      compilation.dependencyFactories.set(_webpack.webpack.dependencies.ModuleDependency, normalModuleFactory);\n      compilation.dependencyTemplates.set(_webpack.webpack.dependencies.ModuleDependency, new _webpack.webpack.dependencies.NullDependency.Template());\n      compilation.hooks.processAssets.tap({\n        name: PLUGIN_NAME,\n        // Have to be in the optimize stage to run after updating the CSS\n        // asset hash via extract mini css plugin.\n        stage: _webpack.webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_HASH\n      }, assets => this.createAsset(assets, compilation, compiler.context));\n    });\n  }\n  createAsset(assets, compilation, context) {\n    const manifestsPerGroup = new Map();\n    const manifestEntryFiles = [];\n    compilation.chunkGroups.forEach(chunkGroup => {\n      // By default it's the shared chunkGroup (main-app) for every page.\n      let entryName = \"\";\n      const manifest = {\n        ssrModuleMapping: {},\n        edgeSSRModuleMapping: {},\n        clientModules: {},\n        entryCSSFiles: {}\n      };\n      if (chunkGroup.name && /^app[\\\\/]/.test(chunkGroup.name)) {\n        // Absolute path without the extension\n        const chunkEntryName = (this.appDirBase + chunkGroup.name).replace(/[\\\\/]/g, _path.default.sep);\n        manifest.entryCSSFiles[chunkEntryName] = chunkGroup.getFiles().filter(f => !f.startsWith(\"static/css/pages/\") && f.endsWith(\".css\"));\n        entryName = chunkGroup.name;\n      }\n      const requiredChunks = getAppPathRequiredChunks(chunkGroup);\n      const recordModule = (id, mod) => {\n        var _mod_resourceResolveData;\n        // Skip all modules from the pages folder.\n        if (mod.layer !== _constants1.WEBPACK_LAYERS.appPagesBrowser) {\n          return;\n        }\n        const resource = mod.type === \"css/mini-extract\" ? mod._identifier.slice(mod._identifier.lastIndexOf(\"!\") + 1) : mod.resource;\n        if (!resource) {\n          return;\n        }\n        const moduleReferences = manifest.clientModules;\n        const moduleIdMapping = manifest.ssrModuleMapping;\n        const edgeModuleIdMapping = manifest.edgeSSRModuleMapping;\n        // Note that this isn't that reliable as webpack is still possible to assign\n        // additional queries to make sure there's no conflict even using the `named`\n        // module ID strategy.\n        let ssrNamedModuleId = (0, _path.relative)(context, ((_mod_resourceResolveData = mod.resourceResolveData) == null ? void 0 : _mod_resourceResolveData.path) || resource);\n        if (!ssrNamedModuleId.startsWith(\".\")) ssrNamedModuleId = `./${ssrNamedModuleId.replace(/\\\\/g, \"/\")}`;\n        const isAsyncModule = this.ASYNC_CLIENT_MODULES.has(mod.resource);\n        // The client compiler will always use the CJS Next.js build, so here we\n        // also add the mapping for the ESM build (Edge runtime) to consume.\n        const esmResource = /[\\\\/]next[\\\\/]dist[\\\\/]/.test(resource) ? resource.replace(/[\\\\/]next[\\\\/]dist[\\\\/]/, \"/next/dist/esm/\".replace(/\\//g, _path.default.sep)) : null;\n        function addClientReference() {\n          const exportName = resource;\n          manifest.clientModules[exportName] = {\n            id,\n            name: \"*\",\n            chunks: requiredChunks,\n            async: isAsyncModule\n          };\n          if (esmResource) {\n            const edgeExportName = esmResource;\n            manifest.clientModules[edgeExportName] = manifest.clientModules[exportName];\n          }\n        }\n        function addSSRIdMapping() {\n          const exportName = resource;\n          if (typeof pluginState.serverModuleIds[ssrNamedModuleId] !== \"undefined\") {\n            moduleIdMapping[id] = moduleIdMapping[id] || {};\n            moduleIdMapping[id][\"*\"] = {\n              ...manifest.clientModules[exportName],\n              // During SSR, we don't have external chunks to load on the server\n              // side with our architecture of Webpack / Turbopack. We can keep\n              // this field empty to save some bytes.\n              chunks: [],\n              id: pluginState.serverModuleIds[ssrNamedModuleId]\n            };\n          }\n          if (typeof pluginState.edgeServerModuleIds[ssrNamedModuleId] !== \"undefined\") {\n            edgeModuleIdMapping[id] = edgeModuleIdMapping[id] || {};\n            edgeModuleIdMapping[id][\"*\"] = {\n              ...manifest.clientModules[exportName],\n              // During SSR, we don't have external chunks to load on the server\n              // side with our architecture of Webpack / Turbopack. We can keep\n              // this field empty to save some bytes.\n              chunks: [],\n              id: pluginState.edgeServerModuleIds[ssrNamedModuleId]\n            };\n          }\n        }\n        addClientReference();\n        addSSRIdMapping();\n        manifest.clientModules = moduleReferences;\n        manifest.ssrModuleMapping = moduleIdMapping;\n        manifest.edgeSSRModuleMapping = edgeModuleIdMapping;\n      };\n      // Only apply following logic to client module requests from client entry,\n      // or if the module is marked as client module. That's because other\n      // client modules don't need to be in the manifest at all as they're\n      // never be referenced by the server/client boundary.\n      // This saves a lot of bytes in the manifest.\n      chunkGroup.chunks.forEach(chunk => {\n        const entryMods = compilation.chunkGraph.getChunkEntryModulesIterable(chunk);\n        for (const mod of entryMods) {\n          if (mod.layer !== _constants1.WEBPACK_LAYERS.appPagesBrowser) continue;\n          const request = mod.request;\n          if (!request || !request.includes(\"next-flight-client-entry-loader.js?\")) {\n            continue;\n          }\n          const connections = compilation.moduleGraph.getOutgoingConnections(mod);\n          for (const connection of connections) {\n            const dependency = connection.dependency;\n            if (!dependency) continue;\n            const clientEntryMod = compilation.moduleGraph.getResolvedModule(dependency);\n            const modId = compilation.chunkGraph.getModuleId(clientEntryMod);\n            if (modId !== null) {\n              recordModule(modId, clientEntryMod);\n            } else {\n              var _connection_module;\n              // If this is a concatenation, register each child to the parent ID.\n              if (((_connection_module = connection.module) == null ? void 0 : _connection_module.constructor.name) === \"ConcatenatedModule\") {\n                const concatenatedMod = connection.module;\n                const concatenatedModId = compilation.chunkGraph.getModuleId(concatenatedMod);\n                recordModule(concatenatedModId, clientEntryMod);\n              }\n            }\n          }\n        }\n      });\n      // A page's entry name can have extensions. For example, these are both valid:\n      // - app/foo/page\n      // - app/foo/page.page\n      if (/\\/page(\\.[^/]+)?$/.test(entryName)) {\n        manifestEntryFiles.push(entryName.replace(/\\/page(\\.[^/]+)?$/, \"/page\"));\n      }\n      // Special case for the root not-found page.\n      // dev: app/not-found\n      // prod: app/_not-found\n      if (/^app\\/_?not-found(\\.[^.]+)?$/.test(entryName)) {\n        manifestEntryFiles.push(this.dev ? \"app/not-found\" : \"app/_not-found\");\n      }\n      const groupName = entryNameToGroupName(entryName);\n      if (!manifestsPerGroup.has(groupName)) {\n        manifestsPerGroup.set(groupName, []);\n      }\n      manifestsPerGroup.get(groupName).push(manifest);\n    });\n    // Generate per-page manifests.\n    for (const pageName of manifestEntryFiles) {\n      const mergedManifest = {\n        ssrModuleMapping: {},\n        edgeSSRModuleMapping: {},\n        clientModules: {},\n        entryCSSFiles: {}\n      };\n      const segments = [...entryNameToGroupName(pageName).split(\"/\"), \"page\"];\n      let group = \"\";\n      for (const segment of segments) {\n        for (const manifest of manifestsPerGroup.get(group) || []) {\n          mergeManifest(mergedManifest, manifest);\n        }\n        group += (group ? \"/\" : \"\") + segment;\n      }\n      const json = JSON.stringify(mergedManifest);\n      const pagePath = pageName.replace(/%5F/g, \"_\");\n      const pageBundlePath = (0, _normalizepagepath.normalizePagePath)(pagePath.slice(\"app\".length));\n      assets[\"server/app\" + pageBundlePath + \"_\" + _constants.CLIENT_REFERENCE_MANIFEST + \".js\"] = new _webpack.sources.RawSource(`globalThis.__RSC_MANIFEST=(globalThis.__RSC_MANIFEST||{});globalThis.__RSC_MANIFEST[${JSON.stringify(pagePath.slice(\"app\".length))}]=${json}`);\n      if (pagePath === \"app/not-found\") {\n        // Create a separate special manifest for the root not-found page.\n        assets[\"server/app/_not-found_\" + _constants.CLIENT_REFERENCE_MANIFEST + \".js\"] = new _webpack.sources.RawSource(`globalThis.__RSC_MANIFEST=(globalThis.__RSC_MANIFEST||{});globalThis.__RSC_MANIFEST[${JSON.stringify(\"/_not-found\")}]=${json}`);\n      }\n    }\n    pluginState.ASYNC_CLIENT_MODULES = [];\n  }\n}","map":{"version":3,"names":["ClientReferenceManifestPlugin","pluginState","_buildcontext","getProxiedPluginState","serverModuleIds","edgeServerModuleIds","ASYNC_CLIENT_MODULES","getAppPathRequiredChunks","chunkGroup","chunks","map","requiredChunk","_constants","SYSTEM_ENTRYPOINTS","has","name","files","file","endsWith","id","flat","filter","_nonnullable","nonNullable","entryNameToGroupName","entryName","groupName","slice","lastIndexOf","replace","test","mergeManifest","manifest","manifestToMerge","Object","assign","clientModules","ssrModuleMapping","edgeSSRModuleMapping","entryCSSFiles","PLUGIN_NAME","constructor","options","dev","appDir","appDirBase","_path","default","dirname","sep","Set","apply","compiler","hooks","compilation","tap","normalModuleFactory","dependencyFactories","set","_webpack","webpack","dependencies","ModuleDependency","dependencyTemplates","NullDependency","Template","processAssets","stage","Compilation","PROCESS_ASSETS_STAGE_OPTIMIZE_HASH","assets","createAsset","context","manifestsPerGroup","Map","manifestEntryFiles","chunkGroups","forEach","chunkEntryName","getFiles","f","startsWith","requiredChunks","recordModule","mod","_mod_resourceResolveData","layer","_constants1","WEBPACK_LAYERS","appPagesBrowser","resource","type","_identifier","moduleReferences","moduleIdMapping","edgeModuleIdMapping","ssrNamedModuleId","relative","resourceResolveData","path","isAsyncModule","esmResource","addClientReference","exportName","async","edgeExportName","addSSRIdMapping","chunk","entryMods","chunkGraph","getChunkEntryModulesIterable","request","includes","connections","moduleGraph","getOutgoingConnections","connection","dependency","clientEntryMod","getResolvedModule","modId","getModuleId","_connection_module","module","concatenatedMod","concatenatedModId","push","get","pageName","mergedManifest","segments","split","group","segment","json","JSON","stringify","pagePath","pageBundlePath","_normalizepagepath","normalizePagePath","length","CLIENT_REFERENCE_MANIFEST","sources","RawSource"],"sources":["../../../../src/build/webpack/plugins/flight-manifest-plugin.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}