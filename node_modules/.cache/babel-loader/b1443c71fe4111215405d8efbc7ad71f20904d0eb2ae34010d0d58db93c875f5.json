{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"preloadComponent\", {\n  enumerable: true,\n  get: function () {\n    return preloadComponent;\n  }\n});\nfunction preloadComponent(Component, props) {\n  const prev = console.error;\n  // Hide invalid hook call warning when calling component\n  console.error = function (msg) {\n    if (msg.startsWith(\"Warning: Invalid hook call.\")) {\n      // ignore\n    } else {\n      // @ts-expect-error argument is defined\n      prev.apply(console, arguments);\n    }\n  };\n  try {\n    let result = Component(props);\n    if (result && typeof result.then === \"function\") {\n      // Catch promise rejections to prevent unhandledRejection errors\n      result.then(() => {}, () => {});\n    }\n    return function () {\n      // We know what this component will render already.\n      return result;\n    };\n  } catch (x) {\n    // something suspended or errored, try again later\n  } finally {\n    console.error = prev;\n  }\n  return Component;\n}","map":{"version":3,"names":["preloadComponent","Component","props","prev","console","error","msg","startsWith","apply","arguments","result","then","x"],"sources":["../../../src/server/app-render/preload-component.ts"],"sourcesContent":[null],"mappings":";;;;;+BAAgB;;;WAAAA,gBAAA;;;AAAT,SAASA,iBAAiBC,SAAc,EAAEC,KAAU;EACzD,MAAMC,IAAA,GAAOC,OAAA,CAAQC,KAAK;EAC1B;EACAD,OAAA,CAAQC,KAAK,GAAG,UAAUC,GAAG;IAC3B,IAAIA,GAAA,CAAIC,UAAU,CAAC,gCAAgC;MACjD;IAAA,CACF,MAAO;MACL;MACAJ,IAAA,CAAKK,KAAK,CAACJ,OAAA,EAASK,SAAA;IACtB;EACF;EACA,IAAI;IACF,IAAIC,MAAA,GAAST,SAAA,CAAUC,KAAA;IACvB,IAAIQ,MAAA,IAAU,OAAOA,MAAA,CAAOC,IAAI,KAAK,YAAY;MAC/C;MACAD,MAAA,CAAOC,IAAI,CACT,OAAO,GACP,OAAO;IAEX;IACA,OAAO;MACL;MACA,OAAOD,MAAA;IACT;EACF,EAAE,OAAOE,CAAA,EAAG;IACV;EAAA,CACF,SAAU;IACRR,OAAA,CAAQC,KAAK,GAAGF,IAAA;EAClB;EACA,OAAOF,SAAA;AACT"},"metadata":{},"sourceType":"script","externalDependencies":[]}