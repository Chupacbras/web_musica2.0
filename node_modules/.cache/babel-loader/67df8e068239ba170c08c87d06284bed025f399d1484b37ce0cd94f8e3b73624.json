{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  edgeServerPages: null,\n  nodeServerPages: null,\n  edgeServerAppPaths: null,\n  nodeServerAppPaths: null,\n  default: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  edgeServerPages: function () {\n    return edgeServerPages;\n  },\n  nodeServerPages: function () {\n    return nodeServerPages;\n  },\n  edgeServerAppPaths: function () {\n    return edgeServerAppPaths;\n  },\n  nodeServerAppPaths: function () {\n    return nodeServerAppPaths;\n  },\n  // This plugin creates a pages-manifest.json from page entrypoints.\n  // This is used for mapping paths like `/` to `.next/server/static/<buildid>/pages/index.js` when doing SSR\n  // It's also used by next export to provide defaultPathMap\n  default: function () {\n    return PagesManifestPlugin;\n  }\n});\nconst _webpack = require(\"next/dist/compiled/webpack/webpack\");\nconst _constants = require(\"../../../shared/lib/constants\");\nconst _getroutefromentrypoint = /*#__PURE__*/_interop_require_default(require(\"../../../server/get-route-from-entrypoint\"));\nconst _normalizepathsep = require(\"../../../shared/lib/page-path/normalize-path-sep\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nlet edgeServerPages = {};\nlet nodeServerPages = {};\nlet edgeServerAppPaths = {};\nlet nodeServerAppPaths = {};\nclass PagesManifestPlugin {\n  constructor({\n    dev,\n    isEdgeRuntime,\n    appDirEnabled\n  }) {\n    this.dev = dev;\n    this.isEdgeRuntime = isEdgeRuntime;\n    this.appDirEnabled = appDirEnabled;\n  }\n  createAssets(compilation, assets) {\n    const entrypoints = compilation.entrypoints;\n    const pages = {};\n    const appPaths = {};\n    for (const entrypoint of entrypoints.values()) {\n      const pagePath = (0, _getroutefromentrypoint.default)(entrypoint.name, this.appDirEnabled);\n      if (!pagePath) {\n        continue;\n      }\n      const files = entrypoint.getFiles().filter(file => !file.includes(\"webpack-runtime\") && !file.includes(\"webpack-api-runtime\") && file.endsWith(\".js\"));\n      // Skip entries which are empty\n      if (!files.length) {\n        continue;\n      }\n      // Write filename, replace any backslashes in path (on windows) with forwardslashes for cross-platform consistency.\n      let file = files[files.length - 1];\n      if (!this.dev) {\n        if (!this.isEdgeRuntime) {\n          file = file.slice(3);\n        }\n      }\n      file = (0, _normalizepathsep.normalizePathSep)(file);\n      if (entrypoint.name.startsWith(\"app/\")) {\n        appPaths[pagePath] = file;\n      } else {\n        pages[pagePath] = file;\n      }\n    }\n    // This plugin is used by both the Node server and Edge server compilers,\n    // we need to merge both pages to generate the full manifest.\n    if (this.isEdgeRuntime) {\n      edgeServerPages = pages;\n      edgeServerAppPaths = appPaths;\n    } else {\n      nodeServerPages = pages;\n      nodeServerAppPaths = appPaths;\n    }\n    assets[`${!this.dev && !this.isEdgeRuntime ? \"../\" : \"\"}` + _constants.PAGES_MANIFEST] = new _webpack.sources.RawSource(JSON.stringify({\n      ...edgeServerPages,\n      ...nodeServerPages\n    }, null, 2));\n    if (this.appDirEnabled) {\n      assets[`${!this.dev && !this.isEdgeRuntime ? \"../\" : \"\"}` + _constants.APP_PATHS_MANIFEST] = new _webpack.sources.RawSource(JSON.stringify({\n        ...edgeServerAppPaths,\n        ...nodeServerAppPaths\n      }, null, 2));\n    }\n  }\n  apply(compiler) {\n    compiler.hooks.make.tap(\"NextJsPagesManifest\", compilation => {\n      compilation.hooks.processAssets.tap({\n        name: \"NextJsPagesManifest\",\n        stage: _webpack.webpack.Compilation.PROCESS_ASSETS_STAGE_ADDITIONS\n      }, assets => {\n        this.createAssets(compilation, assets);\n      });\n    });\n  }\n}","map":{"version":3,"names":["edgeServerPages","nodeServerPages","edgeServerAppPaths","nodeServerAppPaths","default","PagesManifestPlugin","constructor","dev","isEdgeRuntime","appDirEnabled","createAssets","compilation","assets","entrypoints","pages","appPaths","entrypoint","values","pagePath","_getroutefromentrypoint","name","files","getFiles","filter","file","includes","endsWith","length","slice","_normalizepathsep","normalizePathSep","startsWith","_constants","PAGES_MANIFEST","_webpack","sources","RawSource","JSON","stringify","APP_PATHS_MANIFEST","apply","compiler","hooks","make","tap","processAssets","stage","webpack","Compilation","PROCESS_ASSETS_STAGE_ADDITIONS"],"sources":["../../../../src/build/webpack/plugins/pages-manifest-plugin.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}