{"ast":null,"code":"'use strict';\n\n/**\n * WARNING:\n *  This file makes references to objects that aren't safe in all environments.\n *  Please see lib/utils.isStandardBrowserEnv before including this file.\n */\nvar utils = require('./../utils');\nvar msie = /(msie|trident)/i.test(navigator.userAgent);\nvar urlParsingNode = document.createElement('a');\nvar originUrl;\n\n/**\n * Parse a URL to discover it's components\n *\n * @param {String} url The URL to be parsed\n * @returns {Object}\n */\nfunction urlResolve(url) {\n  var href = url;\n  if (msie) {\n    // IE needs attribute set twice to normalize properties\n    urlParsingNode.setAttribute('href', href);\n    href = urlParsingNode.href;\n  }\n  urlParsingNode.setAttribute('href', href);\n\n  // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n  return {\n    href: urlParsingNode.href,\n    protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n    host: urlParsingNode.host,\n    search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n    hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n    hostname: urlParsingNode.hostname,\n    port: urlParsingNode.port,\n    pathname: urlParsingNode.pathname.charAt(0) === '/' ? urlParsingNode.pathname : '/' + urlParsingNode.pathname\n  };\n}\noriginUrl = urlResolve(window.location.href);\n\n/**\n * Determine if a URL shares the same origin as the current location\n *\n * @param {String} requestUrl The URL to test\n * @returns {boolean} True if URL shares the same origin, otherwise false\n */\nmodule.exports = function urlIsSameOrigin(requestUrl) {\n  var parsed = utils.isString(requestUrl) ? urlResolve(requestUrl) : requestUrl;\n  return parsed.protocol === originUrl.protocol && parsed.host === originUrl.host;\n};","map":{"version":3,"names":["utils","require","msie","test","navigator","userAgent","urlParsingNode","document","createElement","originUrl","urlResolve","url","href","setAttribute","protocol","replace","host","search","hash","hostname","port","pathname","charAt","window","location","module","exports","urlIsSameOrigin","requestUrl","parsed","isString"],"sources":["C:/Users/Merche/Documents/GitHub/web_musica/node_modules/axios/lib/helpers/urlIsSameOrigin.js"],"sourcesContent":["'use strict';\n\n/**\n * WARNING:\n *  This file makes references to objects that aren't safe in all environments.\n *  Please see lib/utils.isStandardBrowserEnv before including this file.\n */\n\nvar utils = require('./../utils');\nvar msie = /(msie|trident)/i.test(navigator.userAgent);\nvar urlParsingNode = document.createElement('a');\nvar originUrl;\n\n/**\n * Parse a URL to discover it's components\n *\n * @param {String} url The URL to be parsed\n * @returns {Object}\n */\nfunction urlResolve(url) {\n  var href = url;\n\n  if (msie) {\n    // IE needs attribute set twice to normalize properties\n    urlParsingNode.setAttribute('href', href);\n    href = urlParsingNode.href;\n  }\n\n  urlParsingNode.setAttribute('href', href);\n\n  // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n  return {\n    href: urlParsingNode.href,\n    protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n    host: urlParsingNode.host,\n    search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n    hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n    hostname: urlParsingNode.hostname,\n    port: urlParsingNode.port,\n    pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n              urlParsingNode.pathname :\n              '/' + urlParsingNode.pathname\n  };\n}\n\noriginUrl = urlResolve(window.location.href);\n\n/**\n * Determine if a URL shares the same origin as the current location\n *\n * @param {String} requestUrl The URL to test\n * @returns {boolean} True if URL shares the same origin, otherwise false\n */\nmodule.exports = function urlIsSameOrigin(requestUrl) {\n  var parsed = (utils.isString(requestUrl)) ? urlResolve(requestUrl) : requestUrl;\n  return (parsed.protocol === originUrl.protocol &&\n        parsed.host === originUrl.host);\n};\n"],"mappings":"AAAA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAY,CAAC;AACjC,IAAIC,IAAI,GAAG,iBAAiB,CAACC,IAAI,CAACC,SAAS,CAACC,SAAS,CAAC;AACtD,IAAIC,cAAc,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;AAChD,IAAIC,SAAS;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,GAAG,EAAE;EACvB,IAAIC,IAAI,GAAGD,GAAG;EAEd,IAAIT,IAAI,EAAE;IACR;IACAI,cAAc,CAACO,YAAY,CAAC,MAAM,EAAED,IAAI,CAAC;IACzCA,IAAI,GAAGN,cAAc,CAACM,IAAI;EAC5B;EAEAN,cAAc,CAACO,YAAY,CAAC,MAAM,EAAED,IAAI,CAAC;;EAEzC;EACA,OAAO;IACLA,IAAI,EAAEN,cAAc,CAACM,IAAI;IACzBE,QAAQ,EAAER,cAAc,CAACQ,QAAQ,GAAGR,cAAc,CAACQ,QAAQ,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,EAAE;IAClFC,IAAI,EAAEV,cAAc,CAACU,IAAI;IACzBC,MAAM,EAAEX,cAAc,CAACW,MAAM,GAAGX,cAAc,CAACW,MAAM,CAACF,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,GAAG,EAAE;IAC7EG,IAAI,EAAEZ,cAAc,CAACY,IAAI,GAAGZ,cAAc,CAACY,IAAI,CAACH,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,EAAE;IACtEI,QAAQ,EAAEb,cAAc,CAACa,QAAQ;IACjCC,IAAI,EAAEd,cAAc,CAACc,IAAI;IACzBC,QAAQ,EAAGf,cAAc,CAACe,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG,GAC1ChB,cAAc,CAACe,QAAQ,GACvB,GAAG,GAAGf,cAAc,CAACe;EACjC,CAAC;AACH;AAEAZ,SAAS,GAAGC,UAAU,CAACa,MAAM,CAACC,QAAQ,CAACZ,IAAI,CAAC;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACAa,MAAM,CAACC,OAAO,GAAG,SAASC,eAAeA,CAACC,UAAU,EAAE;EACpD,IAAIC,MAAM,GAAI7B,KAAK,CAAC8B,QAAQ,CAACF,UAAU,CAAC,GAAIlB,UAAU,CAACkB,UAAU,CAAC,GAAGA,UAAU;EAC/E,OAAQC,MAAM,CAACf,QAAQ,KAAKL,SAAS,CAACK,QAAQ,IACxCe,MAAM,CAACb,IAAI,KAAKP,SAAS,CAACO,IAAI;AACtC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}