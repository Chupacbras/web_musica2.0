{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  tryGetPreviewData: null,\n  parseBody: null,\n  apiResolver: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  tryGetPreviewData: function () {\n    return tryGetPreviewData;\n  },\n  parseBody: function () {\n    return parseBody;\n  },\n  apiResolver: function () {\n    return apiResolver;\n  }\n});\nconst _ = require(\".\");\nconst _bytes = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/bytes\"));\nconst _etag = require(\"../lib/etag\");\nconst _sendpayload = require(\"../send-payload\");\nconst _stream = require(\"stream\");\nconst _contenttype = require(\"next/dist/compiled/content-type\");\nconst _iserror = /*#__PURE__*/_interop_require_default(require(\"../../lib/is-error\"));\nconst _utils = require(\"../../shared/lib/utils\");\nconst _interopdefault = require(\"../../lib/interop-default\");\nconst _index = require(\"./index\");\nconst _getcookieparser = require(\"./get-cookie-parser\");\nconst _tracer = require(\"../lib/trace/tracer\");\nconst _constants = require(\"../lib/trace/constants\");\nconst _cookies = require(\"../web/spec-extension/cookies\");\nconst _headers = require(\"../web/spec-extension/adapters/headers\");\nconst _constants1 = require(\"../../lib/constants\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction tryGetPreviewData(req, res, options) {\n  var _cookies_get, _cookies_get1;\n  // if an On-Demand revalidation is being done preview mode\n  // is disabled\n  if (options && (0, _.checkIsOnDemandRevalidate)(req, options).isOnDemandRevalidate) {\n    return false;\n  }\n  // Read cached preview data if present\n  // TODO: use request metadata instead of a symbol\n  if (_index.SYMBOL_PREVIEW_DATA in req) {\n    return req[_index.SYMBOL_PREVIEW_DATA];\n  }\n  const headers = _headers.HeadersAdapter.from(req.headers);\n  const cookies = new _cookies.RequestCookies(headers);\n  const previewModeId = (_cookies_get = cookies.get(_index.COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n  const tokenPreviewData = (_cookies_get1 = cookies.get(_index.COOKIE_NAME_PRERENDER_DATA)) == null ? void 0 : _cookies_get1.value;\n  // Case: preview mode cookie set but data cookie is not set\n  if (previewModeId && !tokenPreviewData && previewModeId === options.previewModeId) {\n    // This is \"Draft Mode\" which doesn't use\n    // previewData, so we return an empty object\n    // for backwards compat with \"Preview Mode\".\n    const data = {};\n    Object.defineProperty(req, _index.SYMBOL_PREVIEW_DATA, {\n      value: data,\n      enumerable: false\n    });\n    return data;\n  }\n  // Case: neither cookie is set.\n  if (!previewModeId && !tokenPreviewData) {\n    return false;\n  }\n  // Case: one cookie is set, but not the other.\n  if (!previewModeId || !tokenPreviewData) {\n    (0, _index.clearPreviewData)(res);\n    return false;\n  }\n  // Case: preview session is for an old build.\n  if (previewModeId !== options.previewModeId) {\n    (0, _index.clearPreviewData)(res);\n    return false;\n  }\n  let encryptedPreviewData;\n  try {\n    const jsonwebtoken = require(\"next/dist/compiled/jsonwebtoken\");\n    encryptedPreviewData = jsonwebtoken.verify(tokenPreviewData, options.previewModeSigningKey);\n  } catch {\n    // TODO: warn\n    (0, _index.clearPreviewData)(res);\n    return false;\n  }\n  const {\n    decryptWithSecret\n  } = require(\"../crypto-utils\");\n  const decryptedPreviewData = decryptWithSecret(Buffer.from(options.previewModeEncryptionKey), encryptedPreviewData.data);\n  try {\n    // TODO: strict runtime type checking\n    const data = JSON.parse(decryptedPreviewData);\n    // Cache lookup\n    Object.defineProperty(req, _index.SYMBOL_PREVIEW_DATA, {\n      value: data,\n      enumerable: false\n    });\n    return data;\n  } catch {\n    return false;\n  }\n}\n/**\n * Parse `JSON` and handles invalid `JSON` strings\n * @param str `JSON` string\n */\nfunction parseJson(str) {\n  if (str.length === 0) {\n    // special-case empty json body, as it's a common client-side mistake\n    return {};\n  }\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    throw new _index.ApiError(400, \"Invalid JSON\");\n  }\n}\nasync function parseBody(req, limit) {\n  let contentType;\n  try {\n    contentType = (0, _contenttype.parse)(req.headers[\"content-type\"] || \"text/plain\");\n  } catch {\n    contentType = (0, _contenttype.parse)(\"text/plain\");\n  }\n  const {\n    type,\n    parameters\n  } = contentType;\n  const encoding = parameters.charset || \"utf-8\";\n  let buffer;\n  try {\n    const getRawBody = require(\"next/dist/compiled/raw-body\");\n    buffer = await getRawBody(req, {\n      encoding,\n      limit\n    });\n  } catch (e) {\n    if ((0, _iserror.default)(e) && e.type === \"entity.too.large\") {\n      throw new _index.ApiError(413, `Body exceeded ${limit} limit`);\n    } else {\n      throw new _index.ApiError(400, \"Invalid body\");\n    }\n  }\n  const body = buffer.toString();\n  if (type === \"application/json\" || type === \"application/ld+json\") {\n    return parseJson(body);\n  } else if (type === \"application/x-www-form-urlencoded\") {\n    const qs = require(\"querystring\");\n    return qs.decode(body);\n  } else {\n    return body;\n  }\n}\nfunction getMaxContentLength(responseLimit) {\n  if (responseLimit && typeof responseLimit !== \"boolean\") {\n    return _bytes.default.parse(responseLimit);\n  }\n  return _index.RESPONSE_LIMIT_DEFAULT;\n}\n/**\n * Send `any` body to response\n * @param req request object\n * @param res response object\n * @param body of response\n */\nfunction sendData(req, res, body) {\n  if (body === null || body === undefined) {\n    res.end();\n    return;\n  }\n  // strip irrelevant headers/body\n  if (res.statusCode === 204 || res.statusCode === 304) {\n    res.removeHeader(\"Content-Type\");\n    res.removeHeader(\"Content-Length\");\n    res.removeHeader(\"Transfer-Encoding\");\n    if (process.env.NODE_ENV === \"development\" && body) {\n      console.warn(`A body was attempted to be set with a 204 statusCode for ${req.url}, this is invalid and the body was ignored.\\n` + `See more info here https://nextjs.org/docs/messages/invalid-api-status-body`);\n    }\n    res.end();\n    return;\n  }\n  const contentType = res.getHeader(\"Content-Type\");\n  if (body instanceof _stream.Stream) {\n    if (!contentType) {\n      res.setHeader(\"Content-Type\", \"application/octet-stream\");\n    }\n    body.pipe(res);\n    return;\n  }\n  const isJSONLike = [\"object\", \"number\", \"boolean\"].includes(typeof body);\n  const stringifiedBody = isJSONLike ? JSON.stringify(body) : body;\n  const etag = (0, _etag.generateETag)(stringifiedBody);\n  if ((0, _sendpayload.sendEtagResponse)(req, res, etag)) {\n    return;\n  }\n  if (Buffer.isBuffer(body)) {\n    if (!contentType) {\n      res.setHeader(\"Content-Type\", \"application/octet-stream\");\n    }\n    res.setHeader(\"Content-Length\", body.length);\n    res.end(body);\n    return;\n  }\n  if (isJSONLike) {\n    res.setHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n  res.setHeader(\"Content-Length\", Buffer.byteLength(stringifiedBody));\n  res.end(stringifiedBody);\n}\n/**\n * Send `JSON` object\n * @param res response object\n * @param jsonBody of data\n */\nfunction sendJson(res, jsonBody) {\n  // Set header to application/json\n  res.setHeader(\"Content-Type\", \"application/json; charset=utf-8\");\n  // Use send to handle request\n  res.send(JSON.stringify(jsonBody));\n}\nfunction isValidData(str) {\n  return typeof str === \"string\" && str.length >= 16;\n}\nfunction setDraftMode(res, options) {\n  if (!isValidData(options.previewModeId)) {\n    throw new Error(\"invariant: invalid previewModeId\");\n  }\n  const expires = options.enable ? undefined : new Date(0);\n  // To delete a cookie, set `expires` to a date in the past:\n  // https://tools.ietf.org/html/rfc6265#section-4.1.1\n  // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n  const {\n    serialize\n  } = require(\"next/dist/compiled/cookie\");\n  const previous = res.getHeader(\"Set-Cookie\");\n  res.setHeader(`Set-Cookie`, [...(typeof previous === \"string\" ? [previous] : Array.isArray(previous) ? previous : []), serialize(_index.COOKIE_NAME_PRERENDER_BYPASS, options.previewModeId, {\n    httpOnly: true,\n    sameSite: process.env.NODE_ENV !== \"development\" ? \"none\" : \"lax\",\n    secure: process.env.NODE_ENV !== \"development\",\n    path: \"/\",\n    expires\n  })]);\n  return res;\n}\nfunction setPreviewData(res, data, options) {\n  if (!isValidData(options.previewModeId)) {\n    throw new Error(\"invariant: invalid previewModeId\");\n  }\n  if (!isValidData(options.previewModeEncryptionKey)) {\n    throw new Error(\"invariant: invalid previewModeEncryptionKey\");\n  }\n  if (!isValidData(options.previewModeSigningKey)) {\n    throw new Error(\"invariant: invalid previewModeSigningKey\");\n  }\n  const jsonwebtoken = require(\"next/dist/compiled/jsonwebtoken\");\n  const {\n    encryptWithSecret\n  } = require(\"../crypto-utils\");\n  const payload = jsonwebtoken.sign({\n    data: encryptWithSecret(Buffer.from(options.previewModeEncryptionKey), JSON.stringify(data))\n  }, options.previewModeSigningKey, {\n    algorithm: \"HS256\",\n    ...(options.maxAge !== undefined ? {\n      expiresIn: options.maxAge\n    } : undefined)\n  });\n  // limit preview mode cookie to 2KB since we shouldn't store too much\n  // data here and browsers drop cookies over 4KB\n  if (payload.length > 2048) {\n    throw new Error(`Preview data is limited to 2KB currently, reduce how much data you are storing as preview data to continue`);\n  }\n  const {\n    serialize\n  } = require(\"next/dist/compiled/cookie\");\n  const previous = res.getHeader(\"Set-Cookie\");\n  res.setHeader(`Set-Cookie`, [...(typeof previous === \"string\" ? [previous] : Array.isArray(previous) ? previous : []), serialize(_index.COOKIE_NAME_PRERENDER_BYPASS, options.previewModeId, {\n    httpOnly: true,\n    sameSite: process.env.NODE_ENV !== \"development\" ? \"none\" : \"lax\",\n    secure: process.env.NODE_ENV !== \"development\",\n    path: \"/\",\n    ...(options.maxAge !== undefined ? {\n      maxAge: options.maxAge\n    } : undefined),\n    ...(options.path !== undefined ? {\n      path: options.path\n    } : undefined)\n  }), serialize(_index.COOKIE_NAME_PRERENDER_DATA, payload, {\n    httpOnly: true,\n    sameSite: process.env.NODE_ENV !== \"development\" ? \"none\" : \"lax\",\n    secure: process.env.NODE_ENV !== \"development\",\n    path: \"/\",\n    ...(options.maxAge !== undefined ? {\n      maxAge: options.maxAge\n    } : undefined),\n    ...(options.path !== undefined ? {\n      path: options.path\n    } : undefined)\n  })]);\n  return res;\n}\nasync function revalidate(urlPath, opts, req, context) {\n  if (typeof urlPath !== \"string\" || !urlPath.startsWith(\"/\")) {\n    throw new Error(`Invalid urlPath provided to revalidate(), must be a path e.g. /blog/post-1, received ${urlPath}`);\n  }\n  const revalidateHeaders = {\n    [_constants1.PRERENDER_REVALIDATE_HEADER]: context.previewModeId,\n    ...(opts.unstable_onlyGenerated ? {\n      [_constants1.PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER]: \"1\"\n    } : {})\n  };\n  const allowedRevalidateHeaderKeys = [...(context.allowedRevalidateHeaderKeys || []), ...(context.trustHostHeader ? [\"cookie\", \"x-vercel-protection-bypass\"] : [])];\n  for (const key of Object.keys(req.headers)) {\n    if (allowedRevalidateHeaderKeys.includes(key)) {\n      revalidateHeaders[key] = req.headers[key];\n    }\n  }\n  try {\n    if (context.trustHostHeader) {\n      const res = await fetch(`https://${req.headers.host}${urlPath}`, {\n        method: \"HEAD\",\n        headers: revalidateHeaders\n      });\n      // we use the cache header to determine successful revalidate as\n      // a non-200 status code can be returned from a successful revalidate\n      // e.g. notFound: true returns 404 status code but is successful\n      const cacheHeader = res.headers.get(\"x-vercel-cache\") || res.headers.get(\"x-nextjs-cache\");\n      if ((cacheHeader == null ? void 0 : cacheHeader.toUpperCase()) !== \"REVALIDATED\" && !(res.status === 404 && opts.unstable_onlyGenerated)) {\n        throw new Error(`Invalid response ${res.status}`);\n      }\n    } else if (context.revalidate) {\n      await context.revalidate({\n        urlPath,\n        revalidateHeaders,\n        opts\n      });\n    } else {\n      throw new Error(`Invariant: required internal revalidate method not passed to api-utils`);\n    }\n  } catch (err) {\n    throw new Error(`Failed to revalidate ${urlPath}: ${(0, _iserror.default)(err) ? err.message : err}`);\n  }\n}\nasync function apiResolver(req, res, query, resolverModule, apiContext, propagateError, dev, page) {\n  const apiReq = req;\n  const apiRes = res;\n  try {\n    var _config_api, _config_api1, _config_api2, _getTracer_getRootSpanAttributes;\n    if (!resolverModule) {\n      res.statusCode = 404;\n      res.end(\"Not Found\");\n      return;\n    }\n    const config = resolverModule.config || {};\n    const bodyParser = ((_config_api = config.api) == null ? void 0 : _config_api.bodyParser) !== false;\n    const responseLimit = ((_config_api1 = config.api) == null ? void 0 : _config_api1.responseLimit) ?? true;\n    const externalResolver = ((_config_api2 = config.api) == null ? void 0 : _config_api2.externalResolver) || false;\n    // Parsing of cookies\n    (0, _index.setLazyProp)({\n      req: apiReq\n    }, \"cookies\", (0, _getcookieparser.getCookieParser)(req.headers));\n    // Parsing query string\n    apiReq.query = query;\n    // Parsing preview data\n    (0, _index.setLazyProp)({\n      req: apiReq\n    }, \"previewData\", () => tryGetPreviewData(req, res, apiContext));\n    // Checking if preview mode is enabled\n    (0, _index.setLazyProp)({\n      req: apiReq\n    }, \"preview\", () => apiReq.previewData !== false ? true : undefined);\n    // Set draftMode to the same value as preview\n    (0, _index.setLazyProp)({\n      req: apiReq\n    }, \"draftMode\", () => apiReq.preview);\n    // Parsing of body\n    if (bodyParser && !apiReq.body) {\n      apiReq.body = await parseBody(apiReq, config.api && config.api.bodyParser && config.api.bodyParser.sizeLimit ? config.api.bodyParser.sizeLimit : \"1mb\");\n    }\n    let contentLength = 0;\n    const maxContentLength = getMaxContentLength(responseLimit);\n    const writeData = apiRes.write;\n    const endResponse = apiRes.end;\n    apiRes.write = (...args) => {\n      contentLength += Buffer.byteLength(args[0] || \"\");\n      return writeData.apply(apiRes, args);\n    };\n    apiRes.end = (...args) => {\n      if (args.length && typeof args[0] !== \"function\") {\n        contentLength += Buffer.byteLength(args[0] || \"\");\n      }\n      if (responseLimit && contentLength >= maxContentLength) {\n        console.warn(`API response for ${req.url} exceeds ${_bytes.default.format(maxContentLength)}. API Routes are meant to respond quickly. https://nextjs.org/docs/messages/api-routes-response-size-limit`);\n      }\n      return endResponse.apply(apiRes, args);\n    };\n    apiRes.status = statusCode => (0, _index.sendStatusCode)(apiRes, statusCode);\n    apiRes.send = data => sendData(apiReq, apiRes, data);\n    apiRes.json = data => sendJson(apiRes, data);\n    apiRes.redirect = (statusOrUrl, url) => (0, _index.redirect)(apiRes, statusOrUrl, url);\n    apiRes.setDraftMode = (options = {\n      enable: true\n    }) => setDraftMode(apiRes, Object.assign({}, apiContext, options));\n    apiRes.setPreviewData = (data, options = {}) => setPreviewData(apiRes, data, Object.assign({}, apiContext, options));\n    apiRes.clearPreviewData = (options = {}) => (0, _index.clearPreviewData)(apiRes, options);\n    apiRes.revalidate = (urlPath, opts) => revalidate(urlPath, opts || {}, req, apiContext);\n    const resolver = (0, _interopdefault.interopDefault)(resolverModule);\n    let wasPiped = false;\n    if (process.env.NODE_ENV !== \"production\") {\n      // listen for pipe event and don't show resolve warning\n      res.once(\"pipe\", () => wasPiped = true);\n    }\n    (_getTracer_getRootSpanAttributes = (0, _tracer.getTracer)().getRootSpanAttributes()) == null ? void 0 : _getTracer_getRootSpanAttributes.set(\"next.route\", page);\n    // Call API route method\n    const apiRouteResult = await (0, _tracer.getTracer)().trace(_constants.NodeSpan.runHandler, {\n      spanName: `executing api route (pages) ${page}`\n    }, () => resolver(req, res));\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof apiRouteResult !== \"undefined\") {\n        if (apiRouteResult instanceof Response) {\n          throw new Error('API route returned a Response object in the Node.js runtime, this is not supported. Please use `runtime: \"edge\"` instead: https://nextjs.org/docs/api-routes/edge-api-routes');\n        }\n        console.warn(`API handler should not return a value, received ${typeof apiRouteResult}.`);\n      }\n      if (!externalResolver && !(0, _utils.isResSent)(res) && !wasPiped) {\n        console.warn(`API resolved without sending a response for ${req.url}, this may result in stalled requests.`);\n      }\n    }\n  } catch (err) {\n    if (err instanceof _index.ApiError) {\n      (0, _index.sendError)(apiRes, err.statusCode, err.message);\n    } else {\n      if (dev) {\n        if ((0, _iserror.default)(err)) {\n          err.page = page;\n        }\n        throw err;\n      }\n      console.error(err);\n      if (propagateError) {\n        throw err;\n      }\n      (0, _index.sendError)(apiRes, 500, \"Internal Server Error\");\n    }\n  }\n}","map":{"version":3,"names":["tryGetPreviewData","parseBody","apiResolver","req","res","options","_cookies_get","_cookies_get1","_","checkIsOnDemandRevalidate","isOnDemandRevalidate","_index","SYMBOL_PREVIEW_DATA","headers","_headers","HeadersAdapter","from","cookies","_cookies","RequestCookies","previewModeId","get","COOKIE_NAME_PRERENDER_BYPASS","value","tokenPreviewData","COOKIE_NAME_PRERENDER_DATA","data","Object","defineProperty","enumerable","clearPreviewData","encryptedPreviewData","jsonwebtoken","require","verify","previewModeSigningKey","decryptWithSecret","decryptedPreviewData","Buffer","previewModeEncryptionKey","JSON","parse","parseJson","str","length","e","ApiError","limit","contentType","_contenttype","type","parameters","encoding","charset","buffer","getRawBody","_iserror","default","body","toString","qs","decode","getMaxContentLength","responseLimit","_bytes","RESPONSE_LIMIT_DEFAULT","sendData","undefined","end","statusCode","removeHeader","process","env","NODE_ENV","console","warn","url","getHeader","_stream","Stream","setHeader","pipe","isJSONLike","includes","stringifiedBody","stringify","etag","_etag","generateETag","_sendpayload","sendEtagResponse","isBuffer","byteLength","sendJson","jsonBody","send","isValidData","setDraftMode","Error","expires","enable","Date","serialize","previous","Array","isArray","httpOnly","sameSite","secure","path","setPreviewData","encryptWithSecret","payload","sign","algorithm","maxAge","expiresIn","revalidate","urlPath","opts","context","startsWith","revalidateHeaders","_constants1","PRERENDER_REVALIDATE_HEADER","unstable_onlyGenerated","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","allowedRevalidateHeaderKeys","trustHostHeader","key","keys","fetch","host","method","cacheHeader","toUpperCase","status","err","message","query","resolverModule","apiContext","propagateError","dev","page","apiReq","apiRes","_config_api","_config_api1","_config_api2","_getTracer_getRootSpanAttributes","config","bodyParser","api","externalResolver","setLazyProp","_getcookieparser","getCookieParser","previewData","preview","sizeLimit","contentLength","maxContentLength","writeData","write","endResponse","args","apply","format","sendStatusCode","json","redirect","statusOrUrl","assign","resolver","_interopdefault","interopDefault","wasPiped","once","_tracer","getTracer","getRootSpanAttributes","set","apiRouteResult","trace","_constants","NodeSpan","runHandler","spanName","Response","_utils","isResSent","sendError","error"],"sources":["../../../src/server/api-utils/node.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}