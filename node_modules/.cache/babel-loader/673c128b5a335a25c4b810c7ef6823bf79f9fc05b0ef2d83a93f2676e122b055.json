{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"exportAppRoute\", {\n  enumerable: true,\n  get: function () {\n    return exportAppRoute;\n  }\n});\nconst _promises = /*#__PURE__*/_interop_require_default(require(\"fs/promises\"));\nconst _path = require(\"path\");\nconst _constants = require(\"../../lib/constants\");\nconst _node = require(\"../../server/base-http/node\");\nconst _routemoduleloader = require(\"../../server/future/helpers/module-loader/route-module-loader\");\nconst _nextrequest = require(\"../../server/web/spec-extension/adapters/next-request\");\nconst _utils = require(\"../../server/web/utils\");\nconst _isdynamicusageerror = require(\"../helpers/is-dynamic-usage-error\");\nconst _constants1 = require(\"../../shared/lib/constants\");\nconst _ciinfo = require(\"../../telemetry/ci-info\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nasync function exportAppRoute(req, res, params, page, incrementalCache, distDir, htmlFilepath) {\n  // Ensure that the URL is absolute.\n  req.url = `http://localhost:3000${req.url}`;\n  // Adapt the request and response to the Next.js request and response.\n  const request = _nextrequest.NextRequestAdapter.fromNodeNextRequest(new _node.NodeNextRequest(req), (0, _nextrequest.signalFromNodeResponse)(res));\n  // Create the context for the handler. This contains the params from\n  // the route and the context for the request.\n  const context = {\n    params,\n    prerenderManifest: {\n      version: 4,\n      routes: {},\n      dynamicRoutes: {},\n      preview: {\n        previewModeEncryptionKey: \"\",\n        previewModeId: \"\",\n        previewModeSigningKey: \"\"\n      },\n      notFoundRoutes: []\n    },\n    staticGenerationContext: {\n      originalPathname: page,\n      nextExport: true,\n      supportsDynamicHTML: false,\n      incrementalCache\n    }\n  };\n  if (_ciinfo.hasNextSupport) {\n    context.staticGenerationContext.isRevalidate = true;\n  }\n  // This is a route handler, which means it has it's handler in the\n  // bundled file already, we should just use that.\n  const filename = (0, _path.join)(distDir, _constants1.SERVER_DIRECTORY, \"app\", page);\n  try {\n    var _context_staticGenerationContext_store;\n    // Route module loading and handling.\n    const module = await _routemoduleloader.RouteModuleLoader.load(filename);\n    const response = await module.handle(request, context);\n    const isValidStatus = response.status < 400 || response.status === 404;\n    if (!isValidStatus) {\n      return {\n        fromBuildExportRevalidate: 0\n      };\n    }\n    const blob = await response.blob();\n    const revalidate = ((_context_staticGenerationContext_store = context.staticGenerationContext.store) == null ? void 0 : _context_staticGenerationContext_store.revalidate) || false;\n    const headers = (0, _utils.toNodeOutgoingHttpHeaders)(response.headers);\n    const cacheTags = context.staticGenerationContext.fetchTags;\n    if (cacheTags) {\n      headers[_constants.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n    }\n    if (!headers[\"content-type\"] && blob.type) {\n      headers[\"content-type\"] = blob.type;\n    }\n    // Writing response body to a file.\n    const body = Buffer.from(await blob.arrayBuffer());\n    await _promises.default.writeFile(htmlFilepath.replace(/\\.html$/, \".body\"), body, \"utf8\");\n    // Write the request metadata to a file.\n    const meta = {\n      status: response.status,\n      headers\n    };\n    await _promises.default.writeFile(htmlFilepath.replace(/\\.html$/, \".meta\"), JSON.stringify(meta));\n    return {\n      fromBuildExportRevalidate: revalidate,\n      fromBuildExportMeta: meta\n    };\n  } catch (err) {\n    if (!(0, _isdynamicusageerror.isDynamicUsageError)(err)) {\n      throw err;\n    }\n    return {\n      fromBuildExportRevalidate: 0\n    };\n  }\n}","map":{"version":3,"names":["exportAppRoute","req","res","params","page","incrementalCache","distDir","htmlFilepath","url","request","_nextrequest","NextRequestAdapter","fromNodeNextRequest","_node","NodeNextRequest","signalFromNodeResponse","context","prerenderManifest","version","routes","dynamicRoutes","preview","previewModeEncryptionKey","previewModeId","previewModeSigningKey","notFoundRoutes","staticGenerationContext","originalPathname","nextExport","supportsDynamicHTML","_ciinfo","hasNextSupport","isRevalidate","filename","_path","join","_constants1","SERVER_DIRECTORY","_context_staticGenerationContext_store","module","_routemoduleloader","RouteModuleLoader","load","response","handle","isValidStatus","status","fromBuildExportRevalidate","blob","revalidate","store","headers","_utils","toNodeOutgoingHttpHeaders","cacheTags","fetchTags","_constants","NEXT_CACHE_TAGS_HEADER","type","body","Buffer","from","arrayBuffer","_promises","default","writeFile","replace","meta","JSON","stringify","fromBuildExportMeta","err","_isdynamicusageerror","isDynamicUsageError"],"sources":["../../../src/export/routes/app-route.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}