{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"initialize\", {\n  enumerable: true,\n  get: function () {\n    return initialize;\n  }\n});\nrequire(\"../node-polyfill-fetch\");\nrequire(\"../node-environment\");\nrequire(\"../require-hook\");\nconst _url = /*#__PURE__*/_interop_require_default(require(\"url\"));\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nconst _config = /*#__PURE__*/_interop_require_default(require(\"../config\"));\nconst _servestatic = require(\"../serve-static\");\nconst _debug = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/debug\"));\nconst _storage = require(\"../../telemetry/storage\");\nconst _utils = require(\"../../shared/lib/utils\");\nconst _findpagesdir = require(\"../../lib/find-pages-dir\");\nconst _filesystem = require(\"./router-utils/filesystem\");\nconst _proxyrequest = require(\"./router-utils/proxy-request\");\nconst _pipereadable = require(\"../pipe-readable\");\nconst _mockrequest = require(\"./mock-request\");\nconst _resolveroutes = require(\"./router-utils/resolve-routes\");\nconst _requestmeta = require(\"../request-meta\");\nconst _pathhasprefix = require(\"../../shared/lib/router/utils/path-has-prefix\");\nconst _removepathprefix = require(\"../../shared/lib/router/utils/remove-path-prefix\");\nconst _compression = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/compression\"));\nconst _baseserver = require(\"../base-server\");\nconst _nextrequest = require(\"../web/spec-extension/adapters/next-request\");\nconst _constants = require(\"../../shared/lib/constants\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst debug = (0, _debug.default)(\"next:router-server:main\");\nconst devInstances = {};\nconst requestHandlers = {};\nasync function initialize(opts) {\n  var _renderWorkers_app;\n  process.title = \"next-router-worker\";\n  if (!process.env.NODE_ENV) {\n    // @ts-ignore not readonly\n    process.env.NODE_ENV = opts.dev ? \"development\" : \"production\";\n  }\n  const config = await (0, _config.default)(opts.dev ? _constants.PHASE_DEVELOPMENT_SERVER : _constants.PHASE_PRODUCTION_SERVER, opts.dir, {\n    silent: false\n  });\n  let compress;\n  if ((config == null ? void 0 : config.compress) !== false) {\n    compress = (0, _compression.default)();\n  }\n  const fsChecker = await (0, _filesystem.setupFsCheck)({\n    dev: opts.dev,\n    dir: opts.dir,\n    config,\n    minimalMode: opts.minimalMode\n  });\n  const renderWorkers = {};\n  let devInstance;\n  if (opts.dev) {\n    const telemetry = new _storage.Telemetry({\n      distDir: _path.default.join(opts.dir, config.distDir)\n    });\n    const {\n      pagesDir,\n      appDir\n    } = (0, _findpagesdir.findPagesDir)(opts.dir);\n    const {\n      setupDev\n    } = await require(\"./router-utils/setup-dev\");\n    devInstance = await setupDev({\n      // Passed here but the initialization of this object happens below, doing the initialization before the setupDev call breaks.\n      renderWorkers,\n      appDir,\n      pagesDir,\n      telemetry,\n      fsChecker,\n      dir: opts.dir,\n      nextConfig: config,\n      isCustomServer: opts.customServer,\n      turbo: !!process.env.TURBOPACK,\n      port: opts.port\n    });\n    devInstances[opts.dir] = devInstance;\n    global._nextDevHandlers = {\n      async ensurePage(dir, match) {\n        const curDevInstance = devInstances[dir];\n        // TODO: remove after ensure is pulled out of server\n        return await (curDevInstance == null ? void 0 : curDevInstance.hotReloader.ensurePage(match));\n      },\n      async logErrorWithOriginalStack(dir, ...args) {\n        const curDevInstance = devInstances[dir];\n        // @ts-ignore\n        return await (curDevInstance == null ? void 0 : curDevInstance.logErrorWithOriginalStack(...args));\n      },\n      async getFallbackErrorComponents(dir) {\n        const curDevInstance = devInstances[dir];\n        await curDevInstance.hotReloader.buildFallbackError();\n        // Build the error page to ensure the fallback is built too.\n        // TODO: See if this can be moved into hotReloader or removed.\n        await curDevInstance.hotReloader.ensurePage({\n          page: \"/_error\",\n          clientOnly: false\n        });\n      },\n      async getCompilationError(dir, page) {\n        var _curDevInstance_hotReloader;\n        const curDevInstance = devInstances[dir];\n        const errors = await (curDevInstance == null ? void 0 : (_curDevInstance_hotReloader = curDevInstance.hotReloader) == null ? void 0 : _curDevInstance_hotReloader.getCompilationErrors(page));\n        if (!errors) return;\n        // Return the very first error we found.\n        return errors[0];\n      },\n      async revalidate(dir, {\n        urlPath,\n        revalidateHeaders,\n        opts: revalidateOpts\n      }) {\n        const mocked = (0, _mockrequest.createRequestResponseMocks)({\n          url: urlPath,\n          headers: revalidateHeaders\n        });\n        const curRequestHandler = requestHandlers[dir];\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        await curRequestHandler(mocked.req, mocked.res);\n        await mocked.res.hasStreamed;\n        if (mocked.res.getHeader(\"x-nextjs-cache\") !== \"REVALIDATED\" && !(mocked.res.statusCode === 404 && revalidateOpts.unstable_onlyGenerated)) {\n          throw new Error(`Invalid response ${mocked.res.statusCode}`);\n        }\n        return {};\n      }\n    };\n  }\n  renderWorkers.app = require(\"./render-server\");\n  renderWorkers.pages = renderWorkers.app;\n  const renderWorkerOpts = {\n    port: opts.port,\n    dir: opts.dir,\n    workerType: \"render\",\n    hostname: opts.hostname,\n    minimalMode: opts.minimalMode,\n    dev: !!opts.dev,\n    server: opts.server,\n    isNodeDebugging: !!opts.isNodeDebugging,\n    serverFields: (devInstance == null ? void 0 : devInstance.serverFields) || {},\n    experimentalTestProxy: !!opts.experimentalTestProxy\n  };\n  // pre-initialize workers\n  const handlers = await ((_renderWorkers_app = renderWorkers.app) == null ? void 0 : _renderWorkers_app.initialize(renderWorkerOpts));\n  const initialized = {\n    app: handlers,\n    pages: handlers\n  };\n  const logError = async (type, err) => {\n    await (devInstance == null ? void 0 : devInstance.logErrorWithOriginalStack(err, type));\n  };\n  const cleanup = () => {\n    var _renderWorkers_pages__workerPool, _renderWorkers_pages;\n    debug(\"router-server process cleanup\");\n    for (const curWorker of [...(((_renderWorkers_pages = renderWorkers.pages) == null ? void 0 : (_renderWorkers_pages__workerPool = _renderWorkers_pages._workerPool) == null ? void 0 : _renderWorkers_pages__workerPool._workers) || [])]) {\n      var _curWorker__child;\n      (_curWorker__child = curWorker._child) == null ? void 0 : _curWorker__child.kill(\"SIGINT\");\n    }\n    if (!process.env.__NEXT_PRIVATE_CPU_PROFILE) {\n      process.exit(0);\n    }\n  };\n  process.on(\"exit\", cleanup);\n  process.on(\"SIGINT\", cleanup);\n  process.on(\"SIGTERM\", cleanup);\n  process.on(\"uncaughtException\", logError.bind(null, \"uncaughtException\"));\n  process.on(\"unhandledRejection\", logError.bind(null, \"unhandledRejection\"));\n  const resolveRoutes = (0, _resolveroutes.getResolveRoutes)(fsChecker, config, opts, renderWorkers, renderWorkerOpts, devInstance == null ? void 0 : devInstance.ensureMiddleware);\n  const requestHandlerImpl = async (req, res) => {\n    if (compress) {\n      // @ts-expect-error not express req/res\n      compress(req, res, () => {});\n    }\n    req.on(\"error\", _err => {\n      // TODO: log socket errors?\n    });\n    res.on(\"error\", _err => {\n      // TODO: log socket errors?\n    });\n    const invokedOutputs = new Set();\n    async function invokeRender(parsedUrl, type, invokePath, handleIndex, additionalInvokeHeaders = {}) {\n      var _fsChecker_getMiddlewareMatchers;\n      // invokeRender expects /api routes to not be locale prefixed\n      // so normalize here before continuing\n      if (config.i18n && (0, _removepathprefix.removePathPrefix)(invokePath, config.basePath).startsWith(`/${parsedUrl.query.__nextLocale}/api`)) {\n        invokePath = fsChecker.handleLocale((0, _removepathprefix.removePathPrefix)(invokePath, config.basePath)).pathname;\n      }\n      if (req.headers[\"x-nextjs-data\"] && ((_fsChecker_getMiddlewareMatchers = fsChecker.getMiddlewareMatchers()) == null ? void 0 : _fsChecker_getMiddlewareMatchers.length) && (0, _removepathprefix.removePathPrefix)(invokePath, config.basePath) === \"/404\") {\n        res.setHeader(\"x-nextjs-matched-path\", parsedUrl.pathname || \"\");\n        res.statusCode = 200;\n        res.setHeader(\"content-type\", \"application/json\");\n        res.end(\"{}\");\n        return null;\n      }\n      const workerResult = initialized[type];\n      if (!workerResult) {\n        throw new Error(`Failed to initialize render worker ${type}`);\n      }\n      const invokeHeaders = {\n        ...req.headers,\n        \"x-middleware-invoke\": \"\",\n        \"x-invoke-path\": invokePath,\n        \"x-invoke-query\": encodeURIComponent(JSON.stringify(parsedUrl.query)),\n        ...(additionalInvokeHeaders || {})\n      };\n      Object.assign(req.headers, invokeHeaders);\n      debug(\"invokeRender\", req.url, invokeHeaders);\n      try {\n        var _renderWorkers_pages;\n        const initResult = await ((_renderWorkers_pages = renderWorkers.pages) == null ? void 0 : _renderWorkers_pages.initialize(renderWorkerOpts));\n        try {\n          await (initResult == null ? void 0 : initResult.requestHandler(req, res));\n        } catch (err) {\n          if (err instanceof _baseserver.NoFallbackError) {\n            // eslint-disable-next-line\n            await handleRequest(handleIndex + 1);\n            return;\n          }\n          throw err;\n        }\n        return;\n      } catch (e) {\n        // If the client aborts before we can receive a response object (when\n        // the headers are flushed), then we can early exit without further\n        // processing.\n        if ((0, _pipereadable.isAbortError)(e)) {\n          return;\n        }\n        throw e;\n      }\n    }\n    const handleRequest = async handleIndex => {\n      if (handleIndex > 5) {\n        throw new Error(`Attempted to handle request too many times ${req.url}`);\n      }\n      // handle hot-reloader first\n      if (devInstance) {\n        const origUrl = req.url || \"/\";\n        if (config.basePath && (0, _pathhasprefix.pathHasPrefix)(origUrl, config.basePath)) {\n          req.url = (0, _removepathprefix.removePathPrefix)(origUrl, config.basePath);\n        }\n        const parsedUrl = _url.default.parse(req.url || \"/\");\n        const hotReloaderResult = await devInstance.hotReloader.run(req, res, parsedUrl);\n        if (hotReloaderResult.finished) {\n          return hotReloaderResult;\n        }\n        req.url = origUrl;\n      }\n      const {\n        finished,\n        parsedUrl,\n        statusCode,\n        resHeaders,\n        bodyStream,\n        matchedOutput\n      } = await resolveRoutes({\n        req,\n        res,\n        isUpgradeReq: false,\n        signal: (0, _nextrequest.signalFromNodeResponse)(res),\n        invokedOutputs\n      });\n      if (res.closed || res.finished) {\n        return;\n      }\n      if (devInstance && (matchedOutput == null ? void 0 : matchedOutput.type) === \"devVirtualFsItem\") {\n        const origUrl = req.url || \"/\";\n        if (config.basePath && (0, _pathhasprefix.pathHasPrefix)(origUrl, config.basePath)) {\n          req.url = (0, _removepathprefix.removePathPrefix)(origUrl, config.basePath);\n        }\n        if (resHeaders) {\n          for (const key of Object.keys(resHeaders)) {\n            res.setHeader(key, resHeaders[key]);\n          }\n        }\n        const result = await devInstance.requestHandler(req, res);\n        if (result.finished) {\n          return;\n        }\n        // TODO: throw invariant if we resolved to this but it wasn't handled?\n        req.url = origUrl;\n      }\n      debug(\"requestHandler!\", req.url, {\n        matchedOutput,\n        statusCode,\n        resHeaders,\n        bodyStream: !!bodyStream,\n        parsedUrl: {\n          pathname: parsedUrl.pathname,\n          query: parsedUrl.query\n        },\n        finished\n      });\n      // apply any response headers from routing\n      for (const key of Object.keys(resHeaders || {})) {\n        res.setHeader(key, resHeaders[key]);\n      }\n      // handle redirect\n      if (!bodyStream && statusCode && statusCode > 300 && statusCode < 400) {\n        const destination = _url.default.format(parsedUrl);\n        res.statusCode = statusCode;\n        res.setHeader(\"location\", destination);\n        if (statusCode === _constants.PERMANENT_REDIRECT_STATUS) {\n          res.setHeader(\"Refresh\", `0;url=${destination}`);\n        }\n        return res.end(destination);\n      }\n      // handle middleware body response\n      if (bodyStream) {\n        res.statusCode = statusCode || 200;\n        return await (0, _pipereadable.pipeReadable)(bodyStream, res);\n      }\n      if (finished && parsedUrl.protocol) {\n        var _getRequestMeta;\n        return await (0, _proxyrequest.proxyRequest)(req, res, parsedUrl, undefined, (_getRequestMeta = (0, _requestmeta.getRequestMeta)(req, \"__NEXT_CLONABLE_BODY\")) == null ? void 0 : _getRequestMeta.cloneBodyStream(), config.experimental.proxyTimeout);\n      }\n      if ((matchedOutput == null ? void 0 : matchedOutput.fsPath) && matchedOutput.itemPath) {\n        if (opts.dev && (fsChecker.appFiles.has(matchedOutput.itemPath) || fsChecker.pageFiles.has(matchedOutput.itemPath))) {\n          res.statusCode = 500;\n          await invokeRender(parsedUrl, \"pages\", \"/_error\", handleIndex, {\n            \"x-invoke-status\": \"500\",\n            \"x-invoke-error\": JSON.stringify({\n              message: `A conflicting public file and page file was found for path ${matchedOutput.itemPath} https://nextjs.org/docs/messages/conflicting-public-file-page`\n            })\n          });\n          return;\n        }\n        if (!res.getHeader(\"cache-control\") && matchedOutput.type === \"nextStaticFolder\") {\n          if (opts.dev) {\n            res.setHeader(\"Cache-Control\", \"no-store, must-revalidate\");\n          } else {\n            res.setHeader(\"Cache-Control\", \"public, max-age=31536000, immutable\");\n          }\n        }\n        if (!(req.method === \"GET\" || req.method === \"HEAD\")) {\n          res.setHeader(\"Allow\", [\"GET\", \"HEAD\"]);\n          res.statusCode = 405;\n          return await invokeRender(_url.default.parse(\"/405\", true), \"pages\", \"/405\", handleIndex, {\n            \"x-invoke-status\": \"405\"\n          });\n        }\n        try {\n          return await (0, _servestatic.serveStatic)(req, res, matchedOutput.itemPath, {\n            root: matchedOutput.itemsRoot,\n            // Ensures that etags are not generated for static files when disabled.\n            etag: config.generateEtags\n          });\n        } catch (err) {\n          /**\n          * Hardcoded every possible error status code that could be thrown by \"serveStatic\" method\n          * This is done by searching \"this.error\" inside \"send\" module's source code:\n          * https://github.com/pillarjs/send/blob/master/index.js\n          * https://github.com/pillarjs/send/blob/develop/index.js\n          */\n          const POSSIBLE_ERROR_CODE_FROM_SERVE_STATIC = new Set([\n          // send module will throw 500 when header is already sent or fs.stat error happens\n          // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L392\n          // Note: we will use Next.js built-in 500 page to handle 500 errors\n          // 500,\n          // send module will throw 404 when file is missing\n          // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L421\n          // Note: we will use Next.js built-in 404 page to handle 404 errors\n          // 404,\n          // send module will throw 403 when redirecting to a directory without enabling directory listing\n          // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L484\n          // Note: Next.js throws a different error (without status code) for directory listing\n          // 403,\n          // send module will throw 400 when fails to normalize the path\n          // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L520\n          400,\n          // send module will throw 412 with conditional GET request\n          // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L632\n          412,\n          // send module will throw 416 when range is not satisfiable\n          // https://github.com/pillarjs/send/blob/53f0ab476145670a9bdd3dc722ab2fdc8d358fc6/index.js#L669\n          416]);\n          let validErrorStatus = POSSIBLE_ERROR_CODE_FROM_SERVE_STATIC.has(err.statusCode);\n          // normalize non-allowed status codes\n          if (!validErrorStatus) {\n            err.statusCode = 400;\n          }\n          if (typeof err.statusCode === \"number\") {\n            const invokePath = `/${err.statusCode}`;\n            const invokeStatus = `${err.statusCode}`;\n            res.statusCode = err.statusCode;\n            return await invokeRender(_url.default.parse(invokePath, true), \"pages\", invokePath, handleIndex, {\n              \"x-invoke-status\": invokeStatus\n            });\n          }\n          throw err;\n        }\n      }\n      if (matchedOutput) {\n        invokedOutputs.add(matchedOutput.itemPath);\n        return await invokeRender(parsedUrl, matchedOutput.type === \"appFile\" ? \"app\" : \"pages\", parsedUrl.pathname || \"/\", handleIndex, {\n          \"x-invoke-output\": matchedOutput.itemPath\n        });\n      }\n      // 404 case\n      res.setHeader(\"Cache-Control\", \"no-cache, no-store, max-age=0, must-revalidate\");\n      // Short-circuit favicon.ico serving so that the 404 page doesn't get built as favicon is requested by the browser when loading any route.\n      if (opts.dev && !matchedOutput && parsedUrl.pathname === \"/favicon.ico\") {\n        res.statusCode = 404;\n        res.end(\"\");\n        return null;\n      }\n      const appNotFound = opts.dev ? devInstance == null ? void 0 : devInstance.serverFields.hasAppNotFound : await fsChecker.getItem(\"/_not-found\");\n      res.statusCode = 404;\n      if (appNotFound) {\n        return await invokeRender(parsedUrl, \"app\", opts.dev ? \"/not-found\" : \"/_not-found\", handleIndex, {\n          \"x-invoke-status\": \"404\"\n        });\n      }\n      await invokeRender(parsedUrl, \"pages\", \"/404\", handleIndex, {\n        \"x-invoke-status\": \"404\"\n      });\n    };\n    try {\n      await handleRequest(0);\n    } catch (err) {\n      try {\n        let invokePath = \"/500\";\n        let invokeStatus = \"500\";\n        if (err instanceof _utils.DecodeError) {\n          invokePath = \"/400\";\n          invokeStatus = \"400\";\n        } else {\n          console.error(err);\n        }\n        res.statusCode = Number(invokeStatus);\n        return await invokeRender(_url.default.parse(invokePath, true), \"pages\", invokePath, 0, {\n          \"x-invoke-status\": invokeStatus\n        });\n      } catch (err2) {\n        console.error(err2);\n      }\n      res.statusCode = 500;\n      res.end(\"Internal Server Error\");\n    }\n  };\n  let requestHandler = requestHandlerImpl;\n  if (opts.experimentalTestProxy) {\n    // Intercept fetch and other testmode apis.\n    const {\n      wrapRequestHandlerWorker,\n      interceptTestApis\n    } = require(\"../../experimental/testmode/server\");\n    requestHandler = wrapRequestHandlerWorker(requestHandler);\n    interceptTestApis();\n  }\n  requestHandlers[opts.dir] = requestHandler;\n  const upgradeHandler = async (req, socket, head) => {\n    try {\n      req.on(\"error\", _err => {\n        // TODO: log socket errors?\n        // console.error(_err);\n      });\n      socket.on(\"error\", _err => {\n        // TODO: log socket errors?\n        // console.error(_err);\n      });\n      if (opts.dev && devInstance) {\n        var _req_url;\n        if ((_req_url = req.url) == null ? void 0 : _req_url.includes(`/_next/webpack-hmr`)) {\n          return devInstance.hotReloader.onHMR(req, socket, head);\n        }\n      }\n      const {\n        matchedOutput,\n        parsedUrl\n      } = await resolveRoutes({\n        req,\n        res: socket,\n        isUpgradeReq: true,\n        signal: (0, _nextrequest.signalFromNodeResponse)(socket)\n      });\n      // TODO: allow upgrade requests to pages/app paths?\n      // this was not previously supported\n      if (matchedOutput) {\n        return socket.end();\n      }\n      if (parsedUrl.protocol) {\n        return await (0, _proxyrequest.proxyRequest)(req, socket, parsedUrl, head);\n      }\n      // no match close socket\n      socket.end();\n    } catch (err) {\n      console.error(\"Error handling upgrade request\", err);\n      socket.end();\n    }\n  };\n  return [requestHandler, upgradeHandler];\n}","map":{"version":3,"names":["initialize","debug","_debug","default","devInstances","requestHandlers","opts","_renderWorkers_app","process","title","env","NODE_ENV","dev","config","_config","_constants","PHASE_DEVELOPMENT_SERVER","PHASE_PRODUCTION_SERVER","dir","silent","compress","_compression","fsChecker","_filesystem","setupFsCheck","minimalMode","renderWorkers","devInstance","telemetry","_storage","Telemetry","distDir","_path","join","pagesDir","appDir","_findpagesdir","findPagesDir","setupDev","require","nextConfig","isCustomServer","customServer","turbo","TURBOPACK","port","global","_nextDevHandlers","ensurePage","match","curDevInstance","hotReloader","logErrorWithOriginalStack","args","getFallbackErrorComponents","buildFallbackError","page","clientOnly","getCompilationError","_curDevInstance_hotReloader","errors","getCompilationErrors","revalidate","urlPath","revalidateHeaders","revalidateOpts","mocked","_mockrequest","createRequestResponseMocks","url","headers","curRequestHandler","req","res","hasStreamed","getHeader","statusCode","unstable_onlyGenerated","Error","app","pages","renderWorkerOpts","workerType","hostname","server","isNodeDebugging","serverFields","experimentalTestProxy","handlers","initialized","logError","type","err","cleanup","_renderWorkers_pages__workerPool","_renderWorkers_pages","curWorker","_workerPool","_workers","_curWorker__child","_child","kill","__NEXT_PRIVATE_CPU_PROFILE","exit","on","bind","resolveRoutes","_resolveroutes","getResolveRoutes","ensureMiddleware","requestHandlerImpl","_err","invokedOutputs","Set","invokeRender","parsedUrl","invokePath","handleIndex","additionalInvokeHeaders","_fsChecker_getMiddlewareMatchers","i18n","_removepathprefix","removePathPrefix","basePath","startsWith","query","__nextLocale","handleLocale","pathname","getMiddlewareMatchers","length","setHeader","end","workerResult","invokeHeaders","encodeURIComponent","JSON","stringify","Object","assign","initResult","requestHandler","_baseserver","NoFallbackError","handleRequest","e","_pipereadable","isAbortError","origUrl","_pathhasprefix","pathHasPrefix","_url","parse","hotReloaderResult","run","finished","resHeaders","bodyStream","matchedOutput","isUpgradeReq","signal","_nextrequest","signalFromNodeResponse","closed","key","keys","result","destination","format","PERMANENT_REDIRECT_STATUS","pipeReadable","protocol","_getRequestMeta","_proxyrequest","proxyRequest","undefined","_requestmeta","getRequestMeta","cloneBodyStream","experimental","proxyTimeout","fsPath","itemPath","appFiles","has","pageFiles","message","method","_servestatic","serveStatic","root","itemsRoot","etag","generateEtags","POSSIBLE_ERROR_CODE_FROM_SERVE_STATIC","validErrorStatus","invokeStatus","add","appNotFound","hasAppNotFound","getItem","_utils","DecodeError","console","error","Number","err2","wrapRequestHandlerWorker","interceptTestApis","upgradeHandler","socket","head","_req_url","includes","onHMR"],"sources":["../../../src/server/lib/router-server.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}