{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return uploadTrace;\n  }\n});\nfunction uploadTrace({\n  traceUploadUrl,\n  mode,\n  isTurboSession,\n  projectDir,\n  distDir\n}) {\n  const {\n    NEXT_TRACE_UPLOAD_DEBUG\n  } = process.env;\n  // Note: cross-spawn is not used here as it causes\n  // a new command window to appear when we don't want it to\n  const child_process = require(\"child_process\");\n  // we use spawnSync when debugging to ensure logs are piped\n  // correctly to stdout/stderr\n  const spawn = NEXT_TRACE_UPLOAD_DEBUG ? child_process.spawnSync : child_process.spawn;\n  spawn(process.execPath, [require.resolve(\"./trace-uploader\"), traceUploadUrl, mode, String(isTurboSession), projectDir, distDir], {\n    detached: !NEXT_TRACE_UPLOAD_DEBUG,\n    windowsHide: true,\n    shell: false,\n    ...(NEXT_TRACE_UPLOAD_DEBUG ? {\n      stdio: \"inherit\"\n    } : {})\n  });\n}","map":{"version":3,"names":["uploadTrace","traceUploadUrl","mode","isTurboSession","projectDir","distDir","NEXT_TRACE_UPLOAD_DEBUG","process","env","child_process","require","spawn","spawnSync","execPath","resolve","String","detached","windowsHide","shell","stdio"],"sources":["../../src/trace/upload-trace.ts"],"sourcesContent":[null],"mappings":";;;;;+BAAA;;;WAAwBA,WAAA;;;AAAT,SAASA,YAAY;EAClCC,cAAc;EACdC,IAAI;EACJC,cAAc;EACdC,UAAU;EACVC;AAAO,CAOR;EACC,MAAM;IAAEC;EAAuB,CAAE,GAAGC,OAAA,CAAQC,GAAG;EAE/C;EACA;EACA,MAAMC,aAAA,GACJC,OAAA,CAAQ;EAEV;EACA;EACA,MAAMC,KAAA,GAAQL,uBAAA,GACVG,aAAA,CAAcG,SAAS,GACvBH,aAAA,CAAcE,KAAK;EAEvBA,KAAA,CACEJ,OAAA,CAAQM,QAAQ,EAChB,CACEH,OAAA,CAAQI,OAAO,CAAC,qBAChBb,cAAA,EACAC,IAAA,EACAa,MAAA,CAAOZ,cAAA,GACPC,UAAA,EACAC,OAAA,CACD,EACD;IACEW,QAAA,EAAU,CAACV,uBAAA;IACXW,WAAA,EAAa;IACbC,KAAA,EAAO;IACP,IAAIZ,uBAAA,GACA;MACEa,KAAA,EAAO;IACT,IACA,CAAC,CAAC;EACR;AAEJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}