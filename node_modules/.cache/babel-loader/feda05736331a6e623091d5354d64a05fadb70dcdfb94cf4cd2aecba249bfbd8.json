{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  ampFirstEntryNamesMap: null,\n  DropClientPage: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  ampFirstEntryNamesMap: function () {\n    return ampFirstEntryNamesMap;\n  },\n  DropClientPage: function () {\n    return DropClientPage;\n  }\n});\nconst _constants = require(\"../../../shared/lib/constants\");\nconst ampFirstEntryNamesMap = new WeakMap();\nconst PLUGIN_NAME = \"DropAmpFirstPagesPlugin\";\nclass DropClientPage {\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, (compilation, {\n      normalModuleFactory\n    }) => {\n      // Recursively look up the issuer till it ends up at the root\n      function findEntryModule(mod) {\n        const queue = new Set([mod]);\n        for (const module1 of queue) {\n          const incomingConnections = compilation.moduleGraph.getIncomingConnections(module1);\n          for (const incomingConnection of incomingConnections) {\n            if (!incomingConnection.originModule) return module1;\n            queue.add(incomingConnection.originModule);\n          }\n        }\n        return null;\n      }\n      function handler(parser) {\n        function markAsAmpFirst() {\n          const entryModule = findEntryModule(parser.state.module);\n          if (!entryModule) {\n            return;\n          }\n          // @ts-ignore buildInfo exists on Module\n          entryModule.buildInfo.NEXT_ampFirst = true;\n        }\n        parser.hooks.preDeclarator.tap(PLUGIN_NAME, declarator => {\n          var _declarator_id;\n          if ((declarator == null ? void 0 : (_declarator_id = declarator.id) == null ? void 0 : _declarator_id.name) === _constants.STRING_LITERAL_DROP_BUNDLE) {\n            markAsAmpFirst();\n          }\n        });\n      }\n      normalModuleFactory.hooks.parser.for(\"javascript/auto\").tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/esm\").tap(PLUGIN_NAME, handler);\n      normalModuleFactory.hooks.parser.for(\"javascript/dynamic\").tap(PLUGIN_NAME, handler);\n      if (!ampFirstEntryNamesMap.has(compilation)) {\n        ampFirstEntryNamesMap.set(compilation, []);\n      }\n      const ampFirstEntryNamesItem = ampFirstEntryNamesMap.get(compilation);\n      compilation.hooks.seal.tap(PLUGIN_NAME, () => {\n        for (const [name, entryData] of compilation.entries) {\n          for (const dependency of entryData.dependencies) {\n            var _module_buildInfo;\n            const module1 = compilation.moduleGraph.getModule(dependency);\n            if (module1 == null ? void 0 : (_module_buildInfo = module1.buildInfo) == null ? void 0 : _module_buildInfo.NEXT_ampFirst) {\n              ampFirstEntryNamesItem.push(name);\n              compilation.entries.delete(name);\n            }\n          }\n        }\n      });\n    });\n  }\n  constructor() {\n    this.ampPages = new Set();\n  }\n}","map":{"version":3,"names":["ampFirstEntryNamesMap","DropClientPage","WeakMap","PLUGIN_NAME","apply","compiler","hooks","compilation","tap","normalModuleFactory","findEntryModule","mod","queue","Set","module1","incomingConnections","moduleGraph","getIncomingConnections","incomingConnection","originModule","add","handler","parser","markAsAmpFirst","entryModule","state","module","buildInfo","NEXT_ampFirst","preDeclarator","declarator","_declarator_id","id","name","_constants","STRING_LITERAL_DROP_BUNDLE","for","has","set","ampFirstEntryNamesItem","get","seal","entryData","entries","dependency","dependencies","_module_buildInfo","getModule","push","delete","ampPages"],"sources":["../../../../src/build/webpack/plugins/next-drop-client-page-plugin.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;EAGaA,qBAAqB,WAAAA,CAAA;WAArBA,qBAAA;;EAMAC,cAAc,WAAAA,CAAA;WAAdA,cAAA;;;2BAR8B;AAEpC,MAAMD,qBAAA,GACX,IAAIE,OAAA;AAEN,MAAMC,WAAA,GAAc;AAGb,MAAMF,cAAA;EAGXG,MAAMC,QAA0B,EAAE;IAChCA,QAAA,CAASC,KAAK,CAACC,WAAW,CAACC,GAAG,CAC5BL,WAAA,EACA,CAACI,WAAA,EAAkB;MAAEE;IAAmB,CAAO;MAC7C;MACA,SAASC,gBAAgBC,GAAQ;QAC/B,MAAMC,KAAA,GAAQ,IAAIC,GAAA,CAAI,CAACF,GAAA,CAAI;QAC3B,KAAK,MAAMG,OAAA,IAAUF,KAAA,EAAO;UAC1B,MAAMG,mBAAA,GACJR,WAAA,CAAYS,WAAW,CAACC,sBAAsB,CAACH,OAAA;UAEjD,KAAK,MAAMI,kBAAA,IAAsBH,mBAAA,EAAqB;YACpD,IAAI,CAACG,kBAAA,CAAmBC,YAAY,EAAE,OAAOL,OAAA;YAC7CF,KAAA,CAAMQ,GAAG,CAACF,kBAAA,CAAmBC,YAAY;UAC3C;QACF;QAEA,OAAO;MACT;MAEA,SAASE,QAAQC,MAAW;QAC1B,SAASC,eAAA;UACP,MAAMC,WAAA,GAAcd,eAAA,CAAgBY,MAAA,CAAOG,KAAK,CAACC,MAAM;UAEvD,IAAI,CAACF,WAAA,EAAa;YAChB;UACF;UAEA;UACAA,WAAA,CAAYG,SAAS,CAACC,aAAa,GAAG;QACxC;QAEAN,MAAA,CAAOhB,KAAK,CAACuB,aAAa,CAACrB,GAAG,CAACL,WAAA,EAAc2B,UAAA;cACvCC,cAAA;UAAJ,IAAI,CAAAD,UAAA,qBAAAC,cAAA,GAAAD,UAAA,CAAYE,EAAE,qBAAdD,cAAA,CAAgBE,IAAI,MAAKC,UAAA,CAAAC,0BAA0B,EAAE;YACvDZ,cAAA;UACF;QACF;MACF;MAEAd,mBAAA,CAAoBH,KAAK,CAACgB,MAAM,CAC7Bc,GAAG,CAAC,mBACJ5B,GAAG,CAACL,WAAA,EAAakB,OAAA;MAEpBZ,mBAAA,CAAoBH,KAAK,CAACgB,MAAM,CAC7Bc,GAAG,CAAC,kBACJ5B,GAAG,CAACL,WAAA,EAAakB,OAAA;MAEpBZ,mBAAA,CAAoBH,KAAK,CAACgB,MAAM,CAC7Bc,GAAG,CAAC,sBACJ5B,GAAG,CAACL,WAAA,EAAakB,OAAA;MAEpB,IAAI,CAACrB,qBAAA,CAAsBqC,GAAG,CAAC9B,WAAA,GAAc;QAC3CP,qBAAA,CAAsBsC,GAAG,CAAC/B,WAAA,EAAa,EAAE;MAC3C;MAEA,MAAMgC,sBAAA,GAAyBvC,qBAAA,CAAsBwC,GAAG,CACtDjC,WAAA;MAGFA,WAAA,CAAYD,KAAK,CAACmC,IAAI,CAACjC,GAAG,CAACL,WAAA,EAAa;QACtC,KAAK,MAAM,CAAC8B,IAAA,EAAMS,SAAA,CAAU,IAAInC,WAAA,CAAYoC,OAAO,EAAE;UACnD,KAAK,MAAMC,UAAA,IAAcF,SAAA,CAAUG,YAAY,EAAE;gBAE3CC,iBAAA;YADJ,MAAMhC,OAAA,GAASP,WAAA,CAAYS,WAAW,CAAC+B,SAAS,CAACH,UAAA;YACjD,IAAI9B,OAAA,qBAAAgC,iBAAA,GAAAhC,OAAA,CAAQa,SAAS,qBAAjBmB,iBAAA,CAAmBlB,aAAa,EAAE;cACpCW,sBAAA,CAAuBS,IAAI,CAACf,IAAA;cAC5B1B,WAAA,CAAYoC,OAAO,CAACM,MAAM,CAAChB,IAAA;YAC7B;UACF;QACF;MACF;IACF;EAEJ;;SA1EAiB,QAAA,GAAW,IAAIrC,GAAA;;AA2EjB"},"metadata":{},"sourceType":"script","externalDependencies":[]}