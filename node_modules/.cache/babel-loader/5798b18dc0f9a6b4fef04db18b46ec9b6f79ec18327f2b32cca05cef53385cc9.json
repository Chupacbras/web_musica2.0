{"ast":null,"code":"#!/usr/bin/env node\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"nextTelemetry\", {\n  enumerable: true,\n  get: function () {\n    return nextTelemetry;\n  }\n});\nconst _chalk = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/chalk\"));\nconst _storage = require(\"../telemetry/storage\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst nextTelemetry = args => {\n  if (args[\"--help\"]) {\n    console.log(`\n      Description\n        Allows you to control Next.js' telemetry collection\n\n      Usage\n        $ next telemetry [enable/disable]\n\n      You may pass the 'enable' or 'disable' argument to turn Next.js' telemetry collection on or off.\n\n      Options\n       --enable    Enables Next.js' telemetry collection\n       --disable   Disables Next.js' telemetry collection\n       --help, -h  Displays this message\n\n      Learn more: ${_chalk.default.cyan(\"https://nextjs.org/telemetry\")}\n    `);\n    return;\n  }\n  const telemetry = new _storage.Telemetry({\n    distDir: process.cwd()\n  });\n  let isEnabled = telemetry.isEnabled;\n  if (args[\"--enable\"] || args._[0] === \"enable\") {\n    telemetry.setEnabled(true);\n    console.log(_chalk.default.cyan(\"Success!\"));\n    console.log();\n    isEnabled = true;\n  } else if (args[\"--disable\"] || args._[0] === \"disable\") {\n    const path = telemetry.setEnabled(false);\n    if (isEnabled) {\n      console.log(_chalk.default.cyan(`Your preference has been saved${path ? ` to ${path}` : \"\"}.`));\n    } else {\n      console.log(_chalk.default.yellow(`Next.js' telemetry collection is already disabled.`));\n    }\n    console.log();\n    isEnabled = false;\n  } else {\n    console.log(_chalk.default.bold(\"Next.js Telemetry\"));\n    console.log();\n  }\n  console.log(`Status: ${isEnabled ? _chalk.default.bold.green(\"Enabled\") : _chalk.default.bold.red(\"Disabled\")}`);\n  console.log();\n  if (isEnabled) {\n    console.log(`Next.js telemetry is completely anonymous. Thank you for participating!`);\n  } else {\n    console.log(`You have opted-out of Next.js' anonymous telemetry program.`);\n    console.log(`No data will be collected from your machine.`);\n  }\n  console.log(`Learn more: https://nextjs.org/telemetry`);\n  console.log();\n};","map":{"version":3,"names":["nextTelemetry","args","console","log","_chalk","default","cyan","telemetry","_storage","Telemetry","distDir","process","cwd","isEnabled","_","setEnabled","path","yellow","bold","green","red"],"sources":["../../src/cli/next-telemetry.ts"],"sourcesContent":[null],"mappings":";;;;;;+BA+ES;;;WAAAA,aAAA;;;6DA9ES;yBAEQ;;;;;;AAE1B,MAAMA,aAAA,GAA6BC,IAAA;EACjC,IAAIA,IAAI,CAAC,SAAS,EAAE;IAClBC,OAAA,CAAQC,GAAG,CACR;;;;;;;;;;;;;;oBAcaC,MAAA,CAAAC,OAAK,CAACC,IAAI,CAAC,+BAAgC;KAC1D;IAED;EACF;EAEA,MAAMC,SAAA,GAAY,IAAIC,QAAA,CAAAC,SAAS,CAAC;IAAEC,OAAA,EAASC,OAAA,CAAQC,GAAG;EAAG;EAEzD,IAAIC,SAAA,GAAYN,SAAA,CAAUM,SAAS;EAEnC,IAAIZ,IAAI,CAAC,WAAW,IAAIA,IAAA,CAAKa,CAAC,CAAC,EAAE,KAAK,UAAU;IAC9CP,SAAA,CAAUQ,UAAU,CAAC;IACrBb,OAAA,CAAQC,GAAG,CAACC,MAAA,CAAAC,OAAK,CAACC,IAAI,CAAC;IACvBJ,OAAA,CAAQC,GAAG;IAEXU,SAAA,GAAY;EACd,OAAO,IAAIZ,IAAI,CAAC,YAAY,IAAIA,IAAA,CAAKa,CAAC,CAAC,EAAE,KAAK,WAAW;IACvD,MAAME,IAAA,GAAOT,SAAA,CAAUQ,UAAU,CAAC;IAClC,IAAIF,SAAA,EAAW;MACbX,OAAA,CAAQC,GAAG,CACTC,MAAA,CAAAC,OAAK,CAACC,IAAI,CACP,iCAAgCU,IAAA,GAAQ,OAAMA,IAAK,EAAC,GAAG,EAAG,GAAE;IAGnE,OAAO;MACLd,OAAA,CAAQC,GAAG,CACTC,MAAA,CAAAC,OAAK,CAACY,MAAM,CAAE,oDAAmD;IAErE;IACAf,OAAA,CAAQC,GAAG;IAEXU,SAAA,GAAY;EACd,OAAO;IACLX,OAAA,CAAQC,GAAG,CAACC,MAAA,CAAAC,OAAK,CAACa,IAAI,CAAC;IACvBhB,OAAA,CAAQC,GAAG;EACb;EAEAD,OAAA,CAAQC,GAAG,CACR,WACCU,SAAA,GAAYT,MAAA,CAAAC,OAAK,CAACa,IAAI,CAACC,KAAK,CAAC,aAAaf,MAAA,CAAAC,OAAK,CAACa,IAAI,CAACE,GAAG,CAAC,WAC1D,EAAC;EAEJlB,OAAA,CAAQC,GAAG;EAEX,IAAIU,SAAA,EAAW;IACbX,OAAA,CAAQC,GAAG,CACR,yEAAwE;EAE7E,OAAO;IACLD,OAAA,CAAQC,GAAG,CAAE,6DAA4D;IACzED,OAAA,CAAQC,GAAG,CAAE,8CAA6C;EAC5D;EAEAD,OAAA,CAAQC,GAAG,CAAE,0CAAyC;EACtDD,OAAA,CAAQC,GAAG;AACb"},"metadata":{},"sourceType":"script","externalDependencies":[]}