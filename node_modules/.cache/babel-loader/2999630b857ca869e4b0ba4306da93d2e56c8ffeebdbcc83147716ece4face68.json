{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return NextNodeServer;\n  }\n});\n0 && __export(require(\"./base-server\"));\nrequire(\"./node-environment\");\nrequire(\"./require-hook\");\nrequire(\"./node-polyfill-fetch\");\nrequire(\"./node-polyfill-form\");\nrequire(\"./node-polyfill-web-streams\");\nrequire(\"./node-polyfill-crypto\");\nconst _utils = require(\"../shared/lib/utils\");\nconst _routematcher = require(\"../shared/lib/router/utils/route-matcher\");\nconst _fs = /*#__PURE__*/_interop_require_default(require(\"fs\"));\nconst _path = require(\"path\");\nconst _requestmeta = require(\"./request-meta\");\nconst _constants = require(\"../shared/lib/constants\");\nconst _findpagesdir = require(\"../lib/find-pages-dir\");\nconst _node = require(\"./base-http/node\");\nconst _sendpayload = require(\"./send-payload\");\nconst _parseurl = require(\"../shared/lib/router/utils/parse-url\");\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"../build/output/log\"));\nconst _baseserver = /*#__PURE__*/_interop_require_wildcard(_export_star(require(\"./base-server\"), exports));\nconst _require = require(\"./require\");\nconst _denormalizepagepath = require(\"../shared/lib/page-path/denormalize-page-path\");\nconst _normalizepagepath = require(\"../shared/lib/page-path/normalize-page-path\");\nconst _loadcomponents = require(\"./load-components\");\nconst _iserror = /*#__PURE__*/_interop_require_wildcard(require(\"../lib/is-error\"));\nconst _utils1 = require(\"./web/utils\");\nconst _middlewareroutematcher = require(\"../shared/lib/router/utils/middleware-route-matcher\");\nconst _env = require(\"@next/env\");\nconst _querystring = require(\"../shared/lib/router/utils/querystring\");\nconst _removetrailingslash = require(\"../shared/lib/router/utils/remove-trailing-slash\");\nconst _getnextpathnameinfo = require(\"../shared/lib/router/utils/get-next-pathname-info\");\nconst _bodystreams = require(\"./body-streams\");\nconst _apiutils = require(\"./api-utils\");\nconst _responsecache = /*#__PURE__*/_interop_require_default(require(\"./response-cache\"));\nconst _incrementalcache = require(\"./lib/incremental-cache\");\nconst _apppaths = require(\"../shared/lib/router/utils/app-paths\");\nconst _setuphttpagentenv = require(\"./setup-http-agent-env\");\nconst _pagesapiroutematch = require(\"./future/route-matches/pages-api-route-match\");\nconst _constants1 = require(\"../lib/constants\");\nconst _tracer = require(\"./lib/trace/tracer\");\nconst _constants2 = require(\"./lib/trace/constants\");\nconst _nodefsmethods = require(\"./lib/node-fs-methods\");\nconst _routeregex = require(\"../shared/lib/router/utils/route-regex\");\nconst _invokerequest = require(\"./lib/server-ipc/invoke-request\");\nconst _pipereadable = require(\"./pipe-readable\");\nconst _utils2 = require(\"./lib/server-ipc/utils\");\nconst _mockrequest = require(\"./lib/mock-request\");\nconst _approuterheaders = require(\"../client/components/app-router-headers\");\nconst _nextrequest = require(\"./web/spec-extension/adapters/next-request\");\nconst _routemoduleloader = require(\"./future/helpers/module-loader/route-module-loader\");\nconst _loadmanifest = require(\"./load-manifest\");\nfunction _export_star(from, to) {\n  Object.keys(from).forEach(function (k) {\n    if (k !== \"default\" && !Object.prototype.hasOwnProperty.call(to, k)) {\n      Object.defineProperty(to, k, {\n        enumerable: true,\n        get: function () {\n          return from[k];\n        }\n      });\n    }\n  });\n  return from;\n}\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction writeStdoutLine(text) {\n  process.stdout.write(\" \" + text + \"\\n\");\n}\nfunction formatRequestUrl(url, maxLength) {\n  return maxLength !== undefined && url.length > maxLength ? url.substring(0, maxLength) + \"..\" : url;\n}\nconst MiddlewareMatcherCache = new WeakMap();\nfunction getMiddlewareMatcher(info) {\n  const stored = MiddlewareMatcherCache.get(info);\n  if (stored) {\n    return stored;\n  }\n  if (!Array.isArray(info.matchers)) {\n    throw new Error(`Invariant: invalid matchers for middleware ${JSON.stringify(info)}`);\n  }\n  const matcher = (0, _middlewareroutematcher.getMiddlewareRouteMatcher)(info.matchers);\n  MiddlewareMatcherCache.set(info, matcher);\n  return matcher;\n}\nclass NextNodeServer extends _baseserver.default {\n  constructor(options) {\n    // Initialize super class\n    super(options);\n    /**\n    * This sets environment variable to be used at the time of SSR by head.tsx.\n    * Using this from process.env allows targeting SSR by calling\n    * `process.env.__NEXT_OPTIMIZE_CSS`.\n    */\n    if (this.renderOpts.optimizeFonts) {\n      process.env.__NEXT_OPTIMIZE_FONTS = JSON.stringify(this.renderOpts.optimizeFonts);\n    }\n    if (this.renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true);\n    }\n    if (this.renderOpts.nextScriptWorkers) {\n      process.env.__NEXT_SCRIPT_WORKERS = JSON.stringify(true);\n    }\n    if (this.nextConfig.experimental.deploymentId) {\n      process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.experimental.deploymentId;\n    }\n    if (!this.minimalMode) {\n      this.imageResponseCache = new _responsecache.default(this.minimalMode);\n    }\n    const {\n      appDocumentPreloading\n    } = this.nextConfig.experimental;\n    const isDefaultEnabled = typeof appDocumentPreloading === \"undefined\";\n    if (!options.dev && (appDocumentPreloading === true || !(this.minimalMode && isDefaultEnabled))) {\n      // pre-warm _document and _app as these will be\n      // needed for most requests\n      (0, _loadcomponents.loadComponents)({\n        distDir: this.distDir,\n        page: \"/_document\",\n        isAppPath: false\n      }).catch(() => {});\n      (0, _loadcomponents.loadComponents)({\n        distDir: this.distDir,\n        page: \"/_app\",\n        isAppPath: false\n      }).catch(() => {});\n    }\n    if (!options.dev) {\n      const {\n        dynamicRoutes = []\n      } = this.getRoutesManifest() ?? {};\n      this.dynamicRoutes = dynamicRoutes.map(r => {\n        // TODO: can we just re-use the regex from the manifest?\n        const regex = (0, _routeregex.getRouteRegex)(r.page);\n        const match = (0, _routematcher.getRouteMatcher)(regex);\n        return {\n          match,\n          page: r.page,\n          re: regex.re\n        };\n      });\n    }\n    // ensure options are set when loadConfig isn't called\n    (0, _setuphttpagentenv.setHttpClientAndAgentOptions)(this.nextConfig);\n    // Intercept fetch and other testmode apis.\n    if (this.serverOptions.experimentalTestProxy) {\n      const {\n        interceptTestApis\n      } = require(\"../experimental/testmode/server\");\n      interceptTestApis();\n    }\n    this.middlewareManifestPath = (0, _path.join)(this.serverDistDir, _constants.MIDDLEWARE_MANIFEST);\n  }\n  async handleUpgrade() {\n    // The web server does not support web sockets, it's only used for HMR in\n    // development.\n  }\n  async prepareImpl() {\n    await super.prepareImpl();\n    if (!this.serverOptions.dev && this.nextConfig.experimental.instrumentationHook) {\n      try {\n        const instrumentationHook = await require((0, _path.resolve)(this.serverOptions.dir || \".\", this.serverOptions.conf.distDir, \"server\", _constants1.INSTRUMENTATION_HOOK_FILENAME));\n        await (instrumentationHook.register == null ? void 0 : instrumentationHook.register.call(instrumentationHook));\n      } catch (err) {\n        if (err.code !== \"MODULE_NOT_FOUND\") {\n          err.message = `An error occurred while loading instrumentation hook: ${err.message}`;\n          throw err;\n        }\n      }\n    }\n  }\n  loadEnvConfig({\n    dev,\n    forceReload,\n    silent\n  }) {\n    (0, _env.loadEnvConfig)(this.dir, dev, silent ? {\n      info: () => {},\n      error: () => {}\n    } : _log, forceReload);\n  }\n  getIncrementalCache({\n    requestHeaders,\n    requestProtocol\n  }) {\n    const dev = !!this.renderOpts.dev;\n    let CacheHandler;\n    const {\n      incrementalCacheHandlerPath\n    } = this.nextConfig.experimental;\n    if (incrementalCacheHandlerPath) {\n      CacheHandler = require((0, _path.isAbsolute)(incrementalCacheHandlerPath) ? incrementalCacheHandlerPath : (0, _path.join)(this.distDir, incrementalCacheHandlerPath));\n      CacheHandler = CacheHandler.default || CacheHandler;\n    }\n    // incremental-cache is request specific\n    // although can have shared caches in module scope\n    // per-cache handler\n    return new _incrementalcache.IncrementalCache({\n      fs: this.getCacheFilesystem(),\n      dev,\n      requestHeaders,\n      requestProtocol,\n      appDir: this.hasAppDir,\n      allowedRevalidateHeaderKeys: this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      minimalMode: this.minimalMode,\n      serverDistDir: this.serverDistDir,\n      fetchCache: true,\n      fetchCacheKeyPrefix: this.nextConfig.experimental.fetchCacheKeyPrefix,\n      maxMemoryCacheSize: this.nextConfig.experimental.isrMemoryCacheSize,\n      flushToDisk: !this.minimalMode && this.nextConfig.experimental.isrFlushToDisk,\n      getPrerenderManifest: () => this.getPrerenderManifest(),\n      CurCacheHandler: CacheHandler\n    });\n  }\n  getResponseCache() {\n    return new _responsecache.default(this.minimalMode);\n  }\n  getPublicDir() {\n    return (0, _path.join)(this.dir, _constants.CLIENT_PUBLIC_FILES_PATH);\n  }\n  getHasStaticDir() {\n    return _fs.default.existsSync((0, _path.join)(this.dir, \"static\"));\n  }\n  getPagesManifest() {\n    return (0, _loadmanifest.loadManifest)((0, _path.join)(this.serverDistDir, _constants.PAGES_MANIFEST));\n  }\n  getAppPathsManifest() {\n    if (!this.hasAppDir) return undefined;\n    return (0, _loadmanifest.loadManifest)((0, _path.join)(this.serverDistDir, _constants.APP_PATHS_MANIFEST));\n  }\n  async hasPage(pathname) {\n    var _this_nextConfig_i18n;\n    return !!(0, _require.getMaybePagePath)(pathname, this.distDir, (_this_nextConfig_i18n = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n.locales, this.hasAppDir);\n  }\n  getBuildId() {\n    const buildIdFile = (0, _path.join)(this.distDir, _constants.BUILD_ID_FILE);\n    try {\n      return _fs.default.readFileSync(buildIdFile, \"utf8\").trim();\n    } catch (err) {\n      if (!_fs.default.existsSync(buildIdFile)) {\n        throw new Error(`Could not find a production build in the '${this.distDir}' directory. Try building your app with 'next build' before starting the production server. https://nextjs.org/docs/messages/production-start-no-build-id`);\n      }\n      throw err;\n    }\n  }\n  getHasAppDir(dev) {\n    return Boolean((0, _findpagesdir.findDir)(dev ? this.dir : this.serverDistDir, \"app\"));\n  }\n  sendRenderResult(req, res, options) {\n    return (0, _sendpayload.sendRenderResult)({\n      req: req.originalRequest,\n      res: res.originalResponse,\n      ...options\n    });\n  }\n  async runApi(req, res, query, match) {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages();\n    for (const edgeFunctionsPage of edgeFunctionsPages) {\n      if (edgeFunctionsPage === match.definition.pathname) {\n        const handledAsEdgeFunction = await this.runEdgeFunction({\n          req,\n          res,\n          query,\n          params: match.params,\n          page: match.definition.pathname,\n          appPaths: null\n        });\n        if (handledAsEdgeFunction) {\n          return true;\n        }\n      }\n    }\n    // The module supports minimal mode, load the minimal module.\n    const module = await _routemoduleloader.RouteModuleLoader.load(match.definition.filename);\n    query = {\n      ...query,\n      ...match.params\n    };\n    delete query.__nextLocale;\n    delete query.__nextDefaultLocale;\n    delete query.__nextInferredLocaleFromDefault;\n    await module.render(req.originalRequest, res.originalResponse, {\n      previewProps: this.renderOpts.previewProps,\n      revalidate: this.revalidate.bind(this),\n      trustHostHeader: this.nextConfig.experimental.trustHostHeader,\n      allowedRevalidateHeaderKeys: this.nextConfig.experimental.allowedRevalidateHeaderKeys,\n      hostname: this.fetchHostname,\n      minimalMode: this.minimalMode,\n      dev: this.renderOpts.dev === true,\n      query,\n      params: match.params,\n      page: match.definition.pathname\n    });\n    return true;\n  }\n  async renderHTML(req, res, pathname, query, renderOpts) {\n    return (0, _tracer.getTracer)().trace(_constants2.NextNodeServerSpan.renderHTML, async () => this.renderHTMLImpl(req, res, pathname, query, renderOpts));\n  }\n  async renderHTMLImpl(req, res, pathname, query, renderOpts) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\"invariant: renderHTML should not be called in minimal mode\");\n      // the `else` branch is needed for tree-shaking\n    } else {\n      // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n      // object here but only updating its `nextFontManifest` field.\n      // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n      renderOpts.nextFontManifest = this.nextFontManifest;\n      if (this.hasAppDir && renderOpts.isAppPath) {\n        const {\n          renderToHTMLOrFlight: appRenderToHTMLOrFlight\n        } = require(\"./future/route-modules/app-page/module.compiled\");\n        return appRenderToHTMLOrFlight(req.originalRequest, res.originalResponse, pathname, query, renderOpts);\n      }\n      // TODO: re-enable this once we've refactored to use implicit matches\n      // throw new Error('Invariant: render should have used routeModule')\n      return require(\"./future/route-modules/pages/module.compiled\").renderToHTML(req.originalRequest, res.originalResponse, pathname, query, renderOpts);\n    }\n  }\n  async imageOptimizer(req, res, paramsResult) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\"invariant: imageOptimizer should not be called in minimal mode\");\n    } else {\n      const {\n        imageOptimizer\n      } = require(\"./image-optimizer\");\n      return imageOptimizer(req.originalRequest, res.originalResponse, paramsResult, this.nextConfig, this.renderOpts.dev, async (newReq, newRes, newParsedUrl) => {\n        if (newReq.url === req.url) {\n          throw new Error(`Invariant attempted to optimize _next/image itself`);\n        }\n        if (this.isRenderWorker) {\n          const invokeRes = await (0, _invokerequest.invokeRequest)(`${(0, _requestmeta.getRequestMeta)(req, \"_protocol\")}://${this.fetchHostname || \"localhost\"}:${this.port}${newReq.url || \"\"}`, {\n            method: newReq.method || \"GET\",\n            headers: newReq.headers,\n            signal: (0, _nextrequest.signalFromNodeResponse)(res.originalResponse)\n          });\n          const filteredResHeaders = (0, _utils2.filterReqHeaders)((0, _utils1.toNodeOutgoingHttpHeaders)(invokeRes.headers), _utils2.ipcForbiddenHeaders);\n          for (const key of Object.keys(filteredResHeaders)) {\n            newRes.setHeader(key, filteredResHeaders[key] || \"\");\n          }\n          newRes.statusCode = invokeRes.status || 200;\n          if (invokeRes.body) {\n            await (0, _pipereadable.pipeReadable)(invokeRes.body, newRes);\n          } else {\n            res.send();\n          }\n          return;\n        }\n        return this.getRequestHandler()(new _node.NodeNextRequest(newReq), new _node.NodeNextResponse(newRes), newParsedUrl);\n      });\n    }\n  }\n  getPagePath(pathname, locales) {\n    return (0, _require.getPagePath)(pathname, this.distDir, locales, this.hasAppDir);\n  }\n  async renderPageComponent(ctx, bubbleNoFallback) {\n    const edgeFunctionsPages = this.getEdgeFunctionsPages() || [];\n    if (edgeFunctionsPages.length) {\n      const appPaths = this.getOriginalAppPaths(ctx.pathname);\n      const isAppPath = Array.isArray(appPaths);\n      let page = ctx.pathname;\n      if (isAppPath) {\n        // When it's an array, we need to pass all parallel routes to the loader.\n        page = appPaths[0];\n      }\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        if (edgeFunctionsPage === page) {\n          await this.runEdgeFunction({\n            req: ctx.req,\n            res: ctx.res,\n            query: ctx.query,\n            params: ctx.renderOpts.params,\n            page,\n            appPaths\n          });\n          return null;\n        }\n      }\n    }\n    return super.renderPageComponent(ctx, bubbleNoFallback);\n  }\n  async findPageComponents({\n    page,\n    query,\n    params,\n    isAppPath\n  }) {\n    return (0, _tracer.getTracer)().trace(_constants2.NextNodeServerSpan.findPageComponents, {\n      spanName: `resolving page into components`,\n      attributes: {\n        \"next.route\": isAppPath ? (0, _apppaths.normalizeAppPath)(page) : page\n      }\n    }, () => this.findPageComponentsImpl({\n      page,\n      query,\n      params,\n      isAppPath\n    }));\n  }\n  async findPageComponentsImpl({\n    page,\n    query,\n    params,\n    isAppPath\n  }) {\n    const pagePaths = [page];\n    if (query.amp) {\n      // try serving a static AMP version first\n      pagePaths.unshift((isAppPath ? (0, _apppaths.normalizeAppPath)(page) : (0, _normalizepagepath.normalizePagePath)(page)) + \".amp\");\n    }\n    if (query.__nextLocale) {\n      pagePaths.unshift(...pagePaths.map(path => `/${query.__nextLocale}${path === \"/\" ? \"\" : path}`));\n    }\n    for (const pagePath of pagePaths) {\n      try {\n        const components = await (0, _loadcomponents.loadComponents)({\n          distDir: this.distDir,\n          page: pagePath,\n          isAppPath\n        });\n        if (query.__nextLocale && typeof components.Component === \"string\" && !pagePath.startsWith(`/${query.__nextLocale}`)) {\n          continue;\n        }\n        return {\n          components,\n          query: {\n            ...(components.getStaticProps ? {\n              amp: query.amp,\n              __nextDataReq: query.__nextDataReq,\n              __nextLocale: query.__nextLocale,\n              __nextDefaultLocale: query.__nextDefaultLocale\n            } : query),\n            // For appDir params is excluded.\n            ...((isAppPath ? {} : params) || {})\n          }\n        };\n      } catch (err) {\n        // we should only not throw if we failed to find the page\n        // in the pages-manifest\n        if (!(err instanceof _utils.PageNotFoundError)) {\n          throw err;\n        }\n      }\n    }\n    return null;\n  }\n  getFontManifest() {\n    return (0, _require.requireFontManifest)(this.distDir);\n  }\n  getNextFontManifest() {\n    return (0, _loadmanifest.loadManifest)((0, _path.join)(this.distDir, \"server\", _constants.NEXT_FONT_MANIFEST + \".json\"));\n  }\n  async getFallback(page) {\n    page = (0, _normalizepagepath.normalizePagePath)(page);\n    const cacheFs = this.getCacheFilesystem();\n    const html = await cacheFs.readFile((0, _path.join)(this.serverDistDir, \"pages\", `${page}.html`));\n    return html.toString(\"utf8\");\n  }\n  async handleNextImageRequest(req, res, parsedUrl) {\n    if (this.minimalMode || this.nextConfig.output === \"export\" || process.env.NEXT_MINIMAL) {\n      res.statusCode = 400;\n      res.body(\"Bad Request\").send();\n      return {\n        finished: true\n      };\n      // the `else` branch is needed for tree-shaking\n    } else {\n      const {\n        ImageOptimizerCache\n      } = require(\"./image-optimizer\");\n      const imageOptimizerCache = new ImageOptimizerCache({\n        distDir: this.distDir,\n        nextConfig: this.nextConfig\n      });\n      const {\n        getHash,\n        sendResponse,\n        ImageError\n      } = require(\"./image-optimizer\");\n      if (!this.imageResponseCache) {\n        throw new Error(\"invariant image optimizer cache was not initialized\");\n      }\n      const imagesConfig = this.nextConfig.images;\n      if (imagesConfig.loader !== \"default\" || imagesConfig.unoptimized) {\n        await this.render404(req, res);\n        return {\n          finished: true\n        };\n      }\n      const paramsResult = ImageOptimizerCache.validateParams(req.originalRequest, parsedUrl.query, this.nextConfig, !!this.renderOpts.dev);\n      if (\"errorMessage\" in paramsResult) {\n        res.statusCode = 400;\n        res.body(paramsResult.errorMessage).send();\n        return {\n          finished: true\n        };\n      }\n      const cacheKey = ImageOptimizerCache.getCacheKey(paramsResult);\n      try {\n        var _cacheEntry_value;\n        const {\n          getExtension\n        } = require(\"./serve-static\");\n        const cacheEntry = await this.imageResponseCache.get(cacheKey, async () => {\n          const {\n            buffer,\n            contentType,\n            maxAge\n          } = await this.imageOptimizer(req, res, paramsResult);\n          const etag = getHash([buffer]);\n          return {\n            value: {\n              kind: \"IMAGE\",\n              buffer,\n              etag,\n              extension: getExtension(contentType)\n            },\n            revalidate: maxAge\n          };\n        }, {\n          incrementalCache: imageOptimizerCache\n        });\n        if ((cacheEntry == null ? void 0 : (_cacheEntry_value = cacheEntry.value) == null ? void 0 : _cacheEntry_value.kind) !== \"IMAGE\") {\n          throw new Error(\"invariant did not get entry from image response cache\");\n        }\n        sendResponse(req.originalRequest, res.originalResponse, paramsResult.href, cacheEntry.value.extension, cacheEntry.value.buffer, paramsResult.isStatic, cacheEntry.isMiss ? \"MISS\" : cacheEntry.isStale ? \"STALE\" : \"HIT\", imagesConfig, cacheEntry.revalidate || 0, Boolean(this.renderOpts.dev));\n      } catch (err) {\n        if (err instanceof ImageError) {\n          res.statusCode = err.statusCode;\n          res.body(err.message).send();\n          return {\n            finished: true\n          };\n        }\n        throw err;\n      }\n      return {\n        finished: true\n      };\n    }\n  }\n  async handleCatchallRenderRequest(req, res, parsedUrl) {\n    let {\n      pathname,\n      query\n    } = parsedUrl;\n    if (!pathname) {\n      throw new Error(\"Invariant: pathname is undefined\");\n    }\n    // This is a catch-all route, there should be no fallbacks so mark it as\n    // such.\n    query._nextBubbleNoFallback = \"1\";\n    try {\n      var _this_i18nProvider;\n      // next.js core assumes page path without trailing slash\n      pathname = (0, _removetrailingslash.removeTrailingSlash)(pathname);\n      const options = {\n        i18n: (_this_i18nProvider = this.i18nProvider) == null ? void 0 : _this_i18nProvider.fromQuery(pathname, query)\n      };\n      const match = await this.matchers.match(pathname, options);\n      // If we don't have a match, try to render it anyways.\n      if (!match) {\n        await this.render(req, res, pathname, query, parsedUrl, true);\n        return {\n          finished: true\n        };\n      }\n      // Add the match to the request so we don't have to re-run the matcher\n      // for the same request.\n      (0, _requestmeta.addRequestMeta)(req, \"_nextMatch\", match);\n      // TODO-APP: move this to a route handler\n      const edgeFunctionsPages = this.getEdgeFunctionsPages();\n      for (const edgeFunctionsPage of edgeFunctionsPages) {\n        // If the page doesn't match the edge function page, skip it.\n        if (edgeFunctionsPage !== match.definition.page) continue;\n        if (this.nextConfig.output === \"export\") {\n          await this.render404(req, res, parsedUrl);\n          return {\n            finished: true\n          };\n        }\n        delete query._nextBubbleNoFallback;\n        delete query[_approuterheaders.NEXT_RSC_UNION_QUERY];\n        const handled = await this.runEdgeFunction({\n          req,\n          res,\n          query,\n          params: match.params,\n          page: match.definition.page,\n          match,\n          appPaths: null\n        });\n        // If we handled the request, we can return early.\n        if (handled) return {\n          finished: true\n        };\n      }\n      // If the route was detected as being a Pages API route, then handle\n      // it.\n      // TODO: move this behavior into a route handler.\n      if ((0, _pagesapiroutematch.isPagesAPIRouteMatch)(match)) {\n        if (this.nextConfig.output === \"export\") {\n          await this.render404(req, res, parsedUrl);\n          return {\n            finished: true\n          };\n        }\n        delete query._nextBubbleNoFallback;\n        const handled = await this.handleApiRequest(req, res, query, match);\n        if (handled) return {\n          finished: true\n        };\n      }\n      await this.render(req, res, pathname, query, parsedUrl, true);\n      return {\n        finished: true\n      };\n    } catch (err) {\n      if (err instanceof _baseserver.NoFallbackError) {\n        if (this.isRenderWorker) {\n          throw err;\n        }\n        return {\n          finished: false\n        };\n      }\n      try {\n        if (this.renderOpts.dev) {\n          const {\n            formatServerError\n          } = require(\"../lib/format-server-error\");\n          formatServerError(err);\n          await this.logErrorWithOriginalStack(err);\n        } else {\n          this.logError(err);\n        }\n        res.statusCode = 500;\n        await this.renderError(err, req, res, pathname, query);\n        return {\n          finished: true\n        };\n      } catch {}\n      throw err;\n    }\n  }\n  // Used in development only, overloaded in next-dev-server\n  async logErrorWithOriginalStack(_err, _type) {\n    throw new Error(\"Invariant: logErrorWithOriginalStack can only be called on the development server\");\n  }\n  // Used in development only, overloaded in next-dev-server\n  async ensurePage(_opts) {\n    throw new Error(\"Invariant: ensurePage can only be called on the development server\");\n  }\n  /**\n  * Resolves `API` request, in development builds on demand\n  * @param req http request\n  * @param res http response\n  * @param pathname path of request\n  */\n  async handleApiRequest(req, res, query, match) {\n    return this.runApi(req, res, query, match);\n  }\n  async getPrefetchRsc(pathname) {\n    return this.getCacheFilesystem().readFile((0, _path.join)(this.serverDistDir, \"app\", `${pathname}.prefetch.rsc`)).then(res => res.toString());\n  }\n  getCacheFilesystem() {\n    return _nodefsmethods.nodeFs;\n  }\n  normalizeReq(req) {\n    return !(req instanceof _node.NodeNextRequest) ? new _node.NodeNextRequest(req) : req;\n  }\n  normalizeRes(res) {\n    return !(res instanceof _node.NodeNextResponse) ? new _node.NodeNextResponse(res) : res;\n  }\n  getRequestHandler() {\n    const handler = this.makeRequestHandler();\n    if (this.serverOptions.experimentalTestProxy) {\n      const {\n        wrapRequestHandlerNode\n      } = require(\"../experimental/testmode/server\");\n      return wrapRequestHandlerNode(handler);\n    }\n    return handler;\n  }\n  makeRequestHandler() {\n    // This is just optimization to fire prepare as soon as possible\n    // It will be properly awaited later\n    void this.prepare();\n    const handler = super.getRequestHandler();\n    return (req, res, parsedUrl) => {\n      var _this_nextConfig_experimental_logging, _this_nextConfig_experimental_logging1;\n      const normalizedReq = this.normalizeReq(req);\n      const normalizedRes = this.normalizeRes(res);\n      const enabledVerboseLogging = ((_this_nextConfig_experimental_logging = this.nextConfig.experimental.logging) == null ? void 0 : _this_nextConfig_experimental_logging.level) === \"verbose\";\n      const shouldTruncateUrl = !((_this_nextConfig_experimental_logging1 = this.nextConfig.experimental.logging) == null ? void 0 : _this_nextConfig_experimental_logging1.fullUrl);\n      if (this.renderOpts.dev) {\n        const chalk = require(\"next/dist/compiled/chalk\");\n        const _req = req;\n        const _res = res;\n        const origReq = \"originalRequest\" in _req ? _req.originalRequest : _req;\n        const origRes = \"originalResponse\" in _res ? _res.originalResponse : _res;\n        const reqStart = Date.now();\n        const reqCallback = () => {\n          // if we already logged in a render worker\n          // don't log again in the router worker.\n          // we also don't log for middleware alone\n          if (normalizedReq.didInvokePath || origReq.headers[\"x-middleware-invoke\"]) {\n            return;\n          }\n          const reqEnd = Date.now();\n          const fetchMetrics = normalizedReq.fetchMetrics || [];\n          const reqDuration = reqEnd - reqStart;\n          const getDurationStr = duration => {\n            let durationStr = duration.toString();\n            if (duration < 500) {\n              durationStr = chalk.green(duration + \"ms\");\n            } else if (duration < 2000) {\n              durationStr = chalk.yellow(duration + \"ms\");\n            } else {\n              durationStr = chalk.red(duration + \"ms\");\n            }\n            return durationStr;\n          };\n          if (Array.isArray(fetchMetrics) && fetchMetrics.length) {\n            if (enabledVerboseLogging) {\n              writeStdoutLine(`${chalk.white.bold(req.method || \"GET\")} ${req.url} ${res.statusCode} in ${getDurationStr(reqDuration)}`);\n            }\n            const calcNestedLevel = (prevMetrics, start) => {\n              let nestedLevel = 0;\n              for (let i = 0; i < prevMetrics.length; i++) {\n                const metric = prevMetrics[i];\n                const prevMetric = prevMetrics[i - 1];\n                if (metric.end <= start && !(prevMetric && prevMetric.start < metric.end)) {\n                  nestedLevel += 1;\n                }\n              }\n              return `${\"  │ \".repeat(nestedLevel)}`;\n            };\n            for (let i = 0; i < fetchMetrics.length; i++) {\n              const metric = fetchMetrics[i];\n              let {\n                cacheStatus,\n                cacheReason\n              } = metric;\n              let cacheReasonStr = \"\";\n              const duration = metric.end - metric.start;\n              if (cacheStatus === \"hit\") {\n                cacheStatus = chalk.green(\"HIT\");\n              } else if (cacheStatus === \"skip\") {\n                cacheStatus = `${chalk.yellow(\"SKIP\")}`;\n                cacheReasonStr = `${chalk.grey(`Cache missed reason: (${chalk.white(cacheReason)})`)}`;\n              } else {\n                cacheStatus = chalk.yellow(\"MISS\");\n              }\n              let url = metric.url;\n              if (url.length > 48) {\n                const parsed = new URL(url);\n                const truncatedHost = formatRequestUrl(parsed.host, shouldTruncateUrl ? 16 : undefined);\n                const truncatedPath = formatRequestUrl(parsed.pathname, shouldTruncateUrl ? 24 : undefined);\n                const truncatedSearch = formatRequestUrl(parsed.search, shouldTruncateUrl ? 16 : undefined);\n                url = parsed.protocol + \"//\" + truncatedHost + truncatedPath + truncatedSearch;\n              }\n              if (enabledVerboseLogging) {\n                const newLineLeadingChar = \"│\";\n                const nestedIndent = calcNestedLevel(fetchMetrics.slice(0, i), metric.start);\n                writeStdoutLine(`${`${newLineLeadingChar}${nestedIndent}${i === 0 ? \" \" : \"\"}${chalk.white.bold(metric.method)} ${chalk.grey(url)} ${metric.status} in ${getDurationStr(duration)} (cache: ${cacheStatus})`}`);\n                if (cacheReasonStr) {\n                  const nextNestedIndent = calcNestedLevel(fetchMetrics.slice(0, i + 1), metric.start);\n                  writeStdoutLine(newLineLeadingChar + nextNestedIndent + (i > 0 ? \" \" : \"  \") + newLineLeadingChar + \"  \" + cacheReasonStr);\n                }\n              }\n            }\n          } else {\n            if (enabledVerboseLogging) {\n              writeStdoutLine(`${chalk.white.bold(req.method || \"GET\")} ${req.url} ${res.statusCode} in ${getDurationStr(reqDuration)}`);\n            }\n          }\n          origRes.off(\"close\", reqCallback);\n        };\n        origRes.on(\"close\", reqCallback);\n      }\n      return handler(normalizedReq, normalizedRes, parsedUrl);\n    };\n  }\n  async revalidate({\n    urlPath,\n    revalidateHeaders,\n    opts\n  }) {\n    const mocked = (0, _mockrequest.createRequestResponseMocks)({\n      url: urlPath,\n      headers: revalidateHeaders\n    });\n    const handler = this.getRequestHandler();\n    await handler(new _node.NodeNextRequest(mocked.req), new _node.NodeNextResponse(mocked.res));\n    await mocked.res.hasStreamed;\n    if (mocked.res.getHeader(\"x-nextjs-cache\") !== \"REVALIDATED\" && !(mocked.res.statusCode === 404 && opts.unstable_onlyGenerated)) {\n      throw new Error(`Invalid response ${mocked.res.statusCode}`);\n    }\n  }\n  async render(req, res, pathname, query, parsedUrl, internal = false) {\n    return super.render(this.normalizeReq(req), this.normalizeRes(res), pathname, query, parsedUrl, internal);\n  }\n  async renderToHTML(req, res, pathname, query) {\n    return super.renderToHTML(this.normalizeReq(req), this.normalizeRes(res), pathname, query);\n  }\n  async renderErrorToResponseImpl(ctx, err) {\n    const {\n      req,\n      res,\n      query\n    } = ctx;\n    const is404 = res.statusCode === 404;\n    if (is404 && this.hasAppDir && this.isRenderWorker) {\n      const notFoundPathname = this.renderOpts.dev ? \"/not-found\" : \"/_not-found\";\n      if (this.renderOpts.dev) {\n        await this.ensurePage({\n          page: notFoundPathname,\n          clientOnly: false\n        }).catch(() => {});\n      }\n      if (this.getEdgeFunctionsPages().includes(notFoundPathname)) {\n        await this.runEdgeFunction({\n          req: req,\n          res: res,\n          query: query || {},\n          params: {},\n          page: notFoundPathname,\n          appPaths: null\n        });\n        return null;\n      }\n    }\n    return super.renderErrorToResponseImpl(ctx, err);\n  }\n  async renderError(err, req, res, pathname, query, setHeaders) {\n    return super.renderError(err, this.normalizeReq(req), this.normalizeRes(res), pathname, query, setHeaders);\n  }\n  async renderErrorToHTML(err, req, res, pathname, query) {\n    return super.renderErrorToHTML(err, this.normalizeReq(req), this.normalizeRes(res), pathname, query);\n  }\n  async render404(req, res, parsedUrl, setHeaders) {\n    return super.render404(this.normalizeReq(req), this.normalizeRes(res), parsedUrl, setHeaders);\n  }\n  getMiddlewareManifest() {\n    if (this.minimalMode) return null;\n    const manifest = require(this.middlewareManifestPath);\n    return manifest;\n  }\n  /** Returns the middleware routing item if there is one. */\n  getMiddleware() {\n    var _manifest_middleware;\n    const manifest = this.getMiddlewareManifest();\n    const middleware = manifest == null ? void 0 : (_manifest_middleware = manifest.middleware) == null ? void 0 : _manifest_middleware[\"/\"];\n    if (!middleware) {\n      return;\n    }\n    return {\n      match: getMiddlewareMatcher(middleware),\n      page: \"/\"\n    };\n  }\n  getEdgeFunctionsPages() {\n    const manifest = this.getMiddlewareManifest();\n    if (!manifest) {\n      return [];\n    }\n    return Object.keys(manifest.functions);\n  }\n  /**\n  * Get information for the edge function located in the provided page\n  * folder. If the edge function info can't be found it will throw\n  * an error.\n  */\n  getEdgeFunctionInfo(params) {\n    const manifest = this.getMiddlewareManifest();\n    if (!manifest) {\n      return null;\n    }\n    let foundPage;\n    try {\n      foundPage = (0, _denormalizepagepath.denormalizePagePath)((0, _normalizepagepath.normalizePagePath)(params.page));\n    } catch (err) {\n      return null;\n    }\n    let pageInfo = params.middleware ? manifest.middleware[foundPage] : manifest.functions[foundPage];\n    if (!pageInfo) {\n      if (!params.middleware) {\n        throw new _utils.PageNotFoundError(foundPage);\n      }\n      return null;\n    }\n    return {\n      name: pageInfo.name,\n      paths: pageInfo.files.map(file => (0, _path.join)(this.distDir, file)),\n      wasm: (pageInfo.wasm ?? []).map(binding => ({\n        ...binding,\n        filePath: (0, _path.join)(this.distDir, binding.filePath)\n      })),\n      assets: (pageInfo.assets ?? []).map(binding => {\n        return {\n          ...binding,\n          filePath: (0, _path.join)(this.distDir, binding.filePath)\n        };\n      })\n    };\n  }\n  /**\n  * Checks if a middleware exists. This method is useful for the development\n  * server where we need to check the filesystem. Here we just check the\n  * middleware manifest.\n  */\n  async hasMiddleware(pathname) {\n    const info = this.getEdgeFunctionInfo({\n      page: pathname,\n      middleware: true\n    });\n    return Boolean(info && info.paths.length > 0);\n  }\n  /**\n  * A placeholder for a function to be defined in the development server.\n  * It will make sure that the root middleware or an edge function has been compiled\n  * so that we can run it.\n  */\n  async ensureMiddleware() {}\n  async ensureEdgeFunction(_params) {}\n  /**\n  * This method gets all middleware matchers and execute them when the request\n  * matches. It will make sure that each middleware exists and is compiled and\n  * ready to be invoked. The development server will decorate it to add warns\n  * and errors with rich traces.\n  */\n  async runMiddleware(params) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\"invariant: runMiddleware should not be called in minimal mode\");\n    }\n    // Middleware is skipped for on-demand revalidate requests\n    if ((0, _apiutils.checkIsOnDemandRevalidate)(params.request, this.renderOpts.previewProps).isOnDemandRevalidate) {\n      return {\n        response: new Response(null, {\n          headers: {\n            \"x-middleware-next\": \"1\"\n          }\n        })\n      };\n    }\n    let url;\n    if (this.nextConfig.skipMiddlewareUrlNormalize) {\n      url = (0, _requestmeta.getRequestMeta)(params.request, \"__NEXT_INIT_URL\");\n    } else {\n      // For middleware to \"fetch\" we must always provide an absolute URL\n      const query = (0, _querystring.urlQueryToSearchParams)(params.parsed.query).toString();\n      const locale = params.parsed.query.__nextLocale;\n      url = `${(0, _requestmeta.getRequestMeta)(params.request, \"_protocol\")}://${this.fetchHostname || \"localhost\"}:${this.port}${locale ? `/${locale}` : \"\"}${params.parsed.pathname}${query ? `?${query}` : \"\"}`;\n    }\n    if (!url.startsWith(\"http\")) {\n      throw new Error(\"To use middleware you must provide a `hostname` and `port` to the Next.js Server\");\n    }\n    const page = {};\n    const middleware = this.getMiddleware();\n    if (!middleware) {\n      return {\n        finished: false\n      };\n    }\n    if (!(await this.hasMiddleware(middleware.page))) {\n      return {\n        finished: false\n      };\n    }\n    await this.ensureMiddleware();\n    const middlewareInfo = this.getEdgeFunctionInfo({\n      page: middleware.page,\n      middleware: true\n    });\n    if (!middlewareInfo) {\n      throw new _utils.MiddlewareNotFoundError();\n    }\n    const method = (params.request.method || \"GET\").toUpperCase();\n    const {\n      run\n    } = require(\"./web/sandbox\");\n    const result = await run({\n      distDir: this.distDir,\n      name: middlewareInfo.name,\n      paths: middlewareInfo.paths,\n      edgeFunctionEntry: middlewareInfo,\n      request: {\n        headers: params.request.headers,\n        method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash\n        },\n        url: url,\n        page,\n        body: (0, _requestmeta.getRequestMeta)(params.request, \"__NEXT_CLONABLE_BODY\"),\n        signal: (0, _nextrequest.signalFromNodeResponse)(params.response.originalResponse)\n      },\n      useCache: true,\n      onWarning: params.onWarning\n    });\n    if (!this.renderOpts.dev) {\n      result.waitUntil.catch(error => {\n        console.error(`Uncaught: middleware waitUntil errored`, error);\n      });\n    }\n    if (!result) {\n      this.render404(params.request, params.response, params.parsed);\n      return {\n        finished: true\n      };\n    }\n    for (let [key, value] of result.response.headers) {\n      if (key.toLowerCase() !== \"set-cookie\") continue;\n      // Clear existing header.\n      result.response.headers.delete(key);\n      // Append each cookie individually.\n      const cookies = (0, _utils1.splitCookiesString)(value);\n      for (const cookie of cookies) {\n        result.response.headers.append(key, cookie);\n      }\n      // Add cookies to request meta.\n      (0, _requestmeta.addRequestMeta)(params.request, \"_nextMiddlewareCookie\", cookies);\n    }\n    return result;\n  }\n  async handleCatchallMiddlewareRequest(req, res, parsed) {\n    const isMiddlewareInvoke = this.isRenderWorker && req.headers[\"x-middleware-invoke\"];\n    const handleFinished = (finished = false) => {\n      if (isMiddlewareInvoke && !finished) {\n        res.setHeader(\"x-middleware-invoke\", \"1\");\n        res.body(\"\").send();\n        return {\n          finished: true\n        };\n      }\n      return {\n        finished\n      };\n    };\n    if (this.isRenderWorker && !isMiddlewareInvoke) {\n      return {\n        finished: false\n      };\n    }\n    const middleware = this.getMiddleware();\n    if (!middleware) {\n      return handleFinished();\n    }\n    const initUrl = (0, _requestmeta.getRequestMeta)(req, \"__NEXT_INIT_URL\");\n    const parsedUrl = (0, _parseurl.parseUrl)(initUrl);\n    const pathnameInfo = (0, _getnextpathnameinfo.getNextPathnameInfo)(parsedUrl.pathname, {\n      nextConfig: this.nextConfig,\n      i18nProvider: this.i18nProvider\n    });\n    parsedUrl.pathname = pathnameInfo.pathname;\n    const normalizedPathname = (0, _removetrailingslash.removeTrailingSlash)(parsed.pathname || \"\");\n    if (!middleware.match(normalizedPathname, req, parsedUrl.query)) {\n      return handleFinished();\n    }\n    let result;\n    let bubblingResult = false;\n    for (const key of _constants.INTERNAL_HEADERS) {\n      delete req.headers[key];\n    }\n    // Strip the internal headers.\n    this.stripInternalHeaders(req);\n    try {\n      await this.ensureMiddleware();\n      result = await this.runMiddleware({\n        request: req,\n        response: res,\n        parsedUrl: parsedUrl,\n        parsed: parsed\n      });\n      if (\"response\" in result) {\n        if (isMiddlewareInvoke) {\n          bubblingResult = true;\n          const err = new Error();\n          err.result = result;\n          err.bubble = true;\n          throw err;\n        }\n        for (const [key, value] of Object.entries((0, _utils1.toNodeOutgoingHttpHeaders)(result.response.headers))) {\n          if (key !== \"content-encoding\" && value !== undefined) {\n            res.setHeader(key, value);\n          }\n        }\n        res.statusCode = result.response.status;\n        const {\n          originalResponse\n        } = res;\n        if (result.response.body) {\n          await (0, _pipereadable.pipeReadable)(result.response.body, originalResponse);\n        } else {\n          originalResponse.end();\n        }\n        return {\n          finished: true\n        };\n      }\n    } catch (err) {\n      if (bubblingResult) {\n        throw err;\n      }\n      if ((0, _iserror.default)(err) && err.code === \"ENOENT\") {\n        await this.render404(req, res, parsed);\n        return {\n          finished: true\n        };\n      }\n      if (err instanceof _utils.DecodeError) {\n        res.statusCode = 400;\n        await this.renderError(err, req, res, parsed.pathname || \"\");\n        return {\n          finished: true\n        };\n      }\n      const error = (0, _iserror.getProperError)(err);\n      console.error(error);\n      res.statusCode = 500;\n      await this.renderError(error, req, res, parsed.pathname || \"\");\n      return {\n        finished: true\n      };\n    }\n    if (\"finished\" in result) {\n      return result;\n    }\n    return {\n      finished: false\n    };\n  }\n  getPrerenderManifest() {\n    var _this_renderOpts, _this_serverOptions, _this_renderWorkerOpts;\n    if (this._cachedPreviewManifest) {\n      return this._cachedPreviewManifest;\n    }\n    if (((_this_renderOpts = this.renderOpts) == null ? void 0 : _this_renderOpts.dev) || ((_this_serverOptions = this.serverOptions) == null ? void 0 : _this_serverOptions.dev) || ((_this_renderWorkerOpts = this.renderWorkerOpts) == null ? void 0 : _this_renderWorkerOpts.dev) || process.env.NODE_ENV === \"development\" || process.env.NEXT_PHASE === _constants.PHASE_PRODUCTION_BUILD) {\n      this._cachedPreviewManifest = {\n        version: 4,\n        routes: {},\n        dynamicRoutes: {},\n        notFoundRoutes: [],\n        preview: {\n          previewModeId: require(\"crypto\").randomBytes(16).toString(\"hex\"),\n          previewModeSigningKey: require(\"crypto\").randomBytes(32).toString(\"hex\"),\n          previewModeEncryptionKey: require(\"crypto\").randomBytes(32).toString(\"hex\")\n        }\n      };\n      return this._cachedPreviewManifest;\n    }\n    const manifest = (0, _loadmanifest.loadManifest)((0, _path.join)(this.distDir, _constants.PRERENDER_MANIFEST));\n    return this._cachedPreviewManifest = manifest;\n  }\n  getRoutesManifest() {\n    return (0, _tracer.getTracer)().trace(_constants2.NextNodeServerSpan.getRoutesManifest, () => {\n      const manifest = (0, _loadmanifest.loadManifest)((0, _path.join)(this.distDir, _constants.ROUTES_MANIFEST));\n      let rewrites = manifest.rewrites ?? {\n        beforeFiles: [],\n        afterFiles: [],\n        fallback: []\n      };\n      if (Array.isArray(rewrites)) {\n        rewrites = {\n          beforeFiles: [],\n          afterFiles: rewrites,\n          fallback: []\n        };\n      }\n      return {\n        ...manifest,\n        rewrites\n      };\n    });\n  }\n  attachRequestMeta(req, parsedUrl, isUpgradeReq) {\n    var _this, _req_originalRequest, _req_headers_xforwardedproto;\n    const protocol = ((_this = (_req_originalRequest = req.originalRequest) == null ? void 0 : _req_originalRequest.socket) == null ? void 0 : _this.encrypted) || ((_req_headers_xforwardedproto = req.headers[\"x-forwarded-proto\"]) == null ? void 0 : _req_headers_xforwardedproto.includes(\"https\")) ? \"https\" : \"http\";\n    // When there are hostname and port we build an absolute URL\n    const initUrl = this.fetchHostname && this.port ? `${protocol}://${this.fetchHostname}:${this.port}${req.url}` : this.nextConfig.experimental.trustHostHeader ? `https://${req.headers.host || \"localhost\"}${req.url}` : req.url;\n    (0, _requestmeta.addRequestMeta)(req, \"__NEXT_INIT_URL\", initUrl);\n    (0, _requestmeta.addRequestMeta)(req, \"__NEXT_INIT_QUERY\", {\n      ...parsedUrl.query\n    });\n    (0, _requestmeta.addRequestMeta)(req, \"_protocol\", protocol);\n    if (!isUpgradeReq) {\n      (0, _requestmeta.addRequestMeta)(req, \"__NEXT_CLONABLE_BODY\", (0, _bodystreams.getCloneableBody)(req.body));\n    }\n  }\n  async runEdgeFunction(params) {\n    if (process.env.NEXT_MINIMAL) {\n      throw new Error(\"Middleware is not supported in minimal mode. Please remove the `NEXT_MINIMAL` environment variable.\");\n    }\n    let edgeInfo;\n    const {\n      query,\n      page,\n      match\n    } = params;\n    if (!match) await this.ensureEdgeFunction({\n      page,\n      appPaths: params.appPaths\n    });\n    edgeInfo = this.getEdgeFunctionInfo({\n      page,\n      middleware: false\n    });\n    if (!edgeInfo) {\n      return null;\n    }\n    // For edge to \"fetch\" we must always provide an absolute URL\n    const isDataReq = !!query.__nextDataReq;\n    const initialUrl = new URL((0, _requestmeta.getRequestMeta)(params.req, \"__NEXT_INIT_URL\") || \"/\", \"http://n\");\n    const queryString = (0, _querystring.urlQueryToSearchParams)({\n      ...Object.fromEntries(initialUrl.searchParams),\n      ...query,\n      ...params.params\n    }).toString();\n    if (isDataReq) {\n      params.req.headers[\"x-nextjs-data\"] = \"1\";\n    }\n    initialUrl.search = queryString;\n    const url = initialUrl.toString();\n    if (!url.startsWith(\"http\")) {\n      throw new Error(\"To use middleware you must provide a `hostname` and `port` to the Next.js Server\");\n    }\n    const {\n      run\n    } = require(\"./web/sandbox\");\n    const result = await run({\n      distDir: this.distDir,\n      name: edgeInfo.name,\n      paths: edgeInfo.paths,\n      edgeFunctionEntry: edgeInfo,\n      request: {\n        headers: params.req.headers,\n        method: params.req.method,\n        nextConfig: {\n          basePath: this.nextConfig.basePath,\n          i18n: this.nextConfig.i18n,\n          trailingSlash: this.nextConfig.trailingSlash\n        },\n        url,\n        page: {\n          name: params.page,\n          ...(params.params && {\n            params: params.params\n          })\n        },\n        body: (0, _requestmeta.getRequestMeta)(params.req, \"__NEXT_CLONABLE_BODY\"),\n        signal: (0, _nextrequest.signalFromNodeResponse)(params.res.originalResponse)\n      },\n      useCache: true,\n      onWarning: params.onWarning,\n      incrementalCache: globalThis.__incrementalCache || (0, _requestmeta.getRequestMeta)(params.req, \"_nextIncrementalCache\")\n    });\n    if (!params.res.statusCode || params.res.statusCode < 400) {\n      params.res.statusCode = result.response.status;\n      params.res.statusMessage = result.response.statusText;\n    }\n    // TODO: (wyattjoh) investigate improving this\n    result.response.headers.forEach((value, key) => {\n      // The append handling is special cased for `set-cookie`.\n      if (key.toLowerCase() === \"set-cookie\") {\n        // TODO: (wyattjoh) replace with native response iteration when we can upgrade undici\n        for (const cookie of (0, _utils1.splitCookiesString)(value)) {\n          params.res.appendHeader(key, cookie);\n        }\n      } else {\n        params.res.appendHeader(key, value);\n      }\n    });\n    const nodeResStream = params.res.originalResponse;\n    if (result.response.body) {\n      await (0, _pipereadable.pipeReadable)(result.response.body, nodeResStream);\n    } else {\n      nodeResStream.end();\n    }\n    return result;\n  }\n  get serverDistDir() {\n    if (this._serverDistDir) {\n      return this._serverDistDir;\n    }\n    const serverDistDir = (0, _path.join)(this.distDir, _constants.SERVER_DIRECTORY);\n    this._serverDistDir = serverDistDir;\n    return serverDistDir;\n  }\n  async getFallbackErrorComponents() {\n    // Not implemented for production use cases, this is implemented on the\n    // development server.\n    return null;\n  }\n}","map":{"version":3,"names":["NextNodeServer","exports","writeStdoutLine","text","process","stdout","write","formatRequestUrl","url","maxLength","undefined","length","substring","MiddlewareMatcherCache","WeakMap","getMiddlewareMatcher","info","stored","get","Array","isArray","matchers","Error","JSON","stringify","matcher","_middlewareroutematcher","getMiddlewareRouteMatcher","set","_baseserver","default","constructor","options","renderOpts","optimizeFonts","env","__NEXT_OPTIMIZE_FONTS","optimizeCss","__NEXT_OPTIMIZE_CSS","nextScriptWorkers","__NEXT_SCRIPT_WORKERS","nextConfig","experimental","deploymentId","NEXT_DEPLOYMENT_ID","minimalMode","imageResponseCache","_responsecache","appDocumentPreloading","isDefaultEnabled","dev","_loadcomponents","loadComponents","distDir","page","isAppPath","catch","dynamicRoutes","getRoutesManifest","map","r","regex","_routeregex","getRouteRegex","match","_routematcher","getRouteMatcher","re","_setuphttpagentenv","setHttpClientAndAgentOptions","serverOptions","experimentalTestProxy","interceptTestApis","require","middlewareManifestPath","_path","join","serverDistDir","_constants","MIDDLEWARE_MANIFEST","handleUpgrade","prepareImpl","instrumentationHook","resolve","dir","conf","_constants1","INSTRUMENTATION_HOOK_FILENAME","register","call","err","code","message","loadEnvConfig","forceReload","silent","_env","error","_log","getIncrementalCache","requestHeaders","requestProtocol","CacheHandler","incrementalCacheHandlerPath","isAbsolute","_incrementalcache","IncrementalCache","fs","getCacheFilesystem","appDir","hasAppDir","allowedRevalidateHeaderKeys","fetchCache","fetchCacheKeyPrefix","maxMemoryCacheSize","isrMemoryCacheSize","flushToDisk","isrFlushToDisk","getPrerenderManifest","CurCacheHandler","getResponseCache","getPublicDir","CLIENT_PUBLIC_FILES_PATH","getHasStaticDir","_fs","existsSync","getPagesManifest","_loadmanifest","loadManifest","PAGES_MANIFEST","getAppPathsManifest","APP_PATHS_MANIFEST","hasPage","pathname","_this_nextConfig_i18n","_require","getMaybePagePath","i18n","locales","getBuildId","buildIdFile","BUILD_ID_FILE","readFileSync","trim","getHasAppDir","Boolean","_findpagesdir","findDir","sendRenderResult","req","res","_sendpayload","originalRequest","originalResponse","runApi","query","edgeFunctionsPages","getEdgeFunctionsPages","edgeFunctionsPage","definition","handledAsEdgeFunction","runEdgeFunction","params","appPaths","module","_routemoduleloader","RouteModuleLoader","load","filename","__nextLocale","__nextDefaultLocale","__nextInferredLocaleFromDefault","render","previewProps","revalidate","bind","trustHostHeader","hostname","fetchHostname","renderHTML","_tracer","getTracer","trace","_constants2","NextNodeServerSpan","renderHTMLImpl","NEXT_MINIMAL","nextFontManifest","renderToHTMLOrFlight","appRenderToHTMLOrFlight","renderToHTML","imageOptimizer","paramsResult","newReq","newRes","newParsedUrl","isRenderWorker","invokeRes","_invokerequest","invokeRequest","_requestmeta","getRequestMeta","port","method","headers","signal","_nextrequest","signalFromNodeResponse","filteredResHeaders","_utils2","filterReqHeaders","_utils1","toNodeOutgoingHttpHeaders","ipcForbiddenHeaders","key","Object","keys","setHeader","statusCode","status","body","_pipereadable","pipeReadable","send","getRequestHandler","_node","NodeNextRequest","NodeNextResponse","getPagePath","renderPageComponent","ctx","bubbleNoFallback","getOriginalAppPaths","findPageComponents","spanName","attributes","_apppaths","normalizeAppPath","findPageComponentsImpl","pagePaths","amp","unshift","_normalizepagepath","normalizePagePath","path","pagePath","components","Component","startsWith","getStaticProps","__nextDataReq","_utils","PageNotFoundError","getFontManifest","requireFontManifest","getNextFontManifest","NEXT_FONT_MANIFEST","getFallback","cacheFs","html","readFile","toString","handleNextImageRequest","parsedUrl","output","finished","ImageOptimizerCache","imageOptimizerCache","getHash","sendResponse","ImageError","imagesConfig","images","loader","unoptimized","render404","validateParams","errorMessage","cacheKey","getCacheKey","_cacheEntry_value","getExtension","cacheEntry","buffer","contentType","maxAge","etag","value","kind","extension","incrementalCache","href","isStatic","isMiss","isStale","handleCatchallRenderRequest","_nextBubbleNoFallback","_this_i18nProvider","_removetrailingslash","removeTrailingSlash","i18nProvider","fromQuery","addRequestMeta","_approuterheaders","NEXT_RSC_UNION_QUERY","handled","_pagesapiroutematch","isPagesAPIRouteMatch","handleApiRequest","NoFallbackError","formatServerError","logErrorWithOriginalStack","logError","renderError","_err","_type","ensurePage","_opts","getPrefetchRsc","then","_nodefsmethods","nodeFs","normalizeReq","normalizeRes","handler","makeRequestHandler","wrapRequestHandlerNode","prepare","_this_nextConfig_experimental_logging","_this_nextConfig_experimental_logging1","normalizedReq","normalizedRes","enabledVerboseLogging","logging","level","shouldTruncateUrl","fullUrl","chalk","_req","_res","origReq","origRes","reqStart","Date","now","reqCallback","didInvokePath","reqEnd","fetchMetrics","reqDuration","getDurationStr","duration","durationStr","green","yellow","red","white","bold","calcNestedLevel","prevMetrics","start","nestedLevel","i","metric","prevMetric","end","repeat","cacheStatus","cacheReason","cacheReasonStr","grey","parsed","URL","truncatedHost","host","truncatedPath","truncatedSearch","search","protocol","newLineLeadingChar","nestedIndent","slice","nextNestedIndent","off","on","urlPath","revalidateHeaders","opts","mocked","_mockrequest","createRequestResponseMocks","hasStreamed","getHeader","unstable_onlyGenerated","internal","renderErrorToResponseImpl","is404","notFoundPathname","clientOnly","includes","setHeaders","renderErrorToHTML","getMiddlewareManifest","manifest","getMiddleware","_manifest_middleware","middleware","functions","getEdgeFunctionInfo","foundPage","_denormalizepagepath","denormalizePagePath","pageInfo","name","paths","files","file","wasm","binding","filePath","assets","hasMiddleware","ensureMiddleware","ensureEdgeFunction","_params","runMiddleware","_apiutils","checkIsOnDemandRevalidate","request","isOnDemandRevalidate","response","Response","skipMiddlewareUrlNormalize","_querystring","urlQueryToSearchParams","locale","middlewareInfo","MiddlewareNotFoundError","toUpperCase","run","result","edgeFunctionEntry","basePath","trailingSlash","useCache","onWarning","waitUntil","console","toLowerCase","delete","cookies","splitCookiesString","cookie","append","handleCatchallMiddlewareRequest","isMiddlewareInvoke","handleFinished","initUrl","_parseurl","parseUrl","pathnameInfo","_getnextpathnameinfo","getNextPathnameInfo","normalizedPathname","bubblingResult","INTERNAL_HEADERS","stripInternalHeaders","bubble","entries","_iserror","DecodeError","getProperError","_this_renderOpts","_this_serverOptions","_this_renderWorkerOpts","_cachedPreviewManifest","renderWorkerOpts","NODE_ENV","NEXT_PHASE","PHASE_PRODUCTION_BUILD","version","routes","notFoundRoutes","preview","previewModeId","randomBytes","previewModeSigningKey","previewModeEncryptionKey","PRERENDER_MANIFEST","ROUTES_MANIFEST","rewrites","beforeFiles","afterFiles","fallback","attachRequestMeta","isUpgradeReq","_this","_req_originalRequest","_req_headers_xforwardedproto","socket","encrypted","_bodystreams","getCloneableBody","edgeInfo","isDataReq","initialUrl","queryString","fromEntries","searchParams","globalThis","__incrementalCache","statusMessage","statusText","forEach","appendHeader","nodeResStream","_serverDistDir","SERVER_DIRECTORY","getFallbackErrorComponents"],"sources":["../../src/server/next-server.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}