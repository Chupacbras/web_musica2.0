{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"startTypeChecking\", {\n  enumerable: true,\n  get: function () {\n    return startTypeChecking;\n  }\n});\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"./output/log\"));\nconst _jestworker = require(\"next/dist/compiled/jest-worker\");\nconst _verifyAndLint = require(\"../lib/verifyAndLint\");\nconst _spinner = /*#__PURE__*/_interop_require_default(require(\"./spinner\"));\nconst _events = require(\"../telemetry/events\");\nconst _iserror = /*#__PURE__*/_interop_require_default(require(\"../lib/is-error\"));\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n/**\n * typescript will be loaded in \"next/lib/verifyTypeScriptSetup\" and\n * then passed to \"next/lib/typescript/runTypeCheck\" as a parameter.\n *\n * Since it is impossible to pass a function from main thread to a worker,\n * instead of running \"next/lib/typescript/runTypeCheck\" in a worker,\n * we will run entire \"next/lib/verifyTypeScriptSetup\" in a worker instead.\n */\nfunction verifyTypeScriptSetup(dir, distDir, intentDirs, typeCheckPreflight, tsconfigPath, disableStaticImages, cacheDir, enableWorkerThreads, hasAppDir, hasPagesDir) {\n  const typeCheckWorker = new _jestworker.Worker(require.resolve(\"../lib/verifyTypeScriptSetup\"), {\n    numWorkers: 1,\n    enableWorkerThreads,\n    maxRetries: 0\n  });\n  typeCheckWorker.getStdout().pipe(process.stdout);\n  typeCheckWorker.getStderr().pipe(process.stderr);\n  return typeCheckWorker.verifyTypeScriptSetup({\n    dir,\n    distDir,\n    intentDirs,\n    typeCheckPreflight,\n    tsconfigPath,\n    disableStaticImages,\n    cacheDir,\n    hasAppDir,\n    hasPagesDir\n  }).then(result => {\n    typeCheckWorker.end();\n    return result;\n  });\n}\nasync function startTypeChecking({\n  cacheDir,\n  config,\n  dir,\n  ignoreESLint,\n  nextBuildSpan,\n  pagesDir,\n  runLint,\n  shouldLint,\n  telemetry,\n  appDir\n}) {\n  const ignoreTypeScriptErrors = Boolean(config.typescript.ignoreBuildErrors);\n  const eslintCacheDir = _path.default.join(cacheDir, \"eslint/\");\n  if (ignoreTypeScriptErrors) {\n    _log.info(\"Skipping validation of types\");\n  }\n  if (runLint && ignoreESLint) {\n    // only print log when build require lint while ignoreESLint is enabled\n    _log.info(\"Skipping linting\");\n  }\n  let typeCheckingAndLintingSpinnerPrefixText;\n  let typeCheckingAndLintingSpinner;\n  if (!ignoreTypeScriptErrors && shouldLint) {\n    typeCheckingAndLintingSpinnerPrefixText = \"Linting and checking validity of types\";\n  } else if (!ignoreTypeScriptErrors) {\n    typeCheckingAndLintingSpinnerPrefixText = \"Checking validity of types\";\n  } else if (shouldLint) {\n    typeCheckingAndLintingSpinnerPrefixText = \"Linting\";\n  }\n  // we will not create a spinner if both ignoreTypeScriptErrors and ignoreESLint are\n  // enabled, but we will still verifying project's tsconfig and dependencies.\n  if (typeCheckingAndLintingSpinnerPrefixText) {\n    typeCheckingAndLintingSpinner = (0, _spinner.default)(typeCheckingAndLintingSpinnerPrefixText);\n  }\n  const typeCheckStart = process.hrtime();\n  try {\n    const [[verifyResult, typeCheckEnd]] = await Promise.all([nextBuildSpan.traceChild(\"verify-typescript-setup\").traceAsyncFn(() => verifyTypeScriptSetup(dir, config.distDir, [pagesDir, appDir].filter(Boolean), !ignoreTypeScriptErrors, config.typescript.tsconfigPath, config.images.disableStaticImages, cacheDir, config.experimental.workerThreads, !!appDir, !!pagesDir).then(resolved => {\n      const checkEnd = process.hrtime(typeCheckStart);\n      return [resolved, checkEnd];\n    })), shouldLint && nextBuildSpan.traceChild(\"verify-and-lint\").traceAsyncFn(async () => {\n      var _config_eslint;\n      await (0, _verifyAndLint.verifyAndLint)(dir, eslintCacheDir, (_config_eslint = config.eslint) == null ? void 0 : _config_eslint.dirs, config.experimental.workerThreads, telemetry);\n    })]);\n    typeCheckingAndLintingSpinner == null ? void 0 : typeCheckingAndLintingSpinner.stopAndPersist();\n    if (!ignoreTypeScriptErrors && verifyResult) {\n      var _verifyResult_result, _verifyResult_result1, _verifyResult_result2;\n      telemetry.record((0, _events.eventTypeCheckCompleted)({\n        durationInSeconds: typeCheckEnd[0],\n        typescriptVersion: verifyResult.version,\n        inputFilesCount: (_verifyResult_result = verifyResult.result) == null ? void 0 : _verifyResult_result.inputFilesCount,\n        totalFilesCount: (_verifyResult_result1 = verifyResult.result) == null ? void 0 : _verifyResult_result1.totalFilesCount,\n        incremental: (_verifyResult_result2 = verifyResult.result) == null ? void 0 : _verifyResult_result2.incremental\n      }));\n    }\n  } catch (err) {\n    // prevent showing jest-worker internal error as it\n    // isn't helpful for users and clutters output\n    if ((0, _iserror.default)(err) && err.message === \"Call retries were exceeded\") {\n      await telemetry.flush();\n      process.exit(1);\n    }\n    throw err;\n  }\n}","map":{"version":3,"names":["startTypeChecking","verifyTypeScriptSetup","dir","distDir","intentDirs","typeCheckPreflight","tsconfigPath","disableStaticImages","cacheDir","enableWorkerThreads","hasAppDir","hasPagesDir","typeCheckWorker","_jestworker","Worker","require","resolve","numWorkers","maxRetries","getStdout","pipe","process","stdout","getStderr","stderr","then","result","end","config","ignoreESLint","nextBuildSpan","pagesDir","runLint","shouldLint","telemetry","appDir","ignoreTypeScriptErrors","Boolean","typescript","ignoreBuildErrors","eslintCacheDir","_path","default","join","_log","info","typeCheckingAndLintingSpinnerPrefixText","typeCheckingAndLintingSpinner","_spinner","typeCheckStart","hrtime","verifyResult","typeCheckEnd","Promise","all","traceChild","traceAsyncFn","filter","images","experimental","workerThreads","resolved","checkEnd","_config_eslint","_verifyAndLint","verifyAndLint","eslint","dirs","stopAndPersist","_verifyResult_result","_verifyResult_result1","_verifyResult_result2","record","_events","eventTypeCheckCompleted","durationInSeconds","typescriptVersion","version","inputFilesCount","totalFilesCount","incremental","err","_iserror","message","flush","exit"],"sources":["../../src/build/type-check.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}