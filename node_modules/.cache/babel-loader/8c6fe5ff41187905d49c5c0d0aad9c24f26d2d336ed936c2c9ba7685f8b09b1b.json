{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst _findup = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/find-up\"));\nconst _promises = /*#__PURE__*/_interop_require_default(require(\"fs/promises\"));\nconst _child_process = /*#__PURE__*/_interop_require_default(require(\"child_process\"));\nconst _assert = /*#__PURE__*/_interop_require_default(require(\"assert\"));\nconst _nodefetch = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/node-fetch\"));\nconst _os = /*#__PURE__*/_interop_require_default(require(\"os\"));\nconst _readline = require(\"readline\");\nconst _fs = require(\"fs\");\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nconst _storage = require(\"../telemetry/storage\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n// Predefined set of the event names to be included in the trace.\n// If the trace span's name matches to one of the event names in the set,\n// it'll up uploaded to the trace server.\nconst EVENT_FILTER = new Set([\"client-hmr-latency\", \"hot-reloader\", \"webpack-invalid-client\", \"webpack-invalidated-server\", \"navigation-to-hydration\"]);\nconst {\n  NEXT_TRACE_UPLOAD_DEBUG,\n  // An external env to allow to upload full trace without picking up the relavant spans.\n  // This is mainly for the debugging purpose, to allwo manual audit for full trace for the given build.\n  // [NOTE] This may fail if build is large and generated trace is excessively large.\n  NEXT_TRACE_UPLOAD_FULL\n} = process.env;\nconst isDebugEnabled = !!NEXT_TRACE_UPLOAD_DEBUG || !!NEXT_TRACE_UPLOAD_FULL;\nconst shouldUploadFullTrace = !!NEXT_TRACE_UPLOAD_FULL;\nconst [,, traceUploadUrl, mode, _isTurboSession, projectDir, distDir] = process.argv;\nconst isTurboSession = _isTurboSession === \"true\";\n(async function upload() {\n  const nextVersion = JSON.parse(await _promises.default.readFile(_path.default.resolve(__dirname, \"../../package.json\"), \"utf8\")).version;\n  const telemetry = new _storage.Telemetry({\n    distDir\n  });\n  const projectPkgJsonPath = await (0, _findup.default)(\"package.json\");\n  (0, _assert.default)(projectPkgJsonPath);\n  const projectPkgJson = JSON.parse(await _promises.default.readFile(projectPkgJsonPath, \"utf-8\"));\n  const pkgName = projectPkgJson.name;\n  const commit = _child_process.default.spawnSync(_os.default.platform() === \"win32\" ? \"git.exe\" : \"git\", [\"rev-parse\", \"HEAD\"], {\n    shell: true\n  }).stdout.toString().trimEnd();\n  const readLineInterface = (0, _readline.createInterface)({\n    input: (0, _fs.createReadStream)(_path.default.join(projectDir, distDir, \"trace\")),\n    crlfDelay: Infinity\n  });\n  const traces = new Map();\n  for await (const line of readLineInterface) {\n    const lineEvents = JSON.parse(line);\n    for (const event of lineEvents) {\n      if (\n      // Always include root spans\n      event.parentId === undefined || shouldUploadFullTrace || EVENT_FILTER.has(event.name)) {\n        if (typeof event.tags.trigger === \"string\" && _path.default.isAbsolute(event.tags.trigger)) {\n          event.tags.trigger = \"[project]/\" + _path.default.relative(projectDir, event.tags.trigger).replaceAll(_path.default.sep, \"/\");\n        }\n        let trace = traces.get(event.traceId);\n        if (trace === undefined) {\n          trace = [];\n          traces.set(event.traceId, trace);\n        }\n        trace.push(event);\n      }\n    }\n  }\n  const body = {\n    metadata: {\n      anonymousId: telemetry.anonymousId,\n      arch: _os.default.arch(),\n      commit,\n      cpus: _os.default.cpus().length,\n      isTurboSession,\n      mode,\n      nextVersion,\n      pkgName,\n      platform: _os.default.platform(),\n      sessionId: telemetry.sessionId\n    },\n    traces: [...traces.values()]\n  };\n  if (isDebugEnabled) {\n    console.log(\"Sending request with body\", JSON.stringify(body, null, 2));\n  }\n  let res = await (0, _nodefetch.default)(traceUploadUrl, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      \"x-trace-transfer-mode\": shouldUploadFullTrace ? \"full\" : \"default\"\n    },\n    body: JSON.stringify(body)\n  });\n  if (isDebugEnabled) {\n    console.log(\"Received response\", res.status, await res.json());\n  }\n})();","map":{"version":3,"names":["EVENT_FILTER","Set","NEXT_TRACE_UPLOAD_DEBUG","NEXT_TRACE_UPLOAD_FULL","process","env","isDebugEnabled","shouldUploadFullTrace","traceUploadUrl","mode","_isTurboSession","projectDir","distDir","argv","isTurboSession","upload","nextVersion","JSON","parse","_promises","default","readFile","_path","resolve","__dirname","version","telemetry","_storage","Telemetry","projectPkgJsonPath","_findup","_assert","projectPkgJson","pkgName","name","commit","_child_process","spawnSync","_os","platform","shell","stdout","toString","trimEnd","readLineInterface","_readline","createInterface","input","_fs","createReadStream","join","crlfDelay","Infinity","traces","Map","line","lineEvents","event","parentId","undefined","has","tags","trigger","isAbsolute","relative","replaceAll","sep","trace","get","traceId","set","push","body","metadata","anonymousId","arch","cpus","length","sessionId","values","console","log","stringify","res","_nodefetch","method","headers","status","json"],"sources":["../../src/trace/trace-uploader.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}