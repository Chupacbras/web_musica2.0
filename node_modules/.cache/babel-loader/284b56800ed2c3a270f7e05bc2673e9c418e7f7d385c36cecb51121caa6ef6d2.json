{"ast":null,"code":"'use strict';\n\n/*global ActiveXObject:true*/\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar buildUrl = require('./../helpers/buildUrl');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar transformData = require('./../helpers/transformData');\nmodule.exports = function xhrAdapter(resolve, reject, config) {\n  // Transform request data\n  var data = transformData(config.data, config.headers, config.transformRequest);\n\n  // Merge headers\n  var requestHeaders = utils.merge(defaults.headers.common, defaults.headers[config.method] || {}, config.headers || {});\n  if (utils.isFormData(data)) {\n    delete requestHeaders['Content-Type']; // Let the browser set it\n  }\n\n  // Create the request\n  var request = new (XMLHttpRequest || ActiveXObject)('Microsoft.XMLHTTP');\n  request.open(config.method.toUpperCase(), buildUrl(config.url, config.params), true);\n\n  // Set the request timeout in MS\n  request.timeout = config.timeout;\n\n  // Listen for ready state\n  request.onreadystatechange = function () {\n    if (request && request.readyState === 4) {\n      // Prepare the response\n      var responseHeaders = parseHeaders(request.getAllResponseHeaders());\n      var responseData = ['text', ''].indexOf(config.responseType || '') !== -1 ? request.responseText : request.response;\n      var response = {\n        data: transformData(responseData, responseHeaders, config.transformResponse),\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config\n      };\n\n      // Resolve or reject the Promise based on the status\n      (request.status >= 200 && request.status < 300 ? resolve : reject)(response);\n\n      // Clean up request\n      request = null;\n    }\n  };\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n  if (utils.isStandardBrowserEnv()) {\n    var cookies = require('./../helpers/cookies');\n    var urlIsSameOrigin = require('./../helpers/urlIsSameOrigin');\n\n    // Add xsrf header\n    var xsrfValue = urlIsSameOrigin(config.url) ? cookies.read(config.xsrfCookieName || defaults.xsrfCookieName) : undefined;\n    if (xsrfValue) {\n      requestHeaders[config.xsrfHeaderName || defaults.xsrfHeaderName] = xsrfValue;\n    }\n  }\n\n  // Add headers to the request\n  utils.forEach(requestHeaders, function (val, key) {\n    // Remove Content-Type if data is undefined\n    if (!data && key.toLowerCase() === 'content-type') {\n      delete requestHeaders[key];\n    }\n    // Otherwise add header to the request\n    else {\n      request.setRequestHeader(key, val);\n    }\n  });\n\n  // Add withCredentials to request if needed\n  if (config.withCredentials) {\n    request.withCredentials = true;\n  }\n\n  // Add responseType to request if needed\n  if (config.responseType) {\n    try {\n      request.responseType = config.responseType;\n    } catch (e) {\n      if (request.responseType !== 'json') {\n        throw e;\n      }\n    }\n  }\n  if (utils.isArrayBuffer(data)) {\n    data = new DataView(data);\n  }\n\n  // Send the request\n  request.send(data);\n};","map":{"version":3,"names":["defaults","require","utils","buildUrl","parseHeaders","transformData","module","exports","xhrAdapter","resolve","reject","config","data","headers","transformRequest","requestHeaders","merge","common","method","isFormData","request","XMLHttpRequest","ActiveXObject","open","toUpperCase","url","params","timeout","onreadystatechange","readyState","responseHeaders","getAllResponseHeaders","responseData","indexOf","responseType","responseText","response","transformResponse","status","statusText","isStandardBrowserEnv","cookies","urlIsSameOrigin","xsrfValue","read","xsrfCookieName","undefined","xsrfHeaderName","forEach","val","key","toLowerCase","setRequestHeader","withCredentials","e","isArrayBuffer","DataView","send"],"sources":["C:/Users/Merche/Documents/GitHub/web_musica/node_modules/axios/lib/adapters/xhr.js"],"sourcesContent":["'use strict';\n\n/*global ActiveXObject:true*/\n\nvar defaults = require('./../defaults');\nvar utils = require('./../utils');\nvar buildUrl = require('./../helpers/buildUrl');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar transformData = require('./../helpers/transformData');\n\nmodule.exports = function xhrAdapter(resolve, reject, config) {\n  // Transform request data\n  var data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Merge headers\n  var requestHeaders = utils.merge(\n    defaults.headers.common,\n    defaults.headers[config.method] || {},\n    config.headers || {}\n  );\n\n  if (utils.isFormData(data)) {\n    delete requestHeaders['Content-Type']; // Let the browser set it\n  }\n\n  // Create the request\n  var request = new (XMLHttpRequest || ActiveXObject)('Microsoft.XMLHTTP');\n  request.open(config.method.toUpperCase(), buildUrl(config.url, config.params), true);\n\n  // Set the request timeout in MS\n  request.timeout = config.timeout;\n\n  // Listen for ready state\n  request.onreadystatechange = function () {\n    if (request && request.readyState === 4) {\n      // Prepare the response\n      var responseHeaders = parseHeaders(request.getAllResponseHeaders());\n      var responseData = ['text', ''].indexOf(config.responseType || '') !== -1 ? request.responseText : request.response;\n      var response = {\n        data: transformData(\n          responseData,\n          responseHeaders,\n          config.transformResponse\n        ),\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config\n      };\n\n      // Resolve or reject the Promise based on the status\n      (request.status >= 200 && request.status < 300 ?\n        resolve :\n        reject)(response);\n\n      // Clean up request\n      request = null;\n    }\n  };\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n  if (utils.isStandardBrowserEnv()) {\n    var cookies = require('./../helpers/cookies');\n    var urlIsSameOrigin = require('./../helpers/urlIsSameOrigin');\n\n    // Add xsrf header\n    var xsrfValue = urlIsSameOrigin(config.url) ?\n        cookies.read(config.xsrfCookieName || defaults.xsrfCookieName) :\n        undefined;\n\n    if (xsrfValue) {\n      requestHeaders[config.xsrfHeaderName || defaults.xsrfHeaderName] = xsrfValue;\n    }\n  }\n\n  // Add headers to the request\n  utils.forEach(requestHeaders, function (val, key) {\n    // Remove Content-Type if data is undefined\n    if (!data && key.toLowerCase() === 'content-type') {\n      delete requestHeaders[key];\n    }\n    // Otherwise add header to the request\n    else {\n      request.setRequestHeader(key, val);\n    }\n  });\n\n  // Add withCredentials to request if needed\n  if (config.withCredentials) {\n    request.withCredentials = true;\n  }\n\n  // Add responseType to request if needed\n  if (config.responseType) {\n    try {\n      request.responseType = config.responseType;\n    } catch (e) {\n      if (request.responseType !== 'json') {\n        throw e;\n      }\n    }\n  }\n\n  if (utils.isArrayBuffer(data)) {\n    data = new DataView(data);\n  }\n\n  // Send the request\n  request.send(data);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}