{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"AbsoluteFilenameNormalizer\", {\n  enumerable: true,\n  get: function () {\n    return AbsoluteFilenameNormalizer;\n  }\n});\nconst _absolutepathtopage = require(\"../../../shared/lib/page-path/absolute-path-to-page\");\nclass AbsoluteFilenameNormalizer {\n  /**\n  *\n  * @param dir the directory for which the files should be made relative to\n  * @param extensions the extensions the file could have\n  * @param keepIndex when `true` the trailing `/index` is _not_ removed\n  */\n  constructor(dir, extensions, pagesType) {\n    this.dir = dir;\n    this.extensions = extensions;\n    this.pagesType = pagesType;\n  }\n  normalize(filename) {\n    return (0, _absolutepathtopage.absolutePathToPage)(filename, {\n      extensions: this.extensions,\n      keepIndex: false,\n      dir: this.dir,\n      pagesType: this.pagesType\n    });\n  }\n}","map":{"version":3,"names":["AbsoluteFilenameNormalizer","constructor","dir","extensions","pagesType","normalize","filename","_absolutepathtopage","absolutePathToPage","keepIndex"],"sources":["../../../../src/server/future/normalizers/absolute-filename-normalizer.ts"],"sourcesContent":[null],"mappings":";;;;;+BAOa;;;WAAAA,0BAAA;;;oCAPsB;AAO5B,MAAMA,0BAAA;EACX;;;;;;EAMAC,YACmBC,GAAA,EACAC,UAAA,EACAC,SAAA,EACjB;eAHiBF,GAAA;sBACAC,UAAA;qBACAC,SAAA;EAChB;EAEIC,UAAUC,QAAgB,EAAU;IACzC,OAAO,IAAAC,mBAAA,CAAAC,kBAAkB,EAACF,QAAA,EAAU;MAClCH,UAAA,EAAY,IAAI,CAACA,UAAU;MAC3BM,SAAA,EAAW;MACXP,GAAA,EAAK,IAAI,CAACA,GAAG;MACbE,SAAA,EAAW,IAAI,CAACA;IAClB;EACF;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}