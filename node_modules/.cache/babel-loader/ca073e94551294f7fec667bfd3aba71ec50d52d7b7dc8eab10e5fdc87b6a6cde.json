{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"TraceEntryPointsPlugin\", {\n  enumerable: true,\n  get: function () {\n    return TraceEntryPointsPlugin;\n  }\n});\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nconst _profilingplugin = require(\"./profiling-plugin\");\nconst _iserror = /*#__PURE__*/_interop_require_default(require(\"../../../lib/is-error\"));\nconst _nft = require(\"next/dist/compiled/@vercel/nft\");\nconst _constants = require(\"../../../shared/lib/constants\");\nconst _webpack = require(\"next/dist/compiled/webpack/webpack\");\nconst _webpackconfig = require(\"../../webpack-config\");\nconst _swc = require(\"../../swc\");\nconst _micromatch = require(\"next/dist/compiled/micromatch\");\nconst _getmodulebuildinfo = require(\"../loaders/get-module-build-info\");\nconst _entries = require(\"../../entries\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst PLUGIN_NAME = \"TraceEntryPointsPlugin\";\nconst TRACE_IGNORES = [\"**/*/next/dist/server/next.js\", \"**/*/next/dist/bin/next\"];\nconst NOT_TRACEABLE = [\".wasm\", \".png\", \".jpg\", \".jpeg\", \".gif\", \".webp\", \".avif\", \".ico\", \".bmp\", \".svg\"];\nfunction getModuleFromDependency(compilation, dep) {\n  return compilation.moduleGraph.getModule(dep);\n}\nfunction getFilesMapFromReasons(fileList, reasons, ignoreFn) {\n  // this uses the reasons tree to collect files specific to a\n  // certain parent allowing us to not have to trace each parent\n  // separately\n  const parentFilesMap = new Map();\n  function propagateToParents(parents, file, seen = new Set()) {\n    for (const parent of parents || []) {\n      if (!seen.has(parent)) {\n        seen.add(parent);\n        let parentFiles = parentFilesMap.get(parent);\n        if (!parentFiles) {\n          parentFiles = new Set();\n          parentFilesMap.set(parent, parentFiles);\n        }\n        if (!(ignoreFn == null ? void 0 : ignoreFn(file, parent))) {\n          parentFiles.add(file);\n        }\n        const parentReason = reasons.get(parent);\n        if (parentReason == null ? void 0 : parentReason.parents) {\n          propagateToParents(parentReason.parents, file, seen);\n        }\n      }\n    }\n  }\n  for (const file of fileList) {\n    const reason = reasons.get(file);\n    const isInitial = (reason == null ? void 0 : reason.type.length) === 1 && reason.type.includes(\"initial\");\n    if (!reason || !reason.parents || isInitial && reason.parents.size === 0) {\n      continue;\n    }\n    propagateToParents(reason.parents, file);\n  }\n  return parentFilesMap;\n}\nclass TraceEntryPointsPlugin {\n  constructor({\n    rootDir,\n    appDir,\n    pagesDir,\n    appDirEnabled,\n    traceIgnores,\n    esmExternals,\n    outputFileTracingRoot,\n    turbotrace\n  }) {\n    this.turbotraceContext = {};\n    this.chunksToTrace = [];\n    this.rootDir = rootDir;\n    this.appDir = appDir;\n    this.pagesDir = pagesDir;\n    this.entryTraces = new Map();\n    this.esmExternals = esmExternals;\n    this.appDirEnabled = appDirEnabled;\n    this.traceIgnores = traceIgnores || [];\n    this.tracingRoot = outputFileTracingRoot || rootDir;\n    this.turbotrace = turbotrace;\n  }\n  // Here we output all traced assets and webpack chunks to a\n  // ${page}.js.nft.json file\n  async createTraceAssets(compilation, assets, span, readlink, stat) {\n    const outputPath = compilation.outputOptions.path;\n    await span.traceChild(\"create-trace-assets\").traceAsyncFn(async () => {\n      const entryFilesMap = new Map();\n      const chunksToTrace = new Set();\n      const isTraceable = file => !NOT_TRACEABLE.some(suffix => {\n        return file.endsWith(suffix);\n      });\n      for (const entrypoint of compilation.entrypoints.values()) {\n        const entryFiles = new Set();\n        for (const chunk of entrypoint.getEntrypointChunk().getAllReferencedChunks()) {\n          for (const file of chunk.files) {\n            if (isTraceable(file)) {\n              const filePath = _path.default.join(outputPath, file);\n              chunksToTrace.add(filePath);\n              entryFiles.add(filePath);\n            }\n          }\n          for (const file of chunk.auxiliaryFiles) {\n            if (isTraceable(file)) {\n              const filePath = _path.default.join(outputPath, file);\n              chunksToTrace.add(filePath);\n              entryFiles.add(filePath);\n            }\n          }\n        }\n        entryFilesMap.set(entrypoint, entryFiles);\n      }\n      // startTrace existed and callable\n      if (this.turbotrace) {\n        let binding = await (0, _swc.loadBindings)();\n        if (!(binding == null ? void 0 : binding.isWasm) && typeof binding.turbo.startTrace === \"function\") {\n          this.chunksToTrace = [...chunksToTrace];\n          return;\n        }\n      }\n      const ignores = [...TRACE_IGNORES, ...this.traceIgnores];\n      const ignoreFn = path => {\n        return (0, _micromatch.isMatch)(path, ignores, {\n          contains: true,\n          dot: true\n        });\n      };\n      const result = await (0, _nft.nodeFileTrace)([...chunksToTrace], {\n        base: this.tracingRoot,\n        processCwd: this.rootDir,\n        readFile: async path => {\n          if (chunksToTrace.has(path)) {\n            var _assets_nodePath_relative_replace_source, _assets_nodePath_relative_replace;\n            const source = (_assets_nodePath_relative_replace = assets[_path.default.relative(outputPath, path).replace(/\\\\/g, \"/\")]) == null ? void 0 : (_assets_nodePath_relative_replace_source = _assets_nodePath_relative_replace.source) == null ? void 0 : _assets_nodePath_relative_replace_source.call(_assets_nodePath_relative_replace);\n            if (source) return source;\n          }\n          try {\n            return await new Promise((resolve, reject) => {\n              compilation.inputFileSystem.readFile(path, (err, data) => {\n                if (err) return reject(err);\n                resolve(data);\n              });\n            });\n          } catch (e) {\n            if ((0, _iserror.default)(e) && (e.code === \"ENOENT\" || e.code === \"EISDIR\")) {\n              return null;\n            }\n            throw e;\n          }\n        },\n        readlink,\n        stat,\n        ignore: ignoreFn,\n        mixedModules: true\n      });\n      const reasons = result.reasons;\n      const fileList = result.fileList;\n      result.esmFileList.forEach(file => fileList.add(file));\n      const parentFilesMap = getFilesMapFromReasons(fileList, reasons);\n      for (const [entrypoint, entryFiles] of entryFilesMap) {\n        const traceOutputName = `../${entrypoint.name}.js.nft.json`;\n        const traceOutputPath = _path.default.dirname(_path.default.join(outputPath, traceOutputName));\n        const allEntryFiles = new Set();\n        entryFiles.forEach(file => {\n          var _parentFilesMap_get;\n          (_parentFilesMap_get = parentFilesMap.get(_path.default.relative(this.tracingRoot, file))) == null ? void 0 : _parentFilesMap_get.forEach(child => {\n            allEntryFiles.add(_path.default.join(this.tracingRoot, child));\n          });\n        });\n        // don't include the entry itself in the trace\n        entryFiles.delete(_path.default.join(outputPath, `../${entrypoint.name}.js`));\n        if (entrypoint.name.startsWith(\"app/\")) {\n          // include the client reference manifest\n          const clientManifestsForPage = entrypoint.name.endsWith(\"/page\") || entrypoint.name === \"app/not-found\" || entrypoint.name === \"app/_not-found\" ? _path.default.join(outputPath, \"..\", entrypoint.name.replace(/%5F/g, \"_\") + \"_\" + _constants.CLIENT_REFERENCE_MANIFEST + \".js\") : null;\n          if (clientManifestsForPage !== null) {\n            entryFiles.add(clientManifestsForPage);\n          }\n        }\n        const finalFiles = [];\n        for (const file of new Set([...entryFiles, ...allEntryFiles, ...(this.entryTraces.get(entrypoint.name) || [])])) {\n          if (file) {\n            finalFiles.push(_path.default.relative(traceOutputPath, file).replace(/\\\\/g, \"/\"));\n          }\n        }\n        assets[traceOutputName] = new _webpack.sources.RawSource(JSON.stringify({\n          version: _constants.TRACE_OUTPUT_VERSION,\n          files: finalFiles\n        }));\n      }\n    });\n  }\n  tapfinishModules(compilation, traceEntrypointsPluginSpan, doResolve, readlink, stat) {\n    compilation.hooks.finishModules.tapAsync(PLUGIN_NAME, async (_stats, callback) => {\n      const finishModulesSpan = traceEntrypointsPluginSpan.traceChild(\"finish-modules\");\n      await finishModulesSpan.traceAsyncFn(async () => {\n        // we create entry -> module maps so that we can\n        // look them up faster instead of having to iterate\n        // over the compilation modules list\n        const entryNameMap = new Map();\n        const entryModMap = new Map();\n        const additionalEntries = new Map();\n        const depModMap = new Map();\n        finishModulesSpan.traceChild(\"get-entries\").traceFn(() => {\n          compilation.entries.forEach((entry, name) => {\n            const normalizedName = name == null ? void 0 : name.replace(/\\\\/g, \"/\");\n            const isPage = normalizedName.startsWith(\"pages/\");\n            const isApp = this.appDirEnabled && normalizedName.startsWith(\"app/\");\n            if (isApp || isPage) {\n              for (const dep of entry.dependencies) {\n                if (!dep) continue;\n                const entryMod = getModuleFromDependency(compilation, dep);\n                // Handle case where entry is a loader coming from Next.js.\n                // For example edge-loader or app-loader.\n                if (entryMod && entryMod.resource === \"\") {\n                  const moduleBuildInfo = (0, _getmodulebuildinfo.getModuleBuildInfo)(entryMod);\n                  // All loaders that are used to create entries have a `route` property on the buildInfo.\n                  if (moduleBuildInfo.route) {\n                    const absolutePath = (0, _entries.getPageFilePath)({\n                      absolutePagePath: moduleBuildInfo.route.absolutePagePath,\n                      rootDir: this.rootDir,\n                      appDir: this.appDir,\n                      pagesDir: this.pagesDir\n                    });\n                    // Ensures we don't handle non-pages.\n                    if (this.pagesDir && absolutePath.startsWith(this.pagesDir) || this.appDir && absolutePath.startsWith(this.appDir)) {\n                      entryModMap.set(absolutePath, entryMod);\n                      entryNameMap.set(absolutePath, name);\n                    }\n                  }\n                  // If there was no `route` property, we can assume that it was something custom instead.\n                  // In order to trace these we add them to the additionalEntries map.\n                  if (entryMod.request) {\n                    let curMap = additionalEntries.get(name);\n                    if (!curMap) {\n                      curMap = new Map();\n                      additionalEntries.set(name, curMap);\n                    }\n                    depModMap.set(entryMod.request, entryMod);\n                    curMap.set(entryMod.resource, entryMod);\n                  }\n                }\n                if (entryMod && entryMod.resource) {\n                  entryNameMap.set(entryMod.resource, name);\n                  entryModMap.set(entryMod.resource, entryMod);\n                  let curMap = additionalEntries.get(name);\n                  if (!curMap) {\n                    curMap = new Map();\n                    additionalEntries.set(name, curMap);\n                  }\n                  depModMap.set(entryMod.resource, entryMod);\n                  curMap.set(entryMod.resource, entryMod);\n                }\n              }\n            }\n          });\n        });\n        const readFile = async path => {\n          var _mod_originalSource;\n          const mod = depModMap.get(path) || entryModMap.get(path);\n          // map the transpiled source when available to avoid\n          // parse errors in node-file-trace\n          const source = mod == null ? void 0 : (_mod_originalSource = mod.originalSource) == null ? void 0 : _mod_originalSource.call(mod);\n          if (source) {\n            return source.buffer();\n          }\n          // we don't want to analyze non-transpiled\n          // files here, that is done against webpack output\n          return \"\";\n        };\n        const entryPaths = Array.from(entryModMap.keys());\n        const collectDependencies = mod => {\n          if (!mod || !mod.dependencies) return;\n          for (const dep of mod.dependencies) {\n            const depMod = getModuleFromDependency(compilation, dep);\n            if ((depMod == null ? void 0 : depMod.resource) && !depModMap.get(depMod.resource)) {\n              depModMap.set(depMod.resource, depMod);\n              collectDependencies(depMod);\n            }\n          }\n        };\n        const entriesToTrace = [...entryPaths];\n        entryPaths.forEach(entry => {\n          collectDependencies(entryModMap.get(entry));\n          const entryName = entryNameMap.get(entry);\n          const curExtraEntries = additionalEntries.get(entryName);\n          if (curExtraEntries) {\n            entriesToTrace.push(...curExtraEntries.keys());\n          }\n        });\n        // startTrace existed and callable\n        if (this.turbotrace) {\n          let binding = await (0, _swc.loadBindings)();\n          if (!(binding == null ? void 0 : binding.isWasm) && typeof binding.turbo.startTrace === \"function\") {\n            var _this_turbotrace, _this_turbotrace1, _this_turbotrace2, _this_turbotrace3;\n            const contextDirectory = ((_this_turbotrace = this.turbotrace) == null ? void 0 : _this_turbotrace.contextDirectory) ?? this.tracingRoot;\n            const chunks = [...entriesToTrace];\n            this.turbotraceContext.entriesTrace = {\n              action: {\n                action: \"print\",\n                input: chunks,\n                contextDirectory,\n                processCwd: ((_this_turbotrace1 = this.turbotrace) == null ? void 0 : _this_turbotrace1.processCwd) ?? this.rootDir,\n                logLevel: (_this_turbotrace2 = this.turbotrace) == null ? void 0 : _this_turbotrace2.logLevel,\n                showAll: (_this_turbotrace3 = this.turbotrace) == null ? void 0 : _this_turbotrace3.logAll\n              },\n              appDir: this.rootDir,\n              depModArray: Array.from(depModMap.keys()),\n              entryNameMap,\n              outputPath: compilation.outputOptions.path\n            };\n            return;\n          }\n        }\n        let fileList;\n        let reasons;\n        const ignores = [...TRACE_IGNORES, ...this.traceIgnores, \"**/node_modules/**\"];\n        const ignoreFn = path => {\n          return (0, _micromatch.isMatch)(path, ignores, {\n            contains: true,\n            dot: true\n          });\n        };\n        await finishModulesSpan.traceChild(\"node-file-trace\", {\n          traceEntryCount: entriesToTrace.length + \"\"\n        }).traceAsyncFn(async () => {\n          const result = await (0, _nft.nodeFileTrace)(entriesToTrace, {\n            base: this.tracingRoot,\n            processCwd: this.rootDir,\n            readFile,\n            readlink,\n            stat,\n            resolve: doResolve ? async (id, parent, job, isCjs) => {\n              return doResolve(id, parent, job, !isCjs);\n            } : undefined,\n            ignore: ignoreFn,\n            mixedModules: true\n          });\n          // @ts-ignore\n          fileList = result.fileList;\n          result.esmFileList.forEach(file => fileList.add(file));\n          reasons = result.reasons;\n        });\n        await finishModulesSpan.traceChild(\"collect-traced-files\").traceAsyncFn(() => {\n          const parentFilesMap = getFilesMapFromReasons(fileList, reasons, file => {\n            var _reasons_get;\n            // if a file was imported and a loader handled it\n            // we don't include it in the trace e.g.\n            // static image imports, CSS imports\n            file = _path.default.join(this.tracingRoot, file);\n            const depMod = depModMap.get(file);\n            const isAsset = (_reasons_get = reasons.get(_path.default.relative(this.tracingRoot, file))) == null ? void 0 : _reasons_get.type.includes(\"asset\");\n            return !isAsset && Array.isArray(depMod == null ? void 0 : depMod.loaders) && depMod.loaders.length > 0;\n          });\n          entryPaths.forEach(entry => {\n            var _parentFilesMap_get;\n            const entryName = entryNameMap.get(entry);\n            const normalizedEntry = _path.default.relative(this.tracingRoot, entry);\n            const curExtraEntries = additionalEntries.get(entryName);\n            const finalDeps = new Set();\n            (_parentFilesMap_get = parentFilesMap.get(normalizedEntry)) == null ? void 0 : _parentFilesMap_get.forEach(dep => {\n              finalDeps.add(_path.default.join(this.tracingRoot, dep));\n            });\n            if (curExtraEntries) {\n              for (const extraEntry of curExtraEntries.keys()) {\n                var _parentFilesMap_get1;\n                const normalizedExtraEntry = _path.default.relative(this.tracingRoot, extraEntry);\n                finalDeps.add(extraEntry);\n                (_parentFilesMap_get1 = parentFilesMap.get(normalizedExtraEntry)) == null ? void 0 : _parentFilesMap_get1.forEach(dep => {\n                  finalDeps.add(_path.default.join(this.tracingRoot, dep));\n                });\n              }\n            }\n            this.entryTraces.set(entryName, finalDeps);\n          });\n        });\n      }).then(() => callback(), err => callback(err));\n    });\n  }\n  apply(compiler) {\n    compiler.hooks.compilation.tap(PLUGIN_NAME, compilation => {\n      const readlink = async path => {\n        try {\n          return await new Promise((resolve, reject) => {\n            compilation.inputFileSystem.readlink(path, (err, link) => {\n              if (err) return reject(err);\n              resolve(link);\n            });\n          });\n        } catch (e) {\n          if ((0, _iserror.default)(e) && (e.code === \"EINVAL\" || e.code === \"ENOENT\" || e.code === \"UNKNOWN\")) {\n            return null;\n          }\n          throw e;\n        }\n      };\n      const stat = async path => {\n        try {\n          return await new Promise((resolve, reject) => {\n            compilation.inputFileSystem.stat(path, (err, stats) => {\n              if (err) return reject(err);\n              resolve(stats);\n            });\n          });\n        } catch (e) {\n          if ((0, _iserror.default)(e) && (e.code === \"ENOENT\" || e.code === \"ENOTDIR\")) {\n            return null;\n          }\n          throw e;\n        }\n      };\n      const compilationSpan = _profilingplugin.spans.get(compilation) || _profilingplugin.spans.get(compiler);\n      const traceEntrypointsPluginSpan = compilationSpan.traceChild(\"next-trace-entrypoint-plugin\");\n      traceEntrypointsPluginSpan.traceFn(() => {\n        compilation.hooks.processAssets.tapAsync({\n          name: PLUGIN_NAME,\n          stage: _webpack.webpack.Compilation.PROCESS_ASSETS_STAGE_SUMMARIZE\n        }, (assets, callback) => {\n          this.createTraceAssets(compilation, assets, traceEntrypointsPluginSpan, readlink, stat).then(() => callback()).catch(err => callback(err));\n        });\n        let resolver = compilation.resolverFactory.get(\"normal\");\n        function getPkgName(name) {\n          const segments = name.split(\"/\");\n          if (name[0] === \"@\" && segments.length > 1) return segments.length > 1 ? segments.slice(0, 2).join(\"/\") : null;\n          return segments.length ? segments[0] : null;\n        }\n        const getResolve = options => {\n          const curResolver = resolver.withOptions(options);\n          return (parent, request, job) => new Promise((resolve, reject) => {\n            const context = _path.default.dirname(parent);\n            curResolver.resolve({}, context, request, {\n              fileDependencies: compilation.fileDependencies,\n              missingDependencies: compilation.missingDependencies,\n              contextDependencies: compilation.contextDependencies\n            }, async (err, result, resContext) => {\n              if (err) return reject(err);\n              if (!result) {\n                return reject(new Error(\"module not found\"));\n              }\n              // webpack resolver doesn't strip loader query info\n              // from the result so use path instead\n              if (result.includes(\"?\") || result.includes(\"!\")) {\n                result = (resContext == null ? void 0 : resContext.path) || result;\n              }\n              try {\n                // we need to collect all parent package.json's used\n                // as webpack's resolve doesn't expose this and parent\n                // package.json could be needed for resolving e.g. stylis\n                // stylis/package.json -> stylis/dist/umd/package.json\n                if (result.includes(\"node_modules\")) {\n                  let requestPath = result.replace(/\\\\/g, \"/\").replace(/\\0/g, \"\");\n                  if (!_path.default.isAbsolute(request) && request.includes(\"/\") && (resContext == null ? void 0 : resContext.descriptionFileRoot)) {\n                    var _getPkgName;\n                    requestPath = (resContext.descriptionFileRoot + request.slice(((_getPkgName = getPkgName(request)) == null ? void 0 : _getPkgName.length) || 0) + _path.default.sep + \"package.json\").replace(/\\\\/g, \"/\").replace(/\\0/g, \"\");\n                  }\n                  const rootSeparatorIndex = requestPath.indexOf(\"/\");\n                  let separatorIndex;\n                  while ((separatorIndex = requestPath.lastIndexOf(\"/\")) > rootSeparatorIndex) {\n                    requestPath = requestPath.slice(0, separatorIndex);\n                    const curPackageJsonPath = `${requestPath}/package.json`;\n                    if (await job.isFile(curPackageJsonPath)) {\n                      await job.emitFile(await job.realpath(curPackageJsonPath), \"resolve\", parent);\n                    }\n                  }\n                }\n              } catch (_err) {\n                // we failed to resolve the package.json boundary,\n                // we don't block emitting the initial asset from this\n              }\n              resolve([result, options.dependencyType === \"esm\"]);\n            });\n          });\n        };\n        const CJS_RESOLVE_OPTIONS = {\n          ..._webpackconfig.NODE_RESOLVE_OPTIONS,\n          fullySpecified: undefined,\n          modules: undefined,\n          extensions: undefined\n        };\n        const BASE_CJS_RESOLVE_OPTIONS = {\n          ...CJS_RESOLVE_OPTIONS,\n          alias: false\n        };\n        const ESM_RESOLVE_OPTIONS = {\n          ..._webpackconfig.NODE_ESM_RESOLVE_OPTIONS,\n          fullySpecified: undefined,\n          modules: undefined,\n          extensions: undefined\n        };\n        const BASE_ESM_RESOLVE_OPTIONS = {\n          ...ESM_RESOLVE_OPTIONS,\n          alias: false\n        };\n        const doResolve = async (request, parent, job, isEsmRequested) => {\n          const context = _path.default.dirname(parent);\n          // When in esm externals mode, and using import, we resolve with\n          // ESM resolving options.\n          const {\n            res\n          } = await (0, _webpackconfig.resolveExternal)(this.rootDir, this.esmExternals, context, request, isEsmRequested, !!this.appDirEnabled, options => (_, resRequest) => {\n            return getResolve(options)(parent, resRequest, job);\n          }, undefined, undefined, ESM_RESOLVE_OPTIONS, CJS_RESOLVE_OPTIONS, BASE_ESM_RESOLVE_OPTIONS, BASE_CJS_RESOLVE_OPTIONS);\n          if (!res) {\n            throw new Error(`failed to resolve ${request} from ${parent}`);\n          }\n          return res.replace(/\\0/g, \"\");\n        };\n        this.tapfinishModules(compilation, traceEntrypointsPluginSpan, doResolve, readlink, stat);\n      });\n    });\n    if (this.turbotrace) {\n      compiler.hooks.afterEmit.tapPromise(PLUGIN_NAME, async () => {\n        let binding = await (0, _swc.loadBindings)();\n        if (!(binding == null ? void 0 : binding.isWasm) && typeof binding.turbo.startTrace === \"function\") {\n          var _this_turbotrace, _this_turbotrace1, _this_turbotrace2, _this_turbotrace3;\n          const ignores = [...TRACE_IGNORES, ...this.traceIgnores];\n          const ignoreFn = path => {\n            return (0, _micromatch.isMatch)(path, ignores, {\n              contains: true,\n              dot: true\n            });\n          };\n          const chunks = this.chunksToTrace.filter(chunk => !ignoreFn(chunk));\n          this.turbotraceContext.chunksTrace = {\n            action: {\n              action: \"annotate\",\n              input: chunks,\n              contextDirectory: ((_this_turbotrace = this.turbotrace) == null ? void 0 : _this_turbotrace.contextDirectory) ?? this.tracingRoot,\n              processCwd: ((_this_turbotrace1 = this.turbotrace) == null ? void 0 : _this_turbotrace1.processCwd) ?? this.rootDir,\n              showAll: (_this_turbotrace2 = this.turbotrace) == null ? void 0 : _this_turbotrace2.logAll,\n              logLevel: (_this_turbotrace3 = this.turbotrace) == null ? void 0 : _this_turbotrace3.logLevel\n            },\n            outputPath: compiler.outputPath\n          };\n        }\n      });\n    }\n  }\n}","map":{"version":3,"names":["TraceEntryPointsPlugin","PLUGIN_NAME","TRACE_IGNORES","NOT_TRACEABLE","getModuleFromDependency","compilation","dep","moduleGraph","getModule","getFilesMapFromReasons","fileList","reasons","ignoreFn","parentFilesMap","Map","propagateToParents","parents","file","seen","Set","parent","has","add","parentFiles","get","set","parentReason","reason","isInitial","type","length","includes","size","constructor","rootDir","appDir","pagesDir","appDirEnabled","traceIgnores","esmExternals","outputFileTracingRoot","turbotrace","turbotraceContext","chunksToTrace","entryTraces","tracingRoot","createTraceAssets","assets","span","readlink","stat","outputPath","outputOptions","path","traceChild","traceAsyncFn","entryFilesMap","isTraceable","some","suffix","endsWith","entrypoint","entrypoints","values","entryFiles","chunk","getEntrypointChunk","getAllReferencedChunks","files","filePath","_path","default","join","auxiliaryFiles","binding","_swc","loadBindings","isWasm","turbo","startTrace","ignores","_micromatch","isMatch","contains","dot","result","_nft","nodeFileTrace","base","processCwd","readFile","_assets_nodePath_relative_replace_source","_assets_nodePath_relative_replace","source","relative","replace","call","Promise","resolve","reject","inputFileSystem","err","data","e","_iserror","code","ignore","mixedModules","esmFileList","forEach","traceOutputName","name","traceOutputPath","dirname","allEntryFiles","_parentFilesMap_get","child","delete","startsWith","clientManifestsForPage","_constants","CLIENT_REFERENCE_MANIFEST","finalFiles","push","_webpack","sources","RawSource","JSON","stringify","version","TRACE_OUTPUT_VERSION","tapfinishModules","traceEntrypointsPluginSpan","doResolve","hooks","finishModules","tapAsync","_stats","callback","finishModulesSpan","entryNameMap","entryModMap","additionalEntries","depModMap","traceFn","entries","entry","normalizedName","isPage","isApp","dependencies","entryMod","resource","moduleBuildInfo","_getmodulebuildinfo","getModuleBuildInfo","route","absolutePath","_entries","getPageFilePath","absolutePagePath","request","curMap","_mod_originalSource","mod","originalSource","buffer","entryPaths","Array","from","keys","collectDependencies","depMod","entriesToTrace","entryName","curExtraEntries","_this_turbotrace","_this_turbotrace1","_this_turbotrace2","_this_turbotrace3","contextDirectory","chunks","entriesTrace","action","input","logLevel","showAll","logAll","depModArray","traceEntryCount","id","job","isCjs","undefined","_reasons_get","isAsset","isArray","loaders","normalizedEntry","finalDeps","extraEntry","_parentFilesMap_get1","normalizedExtraEntry","then","apply","compiler","tap","link","stats","compilationSpan","_profilingplugin","spans","processAssets","stage","webpack","Compilation","PROCESS_ASSETS_STAGE_SUMMARIZE","catch","resolver","resolverFactory","getPkgName","segments","split","slice","getResolve","options","curResolver","withOptions","context","fileDependencies","missingDependencies","contextDependencies","resContext","Error","requestPath","isAbsolute","descriptionFileRoot","_getPkgName","sep","rootSeparatorIndex","indexOf","separatorIndex","lastIndexOf","curPackageJsonPath","isFile","emitFile","realpath","_err","dependencyType","CJS_RESOLVE_OPTIONS","_webpackconfig","NODE_RESOLVE_OPTIONS","fullySpecified","modules","extensions","BASE_CJS_RESOLVE_OPTIONS","alias","ESM_RESOLVE_OPTIONS","NODE_ESM_RESOLVE_OPTIONS","BASE_ESM_RESOLVE_OPTIONS","isEsmRequested","res","resolveExternal","_","resRequest","afterEmit","tapPromise","filter","chunksTrace"],"sources":["../../../../src/build/webpack/plugins/next-trace-entrypoints-plugin.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}