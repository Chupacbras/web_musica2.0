{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  MessageSeverity: null,\n  formatResults: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  MessageSeverity: function () {\n    return MessageSeverity;\n  },\n  formatResults: function () {\n    return formatResults;\n  }\n});\nconst _chalk = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/chalk\"));\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar MessageSeverity;\n(function (MessageSeverity) {\n  MessageSeverity[MessageSeverity[\"Warning\"] = 1] = \"Warning\";\n  MessageSeverity[MessageSeverity[\"Error\"] = 2] = \"Error\";\n})(MessageSeverity || (MessageSeverity = {}));\nfunction pluginCount(messages) {\n  let nextPluginWarningCount = 0;\n  let nextPluginErrorCount = 0;\n  for (let i = 0; i < messages.length; i++) {\n    const {\n      severity,\n      ruleId\n    } = messages[i];\n    if (ruleId == null ? void 0 : ruleId.includes(\"@next/next\")) {\n      if (severity === 1) {\n        nextPluginWarningCount += 1;\n      } else {\n        nextPluginErrorCount += 1;\n      }\n    }\n  }\n  return {\n    nextPluginErrorCount,\n    nextPluginWarningCount\n  };\n}\nfunction formatMessage(dir, messages, filePath) {\n  let fileName = _path.default.posix.normalize(_path.default.relative(dir, filePath).replace(/\\\\/g, \"/\"));\n  if (!fileName.startsWith(\".\")) {\n    fileName = \"./\" + fileName;\n  }\n  let output = \"\\n\" + _chalk.default.cyan(fileName);\n  for (let i = 0; i < messages.length; i++) {\n    const {\n      message,\n      severity,\n      line,\n      column,\n      ruleId\n    } = messages[i];\n    output = output + \"\\n\";\n    if (line && column) {\n      output = output + _chalk.default.yellow(line.toString()) + \":\" + _chalk.default.yellow(column.toString()) + \"  \";\n    }\n    if (severity === 1) {\n      output += _chalk.default.yellow.bold(\"Warning\") + \": \";\n    } else {\n      output += _chalk.default.red.bold(\"Error\") + \": \";\n    }\n    output += message;\n    if (ruleId) {\n      output += \"  \" + _chalk.default.gray.bold(ruleId);\n    }\n  }\n  return output;\n}\nfunction formatResults(baseDir, results, format) {\n  let totalNextPluginErrorCount = 0;\n  let totalNextPluginWarningCount = 0;\n  let resultsWithMessages = results.filter(({\n    messages\n  }) => messages == null ? void 0 : messages.length);\n  // Track number of Next.js plugin errors and warnings\n  resultsWithMessages.forEach(({\n    messages\n  }) => {\n    const res = pluginCount(messages);\n    totalNextPluginErrorCount += res.nextPluginErrorCount;\n    totalNextPluginWarningCount += res.nextPluginWarningCount;\n  });\n  // Use user defined formatter or Next.js's built-in custom formatter\n  const output = format ? format(resultsWithMessages) : resultsWithMessages.map(({\n    messages,\n    filePath\n  }) => formatMessage(baseDir, messages, filePath)).join(\"\\n\");\n  return {\n    output: output,\n    outputWithMessages: resultsWithMessages.length > 0 ? output + `\\n\\n${_chalk.default.cyan(\"info\")}  - Need to disable some ESLint rules? Learn more here: https://nextjs.org/docs/basic-features/eslint#disabling-rules` : \"\",\n    totalNextPluginErrorCount,\n    totalNextPluginWarningCount\n  };\n}","map":{"version":3,"names":["formatResults","MessageSeverity","pluginCount","messages","nextPluginWarningCount","nextPluginErrorCount","i","length","severity","ruleId","includes","formatMessage","dir","filePath","fileName","_path","default","posix","normalize","relative","replace","startsWith","output","_chalk","cyan","message","line","column","yellow","toString","bold","red","gray","baseDir","results","format","totalNextPluginErrorCount","totalNextPluginWarningCount","resultsWithMessages","filter","forEach","res","map","join","outputWithMessages"],"sources":["../../../src/lib/eslint/customFormatter.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;EAgGgBA,aAAa,WAAAA,CAAA;WAAbA,aAAA;;;6DAhGE;4DACD;;;;;;IAGVC,eAAA;WAAKA,eAAe;EAAfA,eAAA,CAAAA,eAAA,CACV,aAAU,KAAV;EADUA,eAAA,CAAAA,eAAA,CAEV,WAAQ,KAAR;GAFUA,eAAA,KAAAA,eAAA;AAsBZ,SAASC,YAAYC,QAAuB;EAI1C,IAAIC,sBAAA,GAAyB;EAC7B,IAAIC,oBAAA,GAAuB;EAE3B,KAAK,IAAIC,CAAA,GAAI,GAAGA,CAAA,GAAIH,QAAA,CAASI,MAAM,EAAED,CAAA,IAAK;IACxC,MAAM;MAAEE,QAAQ;MAAEC;IAAM,CAAE,GAAGN,QAAQ,CAACG,CAAA,CAAE;IAExC,IAAIG,MAAA,oBAAAA,MAAA,CAAQC,QAAQ,CAAC,eAAe;MAClC,IAAIF,QAAA,KAhCE,GAgCoC;QACxCJ,sBAAA,IAA0B;MAC5B,OAAO;QACLC,oBAAA,IAAwB;MAC1B;IACF;EACF;EAEA,OAAO;IACLA,oBAAA;IACAD;EACF;AACF;AAEA,SAASO,cACPC,GAAW,EACXT,QAAuB,EACvBU,QAAgB;EAEhB,IAAIC,QAAA,GAAWC,KAAA,CAAAC,OAAI,CAACC,KAAK,CAACC,SAAS,CACjCH,KAAA,CAAAC,OAAI,CAACG,QAAQ,CAACP,GAAA,EAAKC,QAAA,EAAUO,OAAO,CAAC,OAAO;EAG9C,IAAI,CAACN,QAAA,CAASO,UAAU,CAAC,MAAM;IAC7BP,QAAA,GAAW,OAAOA,QAAA;EACpB;EAEA,IAAIQ,MAAA,GAAS,OAAOC,MAAA,CAAAP,OAAK,CAACQ,IAAI,CAACV,QAAA;EAE/B,KAAK,IAAIR,CAAA,GAAI,GAAGA,CAAA,GAAIH,QAAA,CAASI,MAAM,EAAED,CAAA,IAAK;IACxC,MAAM;MAAEmB,OAAO;MAAEjB,QAAQ;MAAEkB,IAAI;MAAEC,MAAM;MAAElB;IAAM,CAAE,GAAGN,QAAQ,CAACG,CAAA,CAAE;IAE/DgB,MAAA,GAASA,MAAA,GAAS;IAElB,IAAII,IAAA,IAAQC,MAAA,EAAQ;MAClBL,MAAA,GACEA,MAAA,GACAC,MAAA,CAAAP,OAAK,CAACY,MAAM,CAACF,IAAA,CAAKG,QAAQ,MAC1B,MACAN,MAAA,CAAAP,OAAK,CAACY,MAAM,CAACD,MAAA,CAAOE,QAAQ,MAC5B;IACJ;IAEA,IAAIrB,QAAA,KA3EI,GA2EkC;MACxCc,MAAA,IAAUC,MAAA,CAAAP,OAAK,CAACY,MAAM,CAACE,IAAI,CAAC,aAAa;IAC3C,OAAO;MACLR,MAAA,IAAUC,MAAA,CAAAP,OAAK,CAACe,GAAG,CAACD,IAAI,CAAC,WAAW;IACtC;IAEAR,MAAA,IAAUG,OAAA;IAEV,IAAIhB,MAAA,EAAQ;MACVa,MAAA,IAAU,OAAOC,MAAA,CAAAP,OAAK,CAACgB,IAAI,CAACF,IAAI,CAACrB,MAAA;IACnC;EACF;EAEA,OAAOa,MAAA;AACT;AAEO,SAAStB,cACdiC,OAAe,EACfC,OAAqB,EACrBC,MAAmC;EAOnC,IAAIC,yBAAA,GAA4B;EAChC,IAAIC,2BAAA,GAA8B;EAClC,IAAIC,mBAAA,GAAsBJ,OAAA,CAAQK,MAAM,CAAC,CAAC;IAAEpC;EAAQ,CAAE,KAAKA,QAAA,oBAAAA,QAAA,CAAUI,MAAM;EAE3E;EACA+B,mBAAA,CAAoBE,OAAO,CAAC,CAAC;IAAErC;EAAQ,CAAE;IACvC,MAAMsC,GAAA,GAAMvC,WAAA,CAAYC,QAAA;IACxBiC,yBAAA,IAA6BK,GAAA,CAAIpC,oBAAoB;IACrDgC,2BAAA,IAA+BI,GAAA,CAAIrC,sBAAsB;EAC3D;EAEA;EACA,MAAMkB,MAAA,GAASa,MAAA,GACXA,MAAA,CAAOG,mBAAA,IACPA,mBAAA,CACGI,GAAG,CAAC,CAAC;IAAEvC,QAAQ;IAAEU;EAAQ,CAAE,KAC1BF,aAAA,CAAcsB,OAAA,EAAS9B,QAAA,EAAUU,QAAA,GAElC8B,IAAI,CAAC;EAEZ,OAAO;IACLrB,MAAA,EAAQA,MAAA;IACRsB,kBAAA,EACEN,mBAAA,CAAoB/B,MAAM,GAAG,IACzBe,MAAA,GACC,OAAMC,MAAA,CAAAP,OAAK,CAACQ,IAAI,CACf,OACA,uHAAsH,GACxH;IACNY,yBAAA;IACAC;EACF;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}