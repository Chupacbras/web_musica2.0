{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"eventSwcPlugins\", {\n  enumerable: true,\n  get: function () {\n    return eventSwcPlugins;\n  }\n});\nconst _findup = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/find-up\"));\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nconst _fileexists = require(\"../../lib/file-exists\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst EVENT_SWC_PLUGIN_PRESENT = \"NEXT_SWC_PLUGIN_DETECTED\";\nasync function eventSwcPlugins(dir, config) {\n  try {\n    var _config_experimental_swcPlugins, _config_experimental;\n    const packageJsonPath = await (0, _findup.default)(\"package.json\", {\n      cwd: dir\n    });\n    if (!packageJsonPath) {\n      return [];\n    }\n    const {\n      dependencies = {},\n      devDependencies = {}\n    } = require(packageJsonPath);\n    const deps = {\n      ...devDependencies,\n      ...dependencies\n    };\n    const swcPluginPackages = ((_config_experimental = config.experimental) == null ? void 0 : (_config_experimental_swcPlugins = _config_experimental.swcPlugins) == null ? void 0 : _config_experimental_swcPlugins.map(([name, _]) => name)) ?? [];\n    return Promise.all(swcPluginPackages.map(async plugin => {\n      // swc plugins can be non-npm pkgs with absolute path doesn't have version\n      const version = deps[plugin] ?? undefined;\n      let pluginName = plugin;\n      if (await (0, _fileexists.fileExists)(pluginName)) {\n        pluginName = _path.default.basename(plugin, \".wasm\");\n      }\n      return {\n        eventName: EVENT_SWC_PLUGIN_PRESENT,\n        payload: {\n          pluginName: pluginName,\n          pluginVersion: version\n        }\n      };\n    }));\n  } catch (_) {\n    return [];\n  }\n}","map":{"version":3,"names":["eventSwcPlugins","EVENT_SWC_PLUGIN_PRESENT","dir","config","_config_experimental_swcPlugins","_config_experimental","packageJsonPath","_findup","default","cwd","dependencies","devDependencies","require","deps","swcPluginPackages","experimental","swcPlugins","map","name","_","Promise","all","plugin","version","undefined","pluginName","_fileexists","fileExists","_path","basename","eventName","payload","pluginVersion"],"sources":["../../../src/telemetry/events/swc-plugins.ts"],"sourcesContent":[null],"mappings":";;;;;+BAcsB;;;WAAAA,eAAA;;;8DAdH;4DACF;4BACU;;;;;;AAG3B,MAAMC,wBAAA,GAA2B;AAS1B,eAAeD,gBACpBE,GAAW,EACXC,MAAkB;EAElB,IAAI;QAUAC,+BAAA,EAAAC,oBAAA;IATF,MAAMC,eAAA,GAAkB,MAAM,IAAAC,OAAA,CAAAC,OAAM,EAAC,gBAAgB;MAAEC,GAAA,EAAKP;IAAI;IAChE,IAAI,CAACI,eAAA,EAAiB;MACpB,OAAO,EAAE;IACX;IAEA,MAAM;MAAEI,YAAA,GAAe,CAAC,CAAC;MAAEC,eAAA,GAAkB,CAAC;IAAC,CAAE,GAAGC,OAAA,CAAQN,eAAA;IAE5D,MAAMO,IAAA,GAAO;MAAE,GAAGF,eAAe;MAAE,GAAGD;IAAa;IACnD,MAAMI,iBAAA,GACJ,EAAAT,oBAAA,GAAAF,MAAA,CAAOY,YAAY,sBAAnBX,+BAAA,GAAAC,oBAAA,CAAqBW,UAAU,qBAA/BZ,+BAAA,CAAiCa,GAAG,CAAC,CAAC,CAACC,IAAA,EAAMC,CAAA,CAAE,KAAKD,IAAA,MAAS,EAAE;IAEjE,OAAOE,OAAA,CAAQC,GAAG,CAChBP,iBAAA,CAAkBG,GAAG,CAAC,MAAOK,MAAA;MAC3B;MACA,MAAMC,OAAA,GAAUV,IAAI,CAACS,MAAA,CAAO,IAAIE,SAAA;MAChC,IAAIC,UAAA,GAAaH,MAAA;MACjB,IAAI,MAAM,IAAAI,WAAA,CAAAC,UAAU,EAACF,UAAA,GAAa;QAChCA,UAAA,GAAaG,KAAA,CAAApB,OAAI,CAACqB,QAAQ,CAACP,MAAA,EAAQ;MACrC;MAEA,OAAO;QACLQ,SAAA,EAAW7B,wBAAA;QACX8B,OAAA,EAAS;UACPN,UAAA,EAAYA,UAAA;UACZO,aAAA,EAAeT;QACjB;MACF;IACF;EAEJ,EAAE,OAAOJ,CAAA,EAAG;IACV,OAAO,EAAE;EACX;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}