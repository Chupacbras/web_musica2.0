{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  normalizeSourceMap: null,\n  normalizeSourceMapAfterPostcss: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  normalizeSourceMap: function () {\n    return normalizeSourceMap;\n  },\n  normalizeSourceMapAfterPostcss: function () {\n    return normalizeSourceMapAfterPostcss;\n  }\n});\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst IS_NATIVE_WIN32_PATH = /^[a-z]:[/\\\\]|^\\\\\\\\/i;\nconst ABSOLUTE_SCHEME = /^[a-z0-9+\\-.]+:/i;\nfunction getURLType(source) {\n  if (source[0] === \"/\") {\n    if (source[1] === \"/\") {\n      return \"scheme-relative\";\n    }\n    return \"path-absolute\";\n  }\n  if (IS_NATIVE_WIN32_PATH.test(source)) {\n    return \"path-absolute\";\n  }\n  return ABSOLUTE_SCHEME.test(source) ? \"absolute\" : \"path-relative\";\n}\nfunction normalizeSourceMap(map, resourceContext) {\n  let newMap = map;\n  // Some loader emit source map as string\n  // Strip any JSON XSSI avoidance prefix from the string (as documented in the source maps specification), and then parse the string as JSON.\n  if (typeof newMap === \"string\") {\n    newMap = JSON.parse(newMap);\n  }\n  delete newMap.file;\n  const {\n    sourceRoot\n  } = newMap;\n  delete newMap.sourceRoot;\n  if (newMap.sources) {\n    newMap.sources = newMap.sources.map(source => {\n      const sourceType = getURLType(source);\n      // Do no touch `scheme-relative` and `absolute` URLs\n      if (sourceType === \"path-relative\" || sourceType === \"path-absolute\") {\n        const absoluteSource = sourceType === \"path-relative\" && sourceRoot ? _path.default.resolve(sourceRoot, _path.default.normalize(source)) : _path.default.normalize(source);\n        return _path.default.relative(resourceContext, absoluteSource);\n      }\n      return source;\n    });\n  }\n  return newMap;\n}\nfunction normalizeSourceMapAfterPostcss(map, resourceContext) {\n  const newMap = map;\n  // result.map.file is an optional property that provides the output filename.\n  // Since we don't know the final filename in the webpack build chain yet, it makes no sense to have it.\n  // eslint-disable-next-line no-param-reassign\n  delete newMap.file;\n  // eslint-disable-next-line no-param-reassign\n  newMap.sourceRoot = \"\";\n  // eslint-disable-next-line no-param-reassign\n  newMap.sources = newMap.sources.map(source => {\n    if (source.indexOf(\"<\") === 0) {\n      return source;\n    }\n    const sourceType = getURLType(source);\n    // Do no touch `scheme-relative`, `path-absolute` and `absolute` types\n    if (sourceType === \"path-relative\") {\n      return _path.default.resolve(resourceContext, source);\n    }\n    return source;\n  });\n  return newMap;\n}","map":{"version":3,"names":["normalizeSourceMap","normalizeSourceMapAfterPostcss","IS_NATIVE_WIN32_PATH","ABSOLUTE_SCHEME","getURLType","source","test","map","resourceContext","newMap","JSON","parse","file","sourceRoot","sources","sourceType","absoluteSource","_path","default","resolve","normalize","relative","indexOf"],"sources":["../../../../../../src/build/webpack/loaders/postcss-loader/src/utils.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;EAuFSA,kBAAkB,WAAAA,CAAA;WAAlBA,kBAAA;;EAAoBC,8BAA8B,WAAAA,CAAA;WAA9BA,8BAAA;;;4DAvFZ;;;;;;AAEjB,MAAMC,oBAAA,GAAuB;AAC7B,MAAMC,eAAA,GAAkB;AAExB,SAASC,WAAWC,MAAc;EAChC,IAAIA,MAAM,CAAC,EAAE,KAAK,KAAK;IACrB,IAAIA,MAAM,CAAC,EAAE,KAAK,KAAK;MACrB,OAAO;IACT;IAEA,OAAO;EACT;EAEA,IAAIH,oBAAA,CAAqBI,IAAI,CAACD,MAAA,GAAS;IACrC,OAAO;EACT;EAEA,OAAOF,eAAA,CAAgBG,IAAI,CAACD,MAAA,IAAU,aAAa;AACrD;AAEA,SAASL,mBAAmBO,GAAQ,EAAEC,eAAuB;EAC3D,IAAIC,MAAA,GAASF,GAAA;EAEb;EACA;EACA,IAAI,OAAOE,MAAA,KAAW,UAAU;IAC9BA,MAAA,GAASC,IAAA,CAAKC,KAAK,CAACF,MAAA;EACtB;EAEA,OAAOA,MAAA,CAAOG,IAAI;EAElB,MAAM;IAAEC;EAAU,CAAE,GAAGJ,MAAA;EAEvB,OAAOA,MAAA,CAAOI,UAAU;EAExB,IAAIJ,MAAA,CAAOK,OAAO,EAAE;IAClBL,MAAA,CAAOK,OAAO,GAAGL,MAAA,CAAOK,OAAO,CAACP,GAAG,CAAEF,MAAA;MACnC,MAAMU,UAAA,GAAaX,UAAA,CAAWC,MAAA;MAE9B;MACA,IAAIU,UAAA,KAAe,mBAAmBA,UAAA,KAAe,iBAAiB;QACpE,MAAMC,cAAA,GACJD,UAAA,KAAe,mBAAmBF,UAAA,GAC9BI,KAAA,CAAAC,OAAI,CAACC,OAAO,CAACN,UAAA,EAAYI,KAAA,CAAAC,OAAI,CAACE,SAAS,CAACf,MAAA,KACxCY,KAAA,CAAAC,OAAI,CAACE,SAAS,CAACf,MAAA;QAErB,OAAOY,KAAA,CAAAC,OAAI,CAACG,QAAQ,CAACb,eAAA,EAAiBQ,cAAA;MACxC;MAEA,OAAOX,MAAA;IACT;EACF;EAEA,OAAOI,MAAA;AACT;AAEA,SAASR,+BAA+BM,GAAQ,EAAEC,eAAuB;EACvE,MAAMC,MAAA,GAASF,GAAA;EAEf;EACA;EACA;EACA,OAAOE,MAAA,CAAOG,IAAI;EAElB;EACAH,MAAA,CAAOI,UAAU,GAAG;EAEpB;EACAJ,MAAA,CAAOK,OAAO,GAAGL,MAAA,CAAOK,OAAO,CAACP,GAAG,CAAEF,MAAA;IACnC,IAAIA,MAAA,CAAOiB,OAAO,CAAC,SAAS,GAAG;MAC7B,OAAOjB,MAAA;IACT;IAEA,MAAMU,UAAA,GAAaX,UAAA,CAAWC,MAAA;IAE9B;IACA,IAAIU,UAAA,KAAe,iBAAiB;MAClC,OAAOE,KAAA,CAAAC,OAAI,CAACC,OAAO,CAACX,eAAA,EAAiBH,MAAA;IACvC;IAEA,OAAOA,MAAA;EACT;EAEA,OAAOI,MAAA;AACT"},"metadata":{},"sourceType":"script","externalDependencies":[]}