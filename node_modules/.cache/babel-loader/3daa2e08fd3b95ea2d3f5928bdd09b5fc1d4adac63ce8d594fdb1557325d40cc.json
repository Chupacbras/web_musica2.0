{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"loadEntrypoint\", {\n  enumerable: true,\n  get: function () {\n    return loadEntrypoint;\n  }\n});\nconst _promises = /*#__PURE__*/_interop_require_default(require(\"fs/promises\"));\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n// NOTE: this should be updated if this loader file is moved.\nconst PACKAGE_ROOT = _path.default.normalize(_path.default.join(__dirname, \"../../..\"));\nconst TEMPLATE_FOLDER = _path.default.join(__dirname, \"templates\");\nconst TEMPLATES_ESM_FOLDER = _path.default.normalize(_path.default.join(__dirname, \"../../dist/esm/build/templates\"));\nasync function loadEntrypoint(entrypoint, replacements, injections) {\n  const filepath = _path.default.resolve(_path.default.join(TEMPLATES_ESM_FOLDER, `${entrypoint}.js`));\n  let file = await _promises.default.readFile(filepath, \"utf8\");\n  // Update the relative imports to be absolute. This will update any relative\n  // imports to be relative to the root of the `next` package.\n  let count = 0;\n  file = file.replaceAll(/(?:from \"(\\..*)\"|import \"(\\..*)\")/g, function (_, fromRequest, importRequest) {\n    count++;\n    const relative = _path.default.relative(PACKAGE_ROOT, _path.default.resolve(TEMPLATE_FOLDER, fromRequest ?? importRequest)) // Ensure that we use linux style path separators for node.\n    .replace(/\\\\/g, \"/\");\n    // Verify that the relative import is relative to the `next` package. This\n    // will catch cases where the constants at the top of the file were not\n    // updated after the file was moved.\n    if (!relative.startsWith(\"next/\")) {\n      throw new Error(`Invariant: Expected relative import to start with \"next/\", found \"${relative}\"`);\n    }\n    return fromRequest ? `from ${JSON.stringify(relative)}` : `import ${JSON.stringify(relative)}`;\n  });\n  // Verify that at least one import was replaced. It's the case today where\n  // every template file has at least one import to update, so this ensures that\n  // we don't accidentally remove the import replacement code or use the wrong\n  // template file.\n  if (count === 0) {\n    throw new Error(\"Invariant: Expected to replace at least one import\");\n  }\n  const replaced = new Set();\n  // Replace all the template variables with the actual values. If a template\n  // variable is missing, throw an error.\n  file = file.replaceAll(new RegExp(`${Object.keys(replacements).map(k => `\"${k}\"`).join(\"|\")}`, \"g\"), match => {\n    const key = JSON.parse(match);\n    if (!(key in replacements)) {\n      throw new Error(`Invariant: Unexpected template variable ${key}`);\n    }\n    replaced.add(key);\n    return JSON.stringify(replacements[key]);\n  });\n  // Check to see if there's any remaining template variables.\n  let matches = file.match(/VAR_[A-Z_]+/g);\n  if (matches) {\n    throw new Error(`Invariant: Expected to replace all template variables, found ${matches.join(\", \")}`);\n  }\n  // Check to see if any template variable was provided but not used.\n  if (replaced.size !== Object.keys(replacements).length) {\n    // Find the difference between the provided replacements and the replaced\n    // template variables. This will let us notify the user of any template\n    // variables that were not used but were provided.\n    const difference = Object.keys(replacements).filter(key => !replaced.has(key));\n    throw new Error(`Invariant: Expected to replace all template variables, missing ${difference.join(\", \")} in template`);\n  }\n  // Replace the injections.\n  const injected = new Set();\n  if (injections) {\n    // Track all the injections to ensure that we're not missing any.\n    file = file.replaceAll(new RegExp(`// INJECT:(${Object.keys(injections).join(\"|\")})`, \"g\"), (_, key) => {\n      if (!(key in injections)) {\n        throw new Error(`Invariant: Unexpected injection ${key}`);\n      }\n      injected.add(key);\n      return `const ${key} = ${injections[key]}`;\n    });\n  }\n  // Check to see if there's any remaining injections.\n  matches = file.match(/\\/\\/ INJECT:[A-Za-z0-9_]+/g);\n  if (matches) {\n    throw new Error(`Invariant: Expected to inject all injections, found ${matches.join(\", \")}`);\n  }\n  // Check to see if any injection was provided but not used.\n  if (injected.size !== Object.keys(injections ?? {}).length) {\n    // Find the difference between the provided injections and the injected\n    // injections. This will let us notify the user of any injections that were\n    // not used but were provided.\n    const difference = Object.keys(injections ?? {}).filter(key => !injected.has(key));\n    throw new Error(`Invariant: Expected to inject all injections, missing ${difference.join(\", \")} in template`);\n  }\n  return file;\n}","map":{"version":3,"names":["loadEntrypoint","PACKAGE_ROOT","_path","default","normalize","join","__dirname","TEMPLATE_FOLDER","TEMPLATES_ESM_FOLDER","entrypoint","replacements","injections","filepath","resolve","file","_promises","readFile","count","replaceAll","_","fromRequest","importRequest","relative","replace","startsWith","Error","JSON","stringify","replaced","Set","RegExp","Object","keys","map","k","match","key","parse","add","matches","size","length","difference","filter","has","injected"],"sources":["../../src/build/load-entrypoint.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}