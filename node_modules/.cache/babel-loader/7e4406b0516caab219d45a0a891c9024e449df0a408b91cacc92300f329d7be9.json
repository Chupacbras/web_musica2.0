{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"flatReaddir\", {\n  enumerable: true,\n  get: function () {\n    return flatReaddir;\n  }\n});\nconst _path = require(\"path\");\nconst _promises = /*#__PURE__*/_interop_require_default(require(\"fs/promises\"));\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nasync function flatReaddir(dir, includes) {\n  const dirents = await _promises.default.opendir(dir);\n  const result = [];\n  for await (const part of dirents) {\n    let shouldOmit = part.isDirectory() || !includes.some(include => include.test(part.name));\n    if (part.isSymbolicLink()) {\n      const stats = await _promises.default.stat((0, _path.join)(dir, part.name));\n      shouldOmit = stats.isDirectory();\n    }\n    if (!shouldOmit) {\n      result.push((0, _path.join)(dir, part.name));\n    }\n  }\n  return result;\n}","map":{"version":3,"names":["flatReaddir","dir","includes","dirents","_promises","default","opendir","result","part","shouldOmit","isDirectory","some","include","test","name","isSymbolicLink","stats","stat","_path","join","push"],"sources":["../../src/lib/flat-readdir.ts"],"sourcesContent":[null],"mappings":";;;;;+BAGsB;;;WAAAA,WAAA;;;sBAHD;gEACN;;;;;;AAER,eAAeA,YAAYC,GAAW,EAAEC,QAAkB;EAC/D,MAAMC,OAAA,GAAU,MAAMC,SAAA,CAAAC,OAAE,CAACC,OAAO,CAACL,GAAA;EACjC,MAAMM,MAAA,GAAS,EAAE;EAEjB,WAAW,MAAMC,IAAA,IAAQL,OAAA,EAAS;IAChC,IAAIM,UAAA,GACFD,IAAA,CAAKE,WAAW,MAAM,CAACR,QAAA,CAASS,IAAI,CAAEC,OAAA,IAAYA,OAAA,CAAQC,IAAI,CAACL,IAAA,CAAKM,IAAI;IAE1E,IAAIN,IAAA,CAAKO,cAAc,IAAI;MACzB,MAAMC,KAAA,GAAQ,MAAMZ,SAAA,CAAAC,OAAE,CAACY,IAAI,CAAC,IAAAC,KAAA,CAAAC,IAAI,EAAClB,GAAA,EAAKO,IAAA,CAAKM,IAAI;MAC/CL,UAAA,GAAaO,KAAA,CAAMN,WAAW;IAChC;IAEA,IAAI,CAACD,UAAA,EAAY;MACfF,MAAA,CAAOa,IAAI,CAAC,IAAAF,KAAA,CAAAC,IAAI,EAAClB,GAAA,EAAKO,IAAA,CAAKM,IAAI;IACjC;EACF;EAEA,OAAOP,MAAA;AACT"},"metadata":{},"sourceType":"script","externalDependencies":[]}