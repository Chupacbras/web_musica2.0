{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"runLintCheck\", {\n  enumerable: true,\n  get: function () {\n    return runLintCheck;\n  }\n});\nconst _fs = require(\"fs\");\nconst _chalk = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/chalk\"));\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nconst _findup = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/find-up\"));\nconst _semver = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/semver\"));\nconst _commentjson = /*#__PURE__*/_interop_require_wildcard(require(\"next/dist/compiled/comment-json\"));\nconst _customFormatter = require(\"./customFormatter\");\nconst _writeDefaultConfig = require(\"./writeDefaultConfig\");\nconst _hasEslintConfiguration = require(\"./hasEslintConfiguration\");\nconst _writeOutputFile = require(\"./writeOutputFile\");\nconst _constants = require(\"../constants\");\nconst _findpagesdir = require(\"../find-pages-dir\");\nconst _installdependencies = require(\"../install-dependencies\");\nconst _hasnecessarydependencies = require(\"../has-necessary-dependencies\");\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"../../build/output/log\"));\nconst _iserror = /*#__PURE__*/_interop_require_wildcard(require(\"../is-error\"));\nconst _getpkgmanager = require(\"../helpers/get-pkg-manager\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\n// 0 is off, 1 is warn, 2 is error. See https://eslint.org/docs/user-guide/configuring/rules#configuring-rules\nconst VALID_SEVERITY = [\"off\", \"warn\", \"error\"];\nfunction isValidSeverity(severity) {\n  return VALID_SEVERITY.includes(severity);\n}\nconst requiredPackages = [{\n  file: \"eslint\",\n  pkg: \"eslint\",\n  exportsRestrict: false\n}, {\n  file: \"eslint-config-next\",\n  pkg: \"eslint-config-next\",\n  exportsRestrict: false\n}];\nasync function cliPrompt() {\n  console.log(_chalk.default.bold(`${_chalk.default.cyan(\"?\")} How would you like to configure ESLint? https://nextjs.org/docs/basic-features/eslint`));\n  try {\n    const cliSelect = (await Promise.resolve(require(\"next/dist/compiled/cli-select\"))).default;\n    const {\n      value\n    } = await cliSelect({\n      values: _constants.ESLINT_PROMPT_VALUES,\n      valueRenderer: ({\n        title,\n        recommended\n      }, selected) => {\n        const name = selected ? _chalk.default.bold.underline.cyan(title) : title;\n        return name + (recommended ? _chalk.default.bold.yellow(\" (recommended)\") : \"\");\n      },\n      selected: _chalk.default.cyan(\"❯ \"),\n      unselected: \"  \"\n    });\n    return {\n      config: (value == null ? void 0 : value.config) ?? null\n    };\n  } catch {\n    return {\n      config: null\n    };\n  }\n}\nasync function lint(baseDir, lintDirs, eslintrcFile, pkgJsonPath, {\n  lintDuringBuild = false,\n  eslintOptions = null,\n  reportErrorsOnly = false,\n  maxWarnings = -1,\n  formatter = null,\n  outputFile = null\n}) {\n  try {\n    var _mod_CLIEngine, _ESLint_getErrorResults;\n    // Load ESLint after we're sure it exists:\n    const deps = await (0, _hasnecessarydependencies.hasNecessaryDependencies)(baseDir, requiredPackages);\n    const packageManager = (0, _getpkgmanager.getPkgManager)(baseDir);\n    if (deps.missing.some(dep => dep.pkg === \"eslint\")) {\n      _log.error(`ESLint must be installed${lintDuringBuild ? \" in order to run during builds:\" : \":\"} ${_chalk.default.bold.cyan((packageManager === \"yarn\" ? \"yarn add --dev\" : packageManager === \"pnpm\" ? \"pnpm install --save-dev\" : \"npm install --save-dev\") + \" eslint\")}`);\n      return null;\n    }\n    const mod = await Promise.resolve(require(deps.resolved.get(\"eslint\")));\n    const {\n      ESLint\n    } = mod;\n    let eslintVersion = (ESLint == null ? void 0 : ESLint.version) ?? ((_mod_CLIEngine = mod.CLIEngine) == null ? void 0 : _mod_CLIEngine.version);\n    if (!eslintVersion || _semver.default.lt(eslintVersion, \"7.0.0\")) {\n      return `${_chalk.default.red(\"error\")} - Your project has an older version of ESLint installed${eslintVersion ? \" (\" + eslintVersion + \")\" : \"\"}. Please upgrade to ESLint version 7 or above`;\n    }\n    let options = {\n      useEslintrc: true,\n      baseConfig: {},\n      errorOnUnmatchedPattern: false,\n      extensions: [\".js\", \".jsx\", \".ts\", \".tsx\"],\n      cache: true,\n      ...eslintOptions\n    };\n    let eslint = new ESLint(options);\n    let nextEslintPluginIsEnabled = false;\n    const nextRulesEnabled = new Map();\n    for (const configFile of [eslintrcFile, pkgJsonPath]) {\n      var _completeConfig_plugins;\n      if (!configFile) continue;\n      const completeConfig = await eslint.calculateConfigForFile(configFile);\n      if ((_completeConfig_plugins = completeConfig.plugins) == null ? void 0 : _completeConfig_plugins.includes(\"@next/next\")) {\n        nextEslintPluginIsEnabled = true;\n        for (const [name, [severity]] of Object.entries(completeConfig.rules)) {\n          if (!name.startsWith(\"@next/next/\")) {\n            continue;\n          }\n          if (typeof severity === \"number\" && severity >= 0 && severity < VALID_SEVERITY.length) {\n            nextRulesEnabled.set(name, VALID_SEVERITY[severity]);\n          } else if (typeof severity === \"string\" && isValidSeverity(severity)) {\n            nextRulesEnabled.set(name, severity);\n          }\n        }\n        break;\n      }\n    }\n    const pagesDir = (0, _findpagesdir.findPagesDir)(baseDir).pagesDir;\n    const pagesDirRules = pagesDir ? [\"@next/next/no-html-link-for-pages\"] : [];\n    if (nextEslintPluginIsEnabled) {\n      let updatedPagesDir = false;\n      for (const rule of pagesDirRules) {\n        var _options_baseConfig_rules, _options_baseConfig_rules1;\n        if (!((_options_baseConfig_rules = options.baseConfig.rules) == null ? void 0 : _options_baseConfig_rules[rule]) && !((_options_baseConfig_rules1 = options.baseConfig.rules) == null ? void 0 : _options_baseConfig_rules1[rule.replace(\"@next/next\", \"@next/babel-plugin-next\")])) {\n          if (!options.baseConfig.rules) {\n            options.baseConfig.rules = {};\n          }\n          options.baseConfig.rules[rule] = [1, pagesDir];\n          updatedPagesDir = true;\n        }\n      }\n      if (updatedPagesDir) {\n        eslint = new ESLint(options);\n      }\n    } else {\n      _log.warn(\"\");\n      _log.warn(\"The Next.js plugin was not detected in your ESLint configuration. See https://nextjs.org/docs/basic-features/eslint#migrating-existing-config\");\n    }\n    const lintStart = process.hrtime();\n    let results = await eslint.lintFiles(lintDirs);\n    let selectedFormatter = null;\n    if (options.fix) await ESLint.outputFixes(results);\n    if (reportErrorsOnly) results = await ESLint.getErrorResults(results) // Only return errors if --quiet flag is used\n    ;\n\n    if (formatter) selectedFormatter = await eslint.loadFormatter(formatter);\n    const formattedResult = (0, _customFormatter.formatResults)(baseDir, results, selectedFormatter == null ? void 0 : selectedFormatter.format);\n    const lintEnd = process.hrtime(lintStart);\n    const totalWarnings = results.reduce((sum, file) => sum + file.warningCount, 0);\n    if (outputFile) await (0, _writeOutputFile.writeOutputFile)(outputFile, formattedResult.output);\n    return {\n      output: formattedResult.outputWithMessages,\n      isError: ((_ESLint_getErrorResults = ESLint.getErrorResults(results)) == null ? void 0 : _ESLint_getErrorResults.length) > 0 || maxWarnings >= 0 && totalWarnings > maxWarnings,\n      eventInfo: {\n        durationInSeconds: lintEnd[0],\n        eslintVersion: eslintVersion,\n        lintedFilesCount: results.length,\n        lintFix: !!options.fix,\n        nextEslintPluginVersion: nextEslintPluginIsEnabled && deps.resolved.has(\"eslint-config-next\") ? require(_path.default.join(_path.default.dirname(deps.resolved.get(\"eslint-config-next\")), \"package.json\")).version : null,\n        nextEslintPluginErrorsCount: formattedResult.totalNextPluginErrorCount,\n        nextEslintPluginWarningsCount: formattedResult.totalNextPluginWarningCount,\n        nextRulesEnabled: Object.fromEntries(nextRulesEnabled)\n      }\n    };\n  } catch (err) {\n    if (lintDuringBuild) {\n      _log.error(`ESLint: ${(0, _iserror.default)(err) && err.message ? err.message.replace(/\\n/g, \" \") : err}`);\n      return null;\n    } else {\n      throw (0, _iserror.getProperError)(err);\n    }\n  }\n}\nasync function runLintCheck(baseDir, lintDirs, opts) {\n  const {\n    lintDuringBuild = false,\n    eslintOptions = null,\n    reportErrorsOnly = false,\n    maxWarnings = -1,\n    formatter = null,\n    outputFile = null,\n    strict = false\n  } = opts;\n  try {\n    // Find user's .eslintrc file\n    // See: https://eslint.org/docs/user-guide/configuring/configuration-files#configuration-file-formats\n    const eslintrcFile = (await (0, _findup.default)([\".eslintrc.js\", \".eslintrc.cjs\", \".eslintrc.yaml\", \".eslintrc.yml\", \".eslintrc.json\", \".eslintrc\"], {\n      cwd: baseDir\n    })) ?? null;\n    const pkgJsonPath = (await (0, _findup.default)(\"package.json\", {\n      cwd: baseDir\n    })) ?? null;\n    let packageJsonConfig = null;\n    if (pkgJsonPath) {\n      const pkgJsonContent = await _fs.promises.readFile(pkgJsonPath, {\n        encoding: \"utf8\"\n      });\n      packageJsonConfig = _commentjson.parse(pkgJsonContent);\n    }\n    const config = await (0, _hasEslintConfiguration.hasEslintConfiguration)(eslintrcFile, packageJsonConfig);\n    let deps;\n    if (config.exists) {\n      // Run if ESLint config exists\n      return await lint(baseDir, lintDirs, eslintrcFile, pkgJsonPath, {\n        lintDuringBuild,\n        eslintOptions,\n        reportErrorsOnly,\n        maxWarnings,\n        formatter,\n        outputFile\n      });\n    } else {\n      // Display warning if no ESLint configuration is present inside\n      // config file during \"next build\", no warning is shown when\n      // no eslintrc file is present\n      if (lintDuringBuild) {\n        if (config.emptyPkgJsonConfig || config.emptyEslintrc) {\n          _log.warn(`No ESLint configuration detected. Run ${_chalk.default.bold.cyan(\"next lint\")} to begin setup`);\n        }\n        return null;\n      } else {\n        // Ask user what config they would like to start with for first time \"next lint\" setup\n        const {\n          config: selectedConfig\n        } = strict ? _constants.ESLINT_PROMPT_VALUES.find(opt => opt.title === \"Strict\") : await cliPrompt();\n        if (selectedConfig == null) {\n          // Show a warning if no option is selected in prompt\n          _log.warn(\"If you set up ESLint yourself, we recommend adding the Next.js ESLint plugin. See https://nextjs.org/docs/basic-features/eslint#migrating-existing-config\");\n          return null;\n        } else {\n          // Check if necessary deps installed, and install any that are missing\n          deps = await (0, _hasnecessarydependencies.hasNecessaryDependencies)(baseDir, requiredPackages);\n          if (deps.missing.length > 0) await (0, _installdependencies.installDependencies)(baseDir, deps.missing, true);\n          // Write default ESLint config.\n          // Check for /pages and src/pages is to make sure this happens in Next.js folder\n          if ((0, _fs.existsSync)(_path.default.join(baseDir, \"pages\")) || (0, _fs.existsSync)(_path.default.join(baseDir, \"src/pages\"))) {\n            await (0, _writeDefaultConfig.writeDefaultConfig)(baseDir, config, selectedConfig, eslintrcFile, pkgJsonPath, packageJsonConfig);\n          }\n        }\n        _log.ready(`ESLint has successfully been configured. Run ${_chalk.default.bold.cyan(\"next lint\")} again to view warnings and errors.`);\n        return null;\n      }\n    }\n  } catch (err) {\n    throw err;\n  }\n}","map":{"version":3,"names":["runLintCheck","VALID_SEVERITY","isValidSeverity","severity","includes","requiredPackages","file","pkg","exportsRestrict","cliPrompt","console","log","_chalk","default","bold","cyan","cliSelect","Promise","resolve","require","value","values","_constants","ESLINT_PROMPT_VALUES","valueRenderer","title","recommended","selected","name","underline","yellow","unselected","config","lint","baseDir","lintDirs","eslintrcFile","pkgJsonPath","lintDuringBuild","eslintOptions","reportErrorsOnly","maxWarnings","formatter","outputFile","_mod_CLIEngine","_ESLint_getErrorResults","deps","_hasnecessarydependencies","hasNecessaryDependencies","packageManager","_getpkgmanager","getPkgManager","missing","some","dep","_log","error","mod","resolved","get","ESLint","eslintVersion","version","CLIEngine","_semver","lt","red","options","useEslintrc","baseConfig","errorOnUnmatchedPattern","extensions","cache","eslint","nextEslintPluginIsEnabled","nextRulesEnabled","Map","configFile","_completeConfig_plugins","completeConfig","calculateConfigForFile","plugins","Object","entries","rules","startsWith","length","set","pagesDir","_findpagesdir","findPagesDir","pagesDirRules","updatedPagesDir","rule","_options_baseConfig_rules","_options_baseConfig_rules1","replace","warn","lintStart","process","hrtime","results","lintFiles","selectedFormatter","fix","outputFixes","getErrorResults","loadFormatter","formattedResult","_customFormatter","formatResults","format","lintEnd","totalWarnings","reduce","sum","warningCount","_writeOutputFile","writeOutputFile","output","outputWithMessages","isError","eventInfo","durationInSeconds","lintedFilesCount","lintFix","nextEslintPluginVersion","has","_path","join","dirname","nextEslintPluginErrorsCount","totalNextPluginErrorCount","nextEslintPluginWarningsCount","totalNextPluginWarningCount","fromEntries","err","_iserror","message","getProperError","opts","strict","_findup","cwd","packageJsonConfig","pkgJsonContent","_fs","promises","readFile","encoding","_commentjson","parse","_hasEslintConfiguration","hasEslintConfiguration","exists","emptyPkgJsonConfig","emptyEslintrc","selectedConfig","find","opt","_installdependencies","installDependencies","existsSync","_writeDefaultConfig","writeDefaultConfig","ready"],"sources":["../../../src/lib/eslint/runLintCheck.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}