{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"SubresourceIntegrityPlugin\", {\n  enumerable: true,\n  get: function () {\n    return SubresourceIntegrityPlugin;\n  }\n});\nconst _webpack = require(\"next/dist/compiled/webpack/webpack\");\nconst _crypto = /*#__PURE__*/_interop_require_default(require(\"crypto\"));\nconst _constants = require(\"../../../shared/lib/constants\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst PLUGIN_NAME = \"SubresourceIntegrityPlugin\";\nclass SubresourceIntegrityPlugin {\n  constructor(algorithm) {\n    this.algorithm = algorithm;\n  }\n  apply(compiler) {\n    compiler.hooks.make.tap(PLUGIN_NAME, compilation => {\n      compilation.hooks.afterOptimizeAssets.tap({\n        name: PLUGIN_NAME,\n        stage: _webpack.webpack.Compilation.PROCESS_ASSETS_STAGE_ADDITIONS\n      }, assets => {\n        // Collect all the assets.\n        let files = new Set();\n        for (const asset of compilation.getAssets()) {\n          files.add(asset.name);\n        }\n        // For each file, deduped, calculate the file hash.\n        const hashes = {};\n        for (const file of files.values()) {\n          // Get the buffer for the asset.\n          const asset = assets[file];\n          if (!asset) {\n            throw new Error(`could not get asset: ${file}`);\n          }\n          // Get the buffer for the asset.\n          const buffer = asset.buffer();\n          // Create the hash for the content.\n          const hash = _crypto.default.createHash(this.algorithm).update(buffer).digest().toString(\"base64\");\n          hashes[file] = `${this.algorithm}-${hash}`;\n        }\n        const json = JSON.stringify(hashes, null, 2);\n        const file = \"server/\" + _constants.SUBRESOURCE_INTEGRITY_MANIFEST;\n        assets[file + \".js\"] = new _webpack.sources.RawSource(`self.__SUBRESOURCE_INTEGRITY_MANIFEST=${JSON.stringify(json)}`);\n        assets[file + \".json\"] = new _webpack.sources.RawSource(json);\n      });\n    });\n  }\n}","map":{"version":3,"names":["SubresourceIntegrityPlugin","PLUGIN_NAME","constructor","algorithm","apply","compiler","hooks","make","tap","compilation","afterOptimizeAssets","name","stage","_webpack","webpack","Compilation","PROCESS_ASSETS_STAGE_ADDITIONS","assets","files","Set","asset","getAssets","add","hashes","file","values","Error","buffer","hash","_crypto","default","createHash","update","digest","toString","json","JSON","stringify","_constants","SUBRESOURCE_INTEGRITY_MANIFEST","sources","RawSource"],"sources":["../../../../src/build/webpack/plugins/subresource-integrity-plugin.ts"],"sourcesContent":[null],"mappings":";;;;;+BAQa;;;WAAAA,0BAAA;;;yBARoB;8DACd;2BAC4B;;;;;;AAE/C,MAAMC,WAAA,GAAc;AAIb,MAAMD,0BAAA;EACXE,YAA6BC,SAAA,EAA0C;qBAA1CA,SAAA;EAA2C;EAEjEC,MAAMC,QAA0B,EAAE;IACvCA,QAAA,CAASC,KAAK,CAACC,IAAI,CAACC,GAAG,CAACP,WAAA,EAAcQ,WAAA;MACpCA,WAAA,CAAYH,KAAK,CAACI,mBAAmB,CAACF,GAAG,CACvC;QACEG,IAAA,EAAMV,WAAA;QACNW,KAAA,EAAOC,QAAA,CAAAC,OAAO,CAACC,WAAW,CAACC;MAC7B,GACCC,MAAA;QACC;QACA,IAAIC,KAAA,GAAQ,IAAIC,GAAA;QAChB,KAAK,MAAMC,KAAA,IAASX,WAAA,CAAYY,SAAS,IAAI;UAC3CH,KAAA,CAAMI,GAAG,CAACF,KAAA,CAAMT,IAAI;QACtB;QAEA;QACA,MAAMY,MAAA,GAAiC,CAAC;QACxC,KAAK,MAAMC,IAAA,IAAQN,KAAA,CAAMO,MAAM,IAAI;UACjC;UACA,MAAML,KAAA,GAAQH,MAAM,CAACO,IAAA,CAAK;UAC1B,IAAI,CAACJ,KAAA,EAAO;YACV,MAAM,IAAIM,KAAA,CAAO,wBAAuBF,IAAK,EAAC;UAChD;UAEA;UACA,MAAMG,MAAA,GAASP,KAAA,CAAMO,MAAM;UAE3B;UACA,MAAMC,IAAA,GAAOC,OAAA,CAAAC,OAAM,CAChBC,UAAU,CAAC,IAAI,CAAC5B,SAAS,EACzB6B,MAAM,CAACL,MAAA,EACPM,MAAM,GACNC,QAAQ,CAAC;UAEZX,MAAM,CAACC,IAAA,CAAK,GAAI,GAAE,IAAI,CAACrB,SAAU,IAAGyB,IAAK,EAAC;QAC5C;QAEA,MAAMO,IAAA,GAAOC,IAAA,CAAKC,SAAS,CAACd,MAAA,EAAQ,MAAM;QAC1C,MAAMC,IAAA,GAAO,YAAYc,UAAA,CAAAC,8BAA8B;QACvDtB,MAAM,CAACO,IAAA,GAAO,MAAM,GAAG,IAAIX,QAAA,CAAA2B,OAAO,CAACC,SAAS,CACzC,yCAAwCL,IAAA,CAAKC,SAAS,CAACF,IAAA,CAAM,EAAC;QAIjElB,MAAM,CAACO,IAAA,GAAO,QAAQ,GAAG,IAAIX,QAAA,CAAA2B,OAAO,CAACC,SAAS,CAC5CN,IAAA;MAIJ;IAEJ;EACF;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}