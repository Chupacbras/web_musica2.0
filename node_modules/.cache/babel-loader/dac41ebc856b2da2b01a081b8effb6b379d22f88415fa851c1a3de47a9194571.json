{"ast":null,"code":"/**\n * Given a URL as a string and a base URL it will make the URL relative\n * if the parsed protocol and host is the same as the one in the base\n * URL. Otherwise it returns the same URL string.\n */\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"relativizeURL\", {\n  enumerable: true,\n  get: function () {\n    return relativizeURL;\n  }\n});\nfunction relativizeURL(url, base) {\n  const baseURL = typeof base === \"string\" ? new URL(base) : base;\n  const relative = new URL(url, base);\n  const origin = baseURL.protocol + \"//\" + baseURL.host;\n  return relative.protocol + \"//\" + relative.host === origin ? relative.toString().replace(origin, \"\") : relative.toString();\n}","map":{"version":3,"names":["relativizeURL","url","base","baseURL","URL","relative","origin","protocol","host","toString","replace"],"sources":["../../../../../src/shared/lib/router/utils/relativize-url.ts"],"sourcesContent":[null],"mappings":"AAAA;;;;GAIC;;;;;+BACe;;;WAAAA,aAAA;;;AAAT,SAASA,cAAcC,GAAoB,EAAEC,IAAkB;EACpE,MAAMC,OAAA,GAAU,OAAOD,IAAA,KAAS,WAAW,IAAIE,GAAA,CAAIF,IAAA,IAAQA,IAAA;EAC3D,MAAMG,QAAA,GAAW,IAAID,GAAA,CAAIH,GAAA,EAAKC,IAAA;EAC9B,MAAMI,MAAA,GAASH,OAAG,CAAQI,QAAQ,GAAC,OAAIJ,OAAA,CAAQK,IAAI;EACnD,OAAOH,QAAG,CAASE,QAAQ,GAAC,OAAIF,QAAA,CAASG,IAAI,KAAOF,MAAA,GAChDD,QAAA,CAASI,QAAQ,GAAGC,OAAO,CAACJ,MAAA,EAAQ,MACpCD,QAAA,CAASI,QAAQ;AACvB"},"metadata":{},"sourceType":"script","externalDependencies":[]}