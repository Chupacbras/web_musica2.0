{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"renderToHTMLOrFlight\", {\n  enumerable: true,\n  get: function () {\n    return renderToHTMLOrFlight;\n  }\n});\nconst _react = /*#__PURE__*/_interop_require_default(require(\"react\"));\nconst _createservercomponentsrenderer = require(\"./create-server-components-renderer\");\nconst _renderresult = /*#__PURE__*/_interop_require_default(require(\"../render-result\"));\nconst _nodewebstreamshelper = require(\"../stream-utils/node-web-streams-helper\");\nconst _matchsegments = require(\"../../client/components/match-segments\");\nconst _internalutils = require(\"../internal-utils\");\nconst _approuterheaders = require(\"../../client/components/app-router-headers\");\nconst _metadata = require(\"../../lib/metadata/metadata\");\nconst _requestasyncstoragewrapper = require(\"../async-storage/request-async-storage-wrapper\");\nconst _staticgenerationasyncstoragewrapper = require(\"../async-storage/static-generation-async-storage-wrapper\");\nconst _clientreference = require(\"../../lib/client-reference\");\nconst _appdirmodule = require(\"../lib/app-dir-module\");\nconst _notfound = require(\"../../client/components/not-found\");\nconst _redirect = require(\"../../client/components/redirect\");\nconst _getredirectstatuscodefromerror = require(\"../../client/components/get-redirect-status-code-from-error\");\nconst _patchfetch = require(\"../lib/patch-fetch\");\nconst _constants = require(\"../lib/trace/constants\");\nconst _tracer = require(\"../lib/trace/tracer\");\nconst _interopdefault = require(\"./interop-default\");\nconst _preloadcomponent = require(\"./preload-component\");\nconst _flightrenderresult = require(\"./flight-render-result\");\nconst _createerrorhandler = require(\"./create-error-handler\");\nconst _getshortdynamicparamtype = require(\"./get-short-dynamic-param-type\");\nconst _getsegmentparam = require(\"./get-segment-param\");\nconst _getcssinlinedlinktags = require(\"./get-css-inlined-link-tags\");\nconst _getpreloadablefonts = require(\"./get-preloadable-fonts\");\nconst _getscriptnoncefromheader = require(\"./get-script-nonce-from-header\");\nconst _rendertostring = require(\"./render-to-string\");\nconst _parseandvalidateflightrouterstate = require(\"./parse-and-validate-flight-router-state\");\nconst _validateurl = require(\"./validate-url\");\nconst _createflightrouterstatefromloadertree = require(\"./create-flight-router-state-from-loader-tree\");\nconst _actionhandler = require(\"./action-handler\");\nconst _nossrerror = require(\"../../shared/lib/lazy-dynamic/no-ssr-error\");\nconst _log = require(\"../../build/output/log\");\nconst _requestcookies = require(\"../web/spec-extension/adapters/request-cookies\");\nconst _serverinsertedhtml = require(\"./server-inserted-html\");\nconst _requiredscripts = require(\"./required-scripts\");\nconst _addpathprefix = require(\"../../shared/lib/router/utils/add-path-prefix\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction createNotFoundLoaderTree(loaderTree) {\n  // Align the segment with parallel-route-default in next-app-loader\n  return [\"\", {}, loaderTree[2]];\n}\n/* This method is important for intercepted routes to function:\n * when a route is intercepted, e.g. /blog/[slug], it will be rendered\n * with the layout of the previous page, e.g. /profile/[id]. The problem is\n * that the loader tree needs to know the dynamic param in order to render (id and slug in the example).\n * Normally they are read from the path but since we are intercepting the route, the path would not contain id,\n * so we need to read it from the router state.\n */\nfunction findDynamicParamFromRouterState(providedFlightRouterState, segment) {\n  if (!providedFlightRouterState) {\n    return null;\n  }\n  const treeSegment = providedFlightRouterState[0];\n  if ((0, _matchsegments.canSegmentBeOverridden)(segment, treeSegment)) {\n    if (!Array.isArray(treeSegment) || Array.isArray(segment)) {\n      return null;\n    }\n    return {\n      param: treeSegment[0],\n      value: treeSegment[1],\n      treeSegment: treeSegment,\n      type: treeSegment[2]\n    };\n  }\n  for (const parallelRouterState of Object.values(providedFlightRouterState[1])) {\n    const maybeDynamicParam = findDynamicParamFromRouterState(parallelRouterState, segment);\n    if (maybeDynamicParam) {\n      return maybeDynamicParam;\n    }\n  }\n  return null;\n}\nfunction hasLoadingComponentInTree(tree) {\n  const [, parallelRoutes, {\n    loading\n  }] = tree;\n  if (loading) {\n    return true;\n  }\n  return Object.values(parallelRoutes).some(parallelRoute => hasLoadingComponentInTree(parallelRoute));\n}\nconst renderToHTMLOrFlight = (req, res, pagePath, query, renderOpts) => {\n  const isFlight = req.headers[_approuterheaders.RSC.toLowerCase()] !== undefined;\n  const pathname = (0, _validateurl.validateURL)(req.url);\n  // A unique request timestamp used by development to ensure that it's\n  // consistent and won't change during this request. This is important to\n  // avoid that resources can be deduped by React Float if the same resource is\n  // rendered or preloaded multiple times: `<link href=\"a.css?v={Date.now()}\"/>`.\n  const DEV_REQUEST_TS = Date.now();\n  const {\n    buildManifest,\n    subresourceIntegrityManifest,\n    serverActionsManifest,\n    ComponentMod,\n    dev,\n    nextFontManifest,\n    supportsDynamicHTML,\n    nextConfigOutput,\n    serverActionsBodySizeLimit,\n    buildId,\n    deploymentId,\n    appDirDevErrorLogger\n  } = renderOpts;\n  // We need to expose the bundled `require` API globally for\n  // react-server-dom-webpack. This is a hack until we find a better way.\n  if (ComponentMod.__next_app__) {\n    // @ts-ignore\n    globalThis.__next_require__ = ComponentMod.__next_app__.require;\n    // @ts-ignore\n    globalThis.__next_chunk_load__ = ComponentMod.__next_app__.loadChunk;\n  }\n  const extraRenderResultMeta = {};\n  const appUsingSizeAdjust = !!(nextFontManifest == null ? void 0 : nextFontManifest.appUsingSizeAdjust);\n  const clientReferenceManifest = renderOpts.clientReferenceManifest;\n  const capturedErrors = [];\n  const allCapturedErrors = [];\n  const isNextExport = !!renderOpts.nextExport;\n  const serverComponentsErrorHandler = (0, _createerrorhandler.createErrorHandler)({\n    _source: \"serverComponentsRenderer\",\n    dev,\n    isNextExport,\n    errorLogger: appDirDevErrorLogger,\n    capturedErrors\n  });\n  const flightDataRendererErrorHandler = (0, _createerrorhandler.createErrorHandler)({\n    _source: \"flightDataRenderer\",\n    dev,\n    isNextExport,\n    errorLogger: appDirDevErrorLogger,\n    capturedErrors\n  });\n  const htmlRendererErrorHandler = (0, _createerrorhandler.createErrorHandler)({\n    _source: \"htmlRenderer\",\n    dev,\n    isNextExport,\n    errorLogger: appDirDevErrorLogger,\n    capturedErrors,\n    allCapturedErrors\n  });\n  (0, _patchfetch.patchFetch)(ComponentMod);\n  /**\n  * Rules of Static & Dynamic HTML:\n  *\n  *    1.) We must generate static HTML unless the caller explicitly opts\n  *        in to dynamic HTML support.\n  *\n  *    2.) If dynamic HTML support is requested, we must honor that request\n  *        or throw an error. It is the sole responsibility of the caller to\n  *        ensure they aren't e.g. requesting dynamic HTML for an AMP page.\n  *\n  * These rules help ensure that other existing features like request caching,\n  * coalescing, and ISR continue working as intended.\n  */\n  const generateStaticHTML = supportsDynamicHTML !== true;\n  const staticGenerationAsyncStorage = ComponentMod.staticGenerationAsyncStorage;\n  const requestAsyncStorage = ComponentMod.requestAsyncStorage;\n  const staticGenerationBailout = ComponentMod.staticGenerationBailout;\n  // we wrap the render in an AsyncLocalStorage context\n  const wrappedRender = async () => {\n    var _getTracer_getRootSpanAttributes, _staticGenerationStore_tags;\n    const staticGenerationStore = staticGenerationAsyncStorage.getStore();\n    if (!staticGenerationStore) {\n      throw new Error(`Invariant: Render expects to have staticGenerationAsyncStorage, none found`);\n    }\n    staticGenerationStore.fetchMetrics = [];\n    extraRenderResultMeta.fetchMetrics = staticGenerationStore.fetchMetrics;\n    const requestStore = requestAsyncStorage.getStore();\n    if (!requestStore) {\n      throw new Error(`Invariant: Render expects to have requestAsyncStorage, none found`);\n    }\n    // don't modify original query object\n    query = {\n      ...query\n    };\n    (0, _internalutils.stripInternalQueries)(query);\n    const isPrefetch = req.headers[_approuterheaders.NEXT_ROUTER_PREFETCH.toLowerCase()] !== undefined;\n    /**\n    * Router state provided from the client-side router. Used to handle rendering from the common layout down.\n    */\n    let providedFlightRouterState = isFlight ? (0, _parseandvalidateflightrouterstate.parseAndValidateFlightRouterState)(req.headers[_approuterheaders.NEXT_ROUTER_STATE_TREE.toLowerCase()]) : undefined;\n    /**\n    * The tree created in next-app-loader that holds component segments and modules\n    */\n    const loaderTree = ComponentMod.tree;\n    /**\n    * The metadata items array created in next-app-loader with all relevant information\n    * that we need to resolve the final metadata.\n    */\n    let requestId;\n    if (process.env.NEXT_RUNTIME === \"edge\") {\n      requestId = crypto.randomUUID();\n    } else {\n      requestId = require(\"next/dist/compiled/nanoid\").nanoid();\n    }\n    const LayoutRouter = ComponentMod.LayoutRouter;\n    const RenderFromTemplateContext = ComponentMod.RenderFromTemplateContext;\n    const createSearchParamsBailoutProxy = ComponentMod.createSearchParamsBailoutProxy;\n    const StaticGenerationSearchParamsBailoutProvider = ComponentMod.StaticGenerationSearchParamsBailoutProvider;\n    const isStaticGeneration = staticGenerationStore.isStaticGeneration;\n    // During static generation we need to call the static generation bailout when reading searchParams\n    const providedSearchParams = isStaticGeneration ? createSearchParamsBailoutProxy() : query;\n    const searchParamsProps = {\n      searchParams: providedSearchParams\n    };\n    /**\n    * Server Context is specifically only available in Server Components.\n    * It has to hold values that can't change while rendering from the common layout down.\n    * An example of this would be that `headers` are available but `searchParams` are not because that'd mean we have to render from the root layout down on all requests.\n    */\n    const serverContexts = [[\"WORKAROUND\", null]];\n    /**\n    * Dynamic parameters. E.g. when you visit `/dashboard/vercel` which is rendered by `/dashboard/[slug]` the value will be {\"slug\": \"vercel\"}.\n    */\n    const params = renderOpts.params ?? {};\n    /**\n    * Parse the dynamic segment and return the associated value.\n    */\n    const getDynamicParamFromSegment = (\n    // [slug] / [[slug]] / [...slug]\n    segment) => {\n      const segmentParam = (0, _getsegmentparam.getSegmentParam)(segment);\n      if (!segmentParam) {\n        return null;\n      }\n      const key = segmentParam.param;\n      let value = params[key];\n      // this is a special marker that will be present for interception routes\n      if (value === \"__NEXT_EMPTY_PARAM__\") {\n        value = undefined;\n      }\n      if (Array.isArray(value)) {\n        value = value.map(i => encodeURIComponent(i));\n      } else if (typeof value === \"string\") {\n        value = encodeURIComponent(value);\n      }\n      if (!value) {\n        // Handle case where optional catchall does not have a value, e.g. `/dashboard/[...slug]` when requesting `/dashboard`\n        if (segmentParam.type === \"optional-catchall\") {\n          const type = _getshortdynamicparamtype.dynamicParamTypes[segmentParam.type];\n          return {\n            param: key,\n            value: null,\n            type: type,\n            // This value always has to be a string.\n            treeSegment: [key, \"\", type]\n          };\n        }\n        return findDynamicParamFromRouterState(providedFlightRouterState, segment);\n      }\n      const type = (0, _getshortdynamicparamtype.getShortDynamicParamType)(segmentParam.type);\n      return {\n        param: key,\n        // The value that is passed to user code.\n        value: value,\n        // The value that is rendered in the router tree.\n        treeSegment: [key, Array.isArray(value) ? value.join(\"/\") : value, type],\n        type: type\n      };\n    };\n    let defaultRevalidate = false;\n    const assetPrefix = renderOpts.assetPrefix || \"\";\n    const getAssetQueryString = addTimestamp => {\n      const isDev = process.env.NODE_ENV === \"development\";\n      let qs = \"\";\n      if (isDev && addTimestamp) {\n        qs += `?v=${DEV_REQUEST_TS}`;\n      }\n      if (deploymentId) {\n        qs += `${isDev ? \"&\" : \"?\"}dpl=${deploymentId}`;\n      }\n      return qs;\n    };\n    const createComponentAndStyles = async ({\n      filePath,\n      getComponent,\n      injectedCSS\n    }) => {\n      const cssHrefs = (0, _getcssinlinedlinktags.getCssInlinedLinkTags)(clientReferenceManifest, filePath, injectedCSS);\n      const styles = cssHrefs ? cssHrefs.map((href, index) => {\n        // In dev, Safari and Firefox will cache the resource during HMR:\n        // - https://github.com/vercel/next.js/issues/5860\n        // - https://bugs.webkit.org/show_bug.cgi?id=187726\n        // Because of this, we add a `?v=` query to bypass the cache during\n        // development. We need to also make sure that the number is always\n        // increasing.\n        const fullHref = `${assetPrefix}/_next/${href}${getAssetQueryString(true)}`;\n        // `Precedence` is an opt-in signal for React to handle resource\n        // loading and deduplication, etc. It's also used as the key to sort\n        // resources so they will be injected in the correct order.\n        // During HMR, it's critical to use different `precedence` values\n        // for different stylesheets, so their order will be kept.\n        // https://github.com/facebook/react/pull/25060\n        const precedence = process.env.NODE_ENV === \"development\" ? \"next_\" + href : \"next\";\n        return /*#__PURE__*/_react.default.createElement(\"link\", {\n          rel: \"stylesheet\",\n          href: fullHref,\n          // @ts-ignore\n          precedence: precedence,\n          key: index\n        });\n      }) : null;\n      const Comp = (0, _interopdefault.interopDefault)(await getComponent());\n      return [Comp, styles];\n    };\n    const getLayerAssets = ({\n      layoutOrPagePath,\n      injectedCSS: injectedCSSWithCurrentLayout,\n      injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout\n    }) => {\n      const stylesheets = layoutOrPagePath ? (0, _getcssinlinedlinktags.getCssInlinedLinkTags)(clientReferenceManifest, layoutOrPagePath, injectedCSSWithCurrentLayout, true) : [];\n      const preloadedFontFiles = layoutOrPagePath ? (0, _getpreloadablefonts.getPreloadableFonts)(nextFontManifest, layoutOrPagePath, injectedFontPreloadTagsWithCurrentLayout) : null;\n      if (preloadedFontFiles) {\n        if (preloadedFontFiles.length) {\n          for (let i = 0; i < preloadedFontFiles.length; i++) {\n            const fontFilename = preloadedFontFiles[i];\n            const ext = /\\.(woff|woff2|eot|ttf|otf)$/.exec(fontFilename)[1];\n            const type = `font/${ext}`;\n            const href = `${assetPrefix}/_next/${fontFilename}`;\n            ComponentMod.preloadFont(href, type);\n          }\n        } else {\n          try {\n            let url = new URL(assetPrefix);\n            ComponentMod.preconnect(url.origin, \"anonymous\");\n          } catch (error) {\n            // assetPrefix must not be a fully qualified domain name. We assume\n            // we should preconnect to same origin instead\n            ComponentMod.preconnect(\"/\", \"anonymous\");\n          }\n        }\n      }\n      const styles = stylesheets ? stylesheets.map((href, index) => {\n        // In dev, Safari and Firefox will cache the resource during HMR:\n        // - https://github.com/vercel/next.js/issues/5860\n        // - https://bugs.webkit.org/show_bug.cgi?id=187726\n        // Because of this, we add a `?v=` query to bypass the cache during\n        // development. We need to also make sure that the number is always\n        // increasing.\n        const fullHref = `${assetPrefix}/_next/${href}${getAssetQueryString(true)}`;\n        // `Precedence` is an opt-in signal for React to handle resource\n        // loading and deduplication, etc. It's also used as the key to sort\n        // resources so they will be injected in the correct order.\n        // During HMR, it's critical to use different `precedence` values\n        // for different stylesheets, so their order will be kept.\n        // https://github.com/facebook/react/pull/25060\n        const precedence = process.env.NODE_ENV === \"development\" ? \"next_\" + href : \"next\";\n        ComponentMod.preloadStyle(fullHref);\n        return /*#__PURE__*/_react.default.createElement(\"link\", {\n          rel: \"stylesheet\",\n          href: fullHref,\n          // @ts-ignore\n          precedence: precedence,\n          key: index\n        });\n      }) : null;\n      return styles;\n    };\n    const parseLoaderTree = tree => {\n      const [segment, parallelRoutes, components] = tree;\n      const {\n        layout\n      } = components;\n      let {\n        page\n      } = components;\n      // a __DEFAULT__ segment means that this route didn't match any of the\n      // segments in the route, so we should use the default page\n      page = segment === \"__DEFAULT__\" ? components.defaultPage : page;\n      const layoutOrPagePath = (layout == null ? void 0 : layout[1]) || (page == null ? void 0 : page[1]);\n      return {\n        page,\n        segment,\n        components,\n        layoutOrPagePath,\n        parallelRoutes\n      };\n    };\n    /**\n    * Use the provided loader tree to create the React Component tree.\n    */\n    const createComponentTree = async ({\n      createSegmentPath,\n      loaderTree: tree,\n      parentParams,\n      firstItem,\n      rootLayoutIncluded,\n      injectedCSS,\n      injectedFontPreloadTags,\n      asNotFound,\n      metadataOutlet\n    }) => {\n      const {\n        page,\n        layoutOrPagePath,\n        segment,\n        components,\n        parallelRoutes\n      } = parseLoaderTree(tree);\n      const {\n        layout,\n        template,\n        error,\n        loading,\n        \"not-found\": notFound\n      } = components;\n      const injectedCSSWithCurrentLayout = new Set(injectedCSS);\n      const injectedFontPreloadTagsWithCurrentLayout = new Set(injectedFontPreloadTags);\n      const styles = getLayerAssets({\n        layoutOrPagePath,\n        injectedCSS: injectedCSSWithCurrentLayout,\n        injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout\n      });\n      const [Template, templateStyles] = template ? await createComponentAndStyles({\n        filePath: template[1],\n        getComponent: template[0],\n        injectedCSS: injectedCSSWithCurrentLayout\n      }) : [_react.default.Fragment];\n      const [ErrorComponent, errorStyles] = error ? await createComponentAndStyles({\n        filePath: error[1],\n        getComponent: error[0],\n        injectedCSS: injectedCSSWithCurrentLayout\n      }) : [];\n      const [Loading, loadingStyles] = loading ? await createComponentAndStyles({\n        filePath: loading[1],\n        getComponent: loading[0],\n        injectedCSS: injectedCSSWithCurrentLayout\n      }) : [];\n      const isLayout = typeof layout !== \"undefined\";\n      const isPage = typeof page !== \"undefined\";\n      const [layoutOrPageMod] = await (0, _appdirmodule.getLayoutOrPageModule)(tree);\n      /**\n      * Checks if the current segment is a root layout.\n      */\n      const rootLayoutAtThisLevel = isLayout && !rootLayoutIncluded;\n      /**\n      * Checks if the current segment or any level above it has a root layout.\n      */\n      const rootLayoutIncludedAtThisLevelOrAbove = rootLayoutIncluded || rootLayoutAtThisLevel;\n      const [NotFound, notFoundStyles] = notFound ? await createComponentAndStyles({\n        filePath: notFound[1],\n        getComponent: notFound[0],\n        injectedCSS: injectedCSSWithCurrentLayout\n      }) : [];\n      let dynamic = layoutOrPageMod == null ? void 0 : layoutOrPageMod.dynamic;\n      if (nextConfigOutput === \"export\") {\n        if (!dynamic || dynamic === \"auto\") {\n          dynamic = \"error\";\n        } else if (dynamic === \"force-dynamic\") {\n          staticGenerationStore.forceDynamic = true;\n          staticGenerationStore.dynamicShouldError = true;\n          staticGenerationBailout(`output: export`, {\n            dynamic,\n            link: \"https://nextjs.org/docs/advanced-features/static-html-export\"\n          });\n        }\n      }\n      if (typeof dynamic === \"string\") {\n        // the nested most config wins so we only force-static\n        // if it's configured above any parent that configured\n        // otherwise\n        if (dynamic === \"error\") {\n          staticGenerationStore.dynamicShouldError = true;\n        } else if (dynamic === \"force-dynamic\") {\n          staticGenerationStore.forceDynamic = true;\n          staticGenerationBailout(`force-dynamic`, {\n            dynamic\n          });\n        } else {\n          staticGenerationStore.dynamicShouldError = false;\n          if (dynamic === \"force-static\") {\n            staticGenerationStore.forceStatic = true;\n          } else {\n            staticGenerationStore.forceStatic = false;\n          }\n        }\n      }\n      if (typeof (layoutOrPageMod == null ? void 0 : layoutOrPageMod.fetchCache) === \"string\") {\n        staticGenerationStore.fetchCache = layoutOrPageMod == null ? void 0 : layoutOrPageMod.fetchCache;\n      }\n      if (typeof (layoutOrPageMod == null ? void 0 : layoutOrPageMod.revalidate) === \"number\") {\n        defaultRevalidate = layoutOrPageMod.revalidate;\n        if (typeof staticGenerationStore.revalidate === \"undefined\" || typeof staticGenerationStore.revalidate === \"number\" && staticGenerationStore.revalidate > defaultRevalidate) {\n          staticGenerationStore.revalidate = defaultRevalidate;\n        }\n        if (staticGenerationStore.isStaticGeneration && defaultRevalidate === 0) {\n          const {\n            DynamicServerError\n          } = ComponentMod.serverHooks;\n          const dynamicUsageDescription = `revalidate: 0 configured ${segment}`;\n          staticGenerationStore.dynamicUsageDescription = dynamicUsageDescription;\n          throw new DynamicServerError(dynamicUsageDescription);\n        }\n      }\n      if (staticGenerationStore == null ? void 0 : staticGenerationStore.dynamicUsageErr) {\n        throw staticGenerationStore.dynamicUsageErr;\n      }\n      const LayoutOrPage = layoutOrPageMod ? (0, _interopdefault.interopDefault)(layoutOrPageMod) : undefined;\n      /**\n      * The React Component to render.\n      */\n      let Component = LayoutOrPage;\n      const parallelKeys = Object.keys(parallelRoutes);\n      const hasSlotKey = parallelKeys.length > 1;\n      if (hasSlotKey && rootLayoutAtThisLevel) {\n        const NotFoundBoundary = ComponentMod.NotFoundBoundary;\n        Component = componentProps => {\n          const NotFoundComponent = NotFound;\n          const RootLayoutComponent = LayoutOrPage;\n          return /*#__PURE__*/_react.default.createElement(NotFoundBoundary, {\n            notFound: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, styles, /*#__PURE__*/_react.default.createElement(RootLayoutComponent, null, notFoundStyles, /*#__PURE__*/_react.default.createElement(NotFoundComponent, null)))\n          }, /*#__PURE__*/_react.default.createElement(RootLayoutComponent, componentProps));\n        };\n      }\n      if (dev) {\n        const {\n          isValidElementType\n        } = require(\"next/dist/compiled/react-is\");\n        if ((isPage || typeof Component !== \"undefined\") && !isValidElementType(Component)) {\n          throw new Error(`The default export is not a React Component in page: \"${pagePath}\"`);\n        }\n        if (typeof ErrorComponent !== \"undefined\" && !isValidElementType(ErrorComponent)) {\n          throw new Error(`The default export of error is not a React Component in page: ${segment}`);\n        }\n        if (typeof Loading !== \"undefined\" && !isValidElementType(Loading)) {\n          throw new Error(`The default export of loading is not a React Component in ${segment}`);\n        }\n        if (typeof NotFound !== \"undefined\" && !isValidElementType(NotFound)) {\n          throw new Error(`The default export of notFound is not a React Component in ${segment}`);\n        }\n      }\n      // Handle dynamic segment params.\n      const segmentParam = getDynamicParamFromSegment(segment);\n      /**\n      * Create object holding the parent params and current params\n      */\n      const currentParams =\n      // Handle null case where dynamic param is optional\n      segmentParam && segmentParam.value !== null ? {\n        ...parentParams,\n        [segmentParam.param]: segmentParam.value\n      } : parentParams;\n      // Resolve the segment param\n      const actualSegment = segmentParam ? segmentParam.treeSegment : segment;\n      // This happens outside of rendering in order to eagerly kick off data fetching for layouts / the page further down\n      const parallelRouteMap = await Promise.all(Object.keys(parallelRoutes).map(async parallelRouteKey => {\n        const isChildrenRouteKey = parallelRouteKey === \"children\";\n        const currentSegmentPath = firstItem ? [parallelRouteKey] : [actualSegment, parallelRouteKey];\n        const parallelRoute = parallelRoutes[parallelRouteKey];\n        const childSegment = parallelRoute[0];\n        const childSegmentParam = getDynamicParamFromSegment(childSegment);\n        const notFoundComponent = NotFound && isChildrenRouteKey ? /*#__PURE__*/_react.default.createElement(NotFound, null) : undefined;\n        function getParallelRoutePair(currentChildProp, currentStyles) {\n          // This is turned back into an object below.\n          return [parallelRouteKey, /*#__PURE__*/_react.default.createElement(LayoutRouter, {\n            parallelRouterKey: parallelRouteKey,\n            segmentPath: createSegmentPath(currentSegmentPath),\n            loading: Loading ? /*#__PURE__*/_react.default.createElement(Loading, null) : undefined,\n            loadingStyles: loadingStyles,\n            // TODO-APP: Add test for loading returning `undefined`. This currently can't be tested as the `webdriver()` tab will wait for the full page to load before returning.\n            hasLoading: Boolean(Loading),\n            error: ErrorComponent,\n            errorStyles: errorStyles,\n            template: /*#__PURE__*/_react.default.createElement(Template, null, /*#__PURE__*/_react.default.createElement(RenderFromTemplateContext, null)),\n            templateStyles: templateStyles,\n            notFound: notFoundComponent,\n            notFoundStyles: notFoundStyles,\n            childProp: currentChildProp,\n            styles: currentStyles\n          })];\n        }\n        // if we're prefetching and that there's a Loading component, we bail out\n        // otherwise we keep rendering for the prefetch.\n        // We also want to bail out if there's no Loading component in the tree.\n        let currentStyles = undefined;\n        let childElement = null;\n        const childPropSegment = (0, _createflightrouterstatefromloadertree.addSearchParamsIfPageSegment)(childSegmentParam ? childSegmentParam.treeSegment : childSegment, query);\n        if (!(isPrefetch && (Loading || !hasLoadingComponentInTree(parallelRoute)))) {\n          // Create the child component\n          const {\n            Component: ChildComponent,\n            styles: childComponentStyles\n          } = await createComponentTree({\n            createSegmentPath: child => {\n              return createSegmentPath([...currentSegmentPath, ...child]);\n            },\n            loaderTree: parallelRoute,\n            parentParams: currentParams,\n            rootLayoutIncluded: rootLayoutIncludedAtThisLevelOrAbove,\n            injectedCSS: injectedCSSWithCurrentLayout,\n            injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout,\n            asNotFound,\n            metadataOutlet\n          });\n          currentStyles = childComponentStyles;\n          childElement = /*#__PURE__*/_react.default.createElement(ChildComponent, null);\n        }\n        const childProp = {\n          current: childElement,\n          segment: childPropSegment\n        };\n        return getParallelRoutePair(childProp, currentStyles);\n      }));\n      // Convert the parallel route map into an object after all promises have been resolved.\n      const parallelRouteComponents = parallelRouteMap.reduce((list, [parallelRouteKey, Comp]) => {\n        list[parallelRouteKey] = Comp;\n        return list;\n      }, {});\n      // When the segment does not have a layout or page we still have to add the layout router to ensure the path holds the loading component\n      if (!Component) {\n        return {\n          Component: () => /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, parallelRouteComponents.children),\n          styles\n        };\n      }\n      const isClientComponent = (0, _clientreference.isClientReference)(layoutOrPageMod);\n      // If it's a not found route, and we don't have any matched parallel\n      // routes, we try to render the not found component if it exists.\n      let notFoundComponent = {};\n      if (NotFound && asNotFound &&\n      // In development, it could hit the parallel-route-default not found, so we only need to check the segment.\n      // Or if there's no parallel routes means it reaches the end.\n      !parallelRouteMap.length) {\n        notFoundComponent = {\n          children: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(\"meta\", {\n            name: \"robots\",\n            content: \"noindex\"\n          }), process.env.NODE_ENV === \"development\" && /*#__PURE__*/_react.default.createElement(\"meta\", {\n            name: \"next-error\",\n            content: \"not-found\"\n          }), notFoundStyles, /*#__PURE__*/_react.default.createElement(NotFound, null))\n        };\n      }\n      const props = {\n        ...parallelRouteComponents,\n        ...notFoundComponent,\n        // TODO-APP: params and query have to be blocked parallel route names. Might have to add a reserved name list.\n        // Params are always the current params that apply to the layout\n        // If you have a `/dashboard/[team]/layout.js` it will provide `team` as a param but not anything further down.\n        params: currentParams,\n        // Query is only provided to page\n        ...(() => {\n          if (isClientComponent && isStaticGeneration) {\n            return {};\n          }\n          if (isPage) {\n            return searchParamsProps;\n          }\n        })()\n      };\n      // Eagerly execute layout/page component to trigger fetches early.\n      if (!isClientComponent) {\n        Component = await Promise.resolve().then(() => (0, _preloadcomponent.preloadComponent)(Component, props));\n      }\n      return {\n        Component: () => {\n          return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, isPage ? metadataOutlet : null, isPage && isClientComponent && isStaticGeneration ? /*#__PURE__*/_react.default.createElement(StaticGenerationSearchParamsBailoutProvider, {\n            propsForComponent: props,\n            Component: Component\n          }) : /*#__PURE__*/_react.default.createElement(Component, props), null);\n        },\n        styles\n      };\n    };\n    // Handle Flight render request. This is only used when client-side navigating. E.g. when you `router.push('/dashboard')` or `router.reload()`.\n    const generateFlight = async options => {\n      /**\n      * Use router state to decide at what common layout to render the page.\n      * This can either be the common layout between two pages or a specific place to start rendering from using the \"refetch\" marker in the tree.\n      */\n      const walkTreeWithFlightRouterState = async ({\n        createSegmentPath,\n        loaderTreeToFilter,\n        parentParams,\n        isFirst,\n        flightRouterState,\n        parentRendered,\n        rscPayloadHead,\n        injectedCSS,\n        injectedFontPreloadTags,\n        rootLayoutIncluded,\n        asNotFound,\n        metadataOutlet\n      }) => {\n        const [segment, parallelRoutes, components] = loaderTreeToFilter;\n        const parallelRoutesKeys = Object.keys(parallelRoutes);\n        const {\n          layout\n        } = components;\n        const isLayout = typeof layout !== \"undefined\";\n        /**\n        * Checks if the current segment is a root layout.\n        */\n        const rootLayoutAtThisLevel = isLayout && !rootLayoutIncluded;\n        /**\n        * Checks if the current segment or any level above it has a root layout.\n        */\n        const rootLayoutIncludedAtThisLevelOrAbove = rootLayoutIncluded || rootLayoutAtThisLevel;\n        // Because this function walks to a deeper point in the tree to start rendering we have to track the dynamic parameters up to the point where rendering starts\n        const segmentParam = getDynamicParamFromSegment(segment);\n        const currentParams =\n        // Handle null case where dynamic param is optional\n        segmentParam && segmentParam.value !== null ? {\n          ...parentParams,\n          [segmentParam.param]: segmentParam.value\n        } : parentParams;\n        const actualSegment = (0, _createflightrouterstatefromloadertree.addSearchParamsIfPageSegment)(segmentParam ? segmentParam.treeSegment : segment, query);\n        /**\n        * Decide if the current segment is where rendering has to start.\n        */\n        const renderComponentsOnThisLevel =\n        // No further router state available\n        !flightRouterState ||\n        // Segment in router state does not match current segment\n        !(0, _matchsegments.matchSegment)(actualSegment, flightRouterState[0]) ||\n        // Last item in the tree\n        parallelRoutesKeys.length === 0 ||\n        // Explicit refresh\n        flightRouterState[3] === \"refetch\";\n        if (!parentRendered && renderComponentsOnThisLevel) {\n          const overriddenSegment = flightRouterState && (0, _matchsegments.canSegmentBeOverridden)(actualSegment, flightRouterState[0]) ? flightRouterState[0] : null;\n          return [[overriddenSegment ?? actualSegment, (0, _createflightrouterstatefromloadertree.createFlightRouterStateFromLoaderTree)(\n          // Create router state using the slice of the loaderTree\n          loaderTreeToFilter, getDynamicParamFromSegment, query), isPrefetch && !Boolean(components.loading) && !hasLoadingComponentInTree(loaderTree) ? null :\n          // @ts-expect-error TODO-APP: fix async component type\n          /*#__PURE__*/\n          _react.default.createElement(async () => {\n            const {\n              Component\n            } = await createComponentTree(\n            // This ensures flightRouterPath is valid and filters down the tree\n            {\n              createSegmentPath,\n              loaderTree: loaderTreeToFilter,\n              parentParams: currentParams,\n              firstItem: isFirst,\n              injectedCSS,\n              injectedFontPreloadTags,\n              // This is intentionally not \"rootLayoutIncludedAtThisLevelOrAbove\" as createComponentTree starts at the current level and does a check for \"rootLayoutAtThisLevel\" too.\n              rootLayoutIncluded,\n              asNotFound,\n              metadataOutlet\n            });\n            return /*#__PURE__*/_react.default.createElement(Component, null);\n          }), isPrefetch && !Boolean(components.loading) && !hasLoadingComponentInTree(loaderTree) ? null : (() => {\n            const {\n              layoutOrPagePath\n            } = parseLoaderTree(loaderTreeToFilter);\n            const styles = getLayerAssets({\n              layoutOrPagePath,\n              injectedCSS: new Set(injectedCSS),\n              injectedFontPreloadTags: new Set(injectedFontPreloadTags)\n            });\n            return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, styles, rscPayloadHead);\n          })()]];\n        }\n        // If we are not rendering on this level we need to check if the current\n        // segment has a layout. If so, we need to track all the used CSS to make\n        // the result consistent.\n        const layoutPath = layout == null ? void 0 : layout[1];\n        const injectedCSSWithCurrentLayout = new Set(injectedCSS);\n        const injectedFontPreloadTagsWithCurrentLayout = new Set(injectedFontPreloadTags);\n        if (layoutPath) {\n          (0, _getcssinlinedlinktags.getCssInlinedLinkTags)(clientReferenceManifest, layoutPath, injectedCSSWithCurrentLayout, true);\n          (0, _getpreloadablefonts.getPreloadableFonts)(nextFontManifest, layoutPath, injectedFontPreloadTagsWithCurrentLayout);\n        }\n        // Walk through all parallel routes.\n        const paths = (await Promise.all(parallelRoutesKeys.map(async parallelRouteKey => {\n          // for (const parallelRouteKey of parallelRoutesKeys) {\n          const parallelRoute = parallelRoutes[parallelRouteKey];\n          const currentSegmentPath = isFirst ? [parallelRouteKey] : [actualSegment, parallelRouteKey];\n          const path = await walkTreeWithFlightRouterState({\n            createSegmentPath: child => {\n              return createSegmentPath([...currentSegmentPath, ...child]);\n            },\n            loaderTreeToFilter: parallelRoute,\n            parentParams: currentParams,\n            flightRouterState: flightRouterState && flightRouterState[1][parallelRouteKey],\n            parentRendered: parentRendered || renderComponentsOnThisLevel,\n            isFirst: false,\n            rscPayloadHead,\n            injectedCSS: injectedCSSWithCurrentLayout,\n            injectedFontPreloadTags: injectedFontPreloadTagsWithCurrentLayout,\n            rootLayoutIncluded: rootLayoutIncludedAtThisLevelOrAbove,\n            asNotFound,\n            metadataOutlet\n          });\n          return path.map(item => {\n            // we don't need to send over default routes in the flight data\n            // because they are always ignored by the client, unless it's a refetch\n            if (item[0] === \"__DEFAULT__\" && flightRouterState && !!flightRouterState[1][parallelRouteKey][0] && flightRouterState[1][parallelRouteKey][3] !== \"refetch\") {\n              return null;\n            }\n            return [actualSegment, parallelRouteKey, ...item];\n          }).filter(Boolean);\n        }))).flat();\n        return paths;\n      };\n      // Flight data that is going to be passed to the browser.\n      // Currently a single item array but in the future multiple patches might be combined in a single request.\n      let flightData = null;\n      if (!(options == null ? void 0 : options.skipFlight)) {\n        const [MetadataTree, MetadataOutlet] = (0, _metadata.createMetadataComponents)({\n          tree: loaderTree,\n          pathname,\n          searchParams: providedSearchParams,\n          getDynamicParamFromSegment,\n          appUsingSizeAdjust\n        });\n        flightData = (await walkTreeWithFlightRouterState({\n          createSegmentPath: child => child,\n          loaderTreeToFilter: loaderTree,\n          parentParams: {},\n          flightRouterState: providedFlightRouterState,\n          isFirst: true,\n          // For flight, render metadata inside leaf page\n          rscPayloadHead:\n          // Adding requestId as react key to make metadata remount for each render\n          /*#__PURE__*/\n          _react.default.createElement(MetadataTree, {\n            key: requestId\n          }),\n          injectedCSS: new Set(),\n          injectedFontPreloadTags: new Set(),\n          rootLayoutIncluded: false,\n          asNotFound: pagePath === \"/404\" || (options == null ? void 0 : options.asNotFound),\n          metadataOutlet: /*#__PURE__*/_react.default.createElement(MetadataOutlet, null)\n        })).map(path => path.slice(1)) // remove the '' (root) segment\n        ;\n      }\n\n      const buildIdFlightDataPair = [buildId, flightData];\n      // For app dir, use the bundled version of Fizz renderer (renderToReadableStream)\n      // which contains the subset React.\n      const readable = ComponentMod.renderToReadableStream(options ? [options.actionResult, buildIdFlightDataPair] : buildIdFlightDataPair, clientReferenceManifest.clientModules, {\n        context: serverContexts,\n        onError: flightDataRendererErrorHandler\n      }).pipeThrough((0, _nodewebstreamshelper.createBufferedTransformStream)());\n      return new _flightrenderresult.FlightRenderResult(readable);\n    };\n    if (isFlight && !staticGenerationStore.isStaticGeneration) {\n      return generateFlight();\n    }\n    // Below this line is handling for rendering to HTML.\n    // AppRouter is provided by next-app-loader\n    const AppRouter = ComponentMod.AppRouter;\n    const GlobalError = /** GlobalError can be either the default error boundary or the overwritten app/global-error.js **/ComponentMod.GlobalError;\n    const serverComponentsInlinedTransformStream = new TransformStream();\n    // Get the nonce from the incoming request if it has one.\n    const csp = req.headers[\"content-security-policy\"];\n    let nonce;\n    if (csp && typeof csp === \"string\") {\n      nonce = (0, _getscriptnoncefromheader.getScriptNonceFromHeader)(csp);\n    }\n    const serverComponentsRenderOpts = {\n      transformStream: serverComponentsInlinedTransformStream,\n      clientReferenceManifest,\n      serverContexts,\n      rscChunks: []\n    };\n    const validateRootLayout = dev ? {\n      validateRootLayout: {\n        assetPrefix: renderOpts.assetPrefix,\n        getTree: () => (0, _createflightrouterstatefromloadertree.createFlightRouterStateFromLoaderTree)(loaderTree, getDynamicParamFromSegment, query)\n      }\n    } : {};\n    /**\n    * A new React Component that renders the provided React Component\n    * using Flight which can then be rendered to HTML.\n    */\n    const createServerComponentsRenderer = (loaderTreeToRender, preinitScripts) => (0, _createservercomponentsrenderer.createServerComponentRenderer)(async props => {\n      preinitScripts();\n      // Create full component tree from root to leaf.\n      const injectedCSS = new Set();\n      const injectedFontPreloadTags = new Set();\n      const initialTree = (0, _createflightrouterstatefromloadertree.createFlightRouterStateFromLoaderTree)(loaderTreeToRender, getDynamicParamFromSegment, query);\n      const [MetadataTree, MetadataOutlet] = (0, _metadata.createMetadataComponents)({\n        tree: loaderTreeToRender,\n        errorType: props.asNotFound ? \"not-found\" : undefined,\n        pathname,\n        searchParams: providedSearchParams,\n        getDynamicParamFromSegment: getDynamicParamFromSegment,\n        appUsingSizeAdjust: appUsingSizeAdjust\n      });\n      const {\n        Component: ComponentTree,\n        styles\n      } = await createComponentTree({\n        createSegmentPath: child => child,\n        loaderTree: loaderTreeToRender,\n        parentParams: {},\n        firstItem: true,\n        injectedCSS,\n        injectedFontPreloadTags,\n        rootLayoutIncluded: false,\n        asNotFound: props.asNotFound,\n        metadataOutlet: /*#__PURE__*/_react.default.createElement(MetadataOutlet, null)\n      });\n      return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, styles, /*#__PURE__*/_react.default.createElement(AppRouter, {\n        buildId: buildId,\n        assetPrefix: assetPrefix,\n        initialCanonicalUrl: pathname,\n        initialTree: initialTree,\n        initialHead: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, res.statusCode > 400 && /*#__PURE__*/_react.default.createElement(\"meta\", {\n          name: \"robots\",\n          content: \"noindex\"\n        }), /*#__PURE__*/_react.default.createElement(MetadataTree, {\n          key: requestId\n        })),\n        globalErrorComponent: GlobalError\n      }, /*#__PURE__*/_react.default.createElement(ComponentTree, null)));\n    }, ComponentMod, serverComponentsRenderOpts, serverComponentsErrorHandler, nonce);\n    const {\n      HeadManagerContext\n    } = require(\"../../shared/lib/head-manager-context.shared-runtime\");\n    // On each render, create a new `ServerInsertedHTML` context to capture\n    // injected nodes from user code (`useServerInsertedHTML`).\n    const {\n      ServerInsertedHTMLProvider,\n      renderServerInsertedHTML\n    } = (0, _serverinsertedhtml.createServerInsertedHTML)();\n    (_getTracer_getRootSpanAttributes = (0, _tracer.getTracer)().getRootSpanAttributes()) == null ? void 0 : _getTracer_getRootSpanAttributes.set(\"next.route\", pagePath);\n    const bodyResult = (0, _tracer.getTracer)().wrap(_constants.AppRenderSpan.getBodyResult, {\n      spanName: `render route (app) ${pagePath}`,\n      attributes: {\n        \"next.route\": pagePath\n      }\n    }, async ({\n      asNotFound,\n      tree\n    }) => {\n      const polyfills = buildManifest.polyfillFiles.filter(polyfill => polyfill.endsWith(\".js\") && !polyfill.endsWith(\".module.js\")).map(polyfill => ({\n        src: `${assetPrefix}/_next/${polyfill}${getAssetQueryString(false)}`,\n        integrity: subresourceIntegrityManifest == null ? void 0 : subresourceIntegrityManifest[polyfill]\n      }));\n      const [preinitScripts, bootstrapScript] = (0, _requiredscripts.getRequiredScripts)(buildManifest, assetPrefix, subresourceIntegrityManifest, getAssetQueryString(true), nonce);\n      const ServerComponentsRenderer = createServerComponentsRenderer(tree, preinitScripts);\n      const content = /*#__PURE__*/_react.default.createElement(HeadManagerContext.Provider, {\n        value: {\n          appDir: true,\n          nonce\n        }\n      }, /*#__PURE__*/_react.default.createElement(ServerInsertedHTMLProvider, null, /*#__PURE__*/_react.default.createElement(ServerComponentsRenderer, {\n        asNotFound: asNotFound\n      })));\n      let polyfillsFlushed = false;\n      let flushedErrorMetaTagsUntilIndex = 0;\n      const getServerInsertedHTML = serverCapturedErrors => {\n        // Loop through all the errors that have been captured but not yet\n        // flushed.\n        const errorMetaTags = [];\n        for (; flushedErrorMetaTagsUntilIndex < serverCapturedErrors.length; flushedErrorMetaTagsUntilIndex++) {\n          const error = serverCapturedErrors[flushedErrorMetaTagsUntilIndex];\n          if ((0, _notfound.isNotFoundError)(error)) {\n            errorMetaTags.push( /*#__PURE__*/_react.default.createElement(\"meta\", {\n              name: \"robots\",\n              content: \"noindex\",\n              key: error.digest\n            }), process.env.NODE_ENV === \"development\" ? /*#__PURE__*/_react.default.createElement(\"meta\", {\n              name: \"next-error\",\n              content: \"not-found\",\n              key: \"next-error\"\n            }) : null);\n          } else if ((0, _redirect.isRedirectError)(error)) {\n            const redirectUrl = (0, _redirect.getURLFromRedirectError)(error);\n            const isPermanent = (0, _getredirectstatuscodefromerror.getRedirectStatusCodeFromError)(error) === 308 ? true : false;\n            if (redirectUrl) {\n              errorMetaTags.push( /*#__PURE__*/_react.default.createElement(\"meta\", {\n                httpEquiv: \"refresh\",\n                content: `${isPermanent ? 0 : 1};url=${redirectUrl}`,\n                key: error.digest\n              }));\n            }\n          }\n        }\n        const flushed = (0, _rendertostring.renderToString)({\n          ReactDOMServer: require(\"react-dom/server.edge\"),\n          element: /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, polyfillsFlushed ? null : polyfills == null ? void 0 : polyfills.map(polyfill => {\n            return /*#__PURE__*/_react.default.createElement(\"script\", {\n              key: polyfill.src,\n              src: polyfill.src,\n              integrity: polyfill.integrity,\n              noModule: true,\n              nonce: nonce\n            });\n          }), renderServerInsertedHTML(), errorMetaTags)\n        });\n        polyfillsFlushed = true;\n        return flushed;\n      };\n      try {\n        const renderStream = await (0, _nodewebstreamshelper.renderToInitialStream)({\n          ReactDOMServer: require(\"react-dom/server.edge\"),\n          element: content,\n          streamOptions: {\n            onError: htmlRendererErrorHandler,\n            nonce,\n            // Include hydration scripts in the HTML\n            bootstrapScripts: [bootstrapScript]\n          }\n        });\n        const result = await (0, _nodewebstreamshelper.continueFromInitialStream)(renderStream, {\n          dataStream: serverComponentsRenderOpts.transformStream.readable,\n          generateStaticHTML: staticGenerationStore.isStaticGeneration || generateStaticHTML,\n          getServerInsertedHTML: () => getServerInsertedHTML(allCapturedErrors),\n          serverInsertedHTMLToHead: true,\n          ...validateRootLayout\n        });\n        return result;\n      } catch (err) {\n        var _err_message;\n        if (err.code === \"NEXT_STATIC_GEN_BAILOUT\" || ((_err_message = err.message) == null ? void 0 : _err_message.includes(\"https://nextjs.org/docs/advanced-features/static-html-export\"))) {\n          // Ensure that \"next dev\" prints the red error overlay\n          throw err;\n        }\n        if (err.digest === _nossrerror.NEXT_DYNAMIC_NO_SSR_CODE) {\n          (0, _log.warn)(`Entire page ${pagePath} deopted into client-side rendering. https://nextjs.org/docs/messages/deopted-into-client-rendering`, pagePath);\n        }\n        if ((0, _notfound.isNotFoundError)(err)) {\n          res.statusCode = 404;\n        }\n        let hasRedirectError = false;\n        if ((0, _redirect.isRedirectError)(err)) {\n          hasRedirectError = true;\n          res.statusCode = (0, _getredirectstatuscodefromerror.getRedirectStatusCodeFromError)(err);\n          if (err.mutableCookies) {\n            const headers = new Headers();\n            // If there were mutable cookies set, we need to set them on the\n            // response.\n            if ((0, _requestcookies.appendMutableCookies)(headers, err.mutableCookies)) {\n              res.setHeader(\"set-cookie\", Array.from(headers.values()));\n            }\n          }\n          const redirectUrl = (0, _addpathprefix.addPathPrefix)((0, _redirect.getURLFromRedirectError)(err), renderOpts.basePath);\n          res.setHeader(\"Location\", redirectUrl);\n        }\n        const is404 = res.statusCode === 404;\n        // Preserve the existing RSC inline chunks from the page rendering.\n        // To avoid the same stream being operated twice, clone the origin stream for error rendering.\n        const serverErrorComponentsRenderOpts = {\n          ...serverComponentsRenderOpts,\n          rscChunks: [],\n          transformStream: (0, _nodewebstreamshelper.cloneTransformStream)(serverComponentsRenderOpts.transformStream)\n        };\n        const errorType = is404 ? \"not-found\" : hasRedirectError ? \"redirect\" : undefined;\n        const errorMeta = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, res.statusCode >= 400 && /*#__PURE__*/_react.default.createElement(\"meta\", {\n          name: \"robots\",\n          content: \"noindex\"\n        }), process.env.NODE_ENV === \"development\" && /*#__PURE__*/_react.default.createElement(\"meta\", {\n          name: \"next-error\",\n          content: \"not-found\"\n        }));\n        const [errorPreinitScripts, errorBootstrapScript] = (0, _requiredscripts.getRequiredScripts)(buildManifest, assetPrefix, subresourceIntegrityManifest, getAssetQueryString(false), nonce);\n        const ErrorPage = (0, _createservercomponentsrenderer.createServerComponentRenderer)(async () => {\n          errorPreinitScripts();\n          const [MetadataTree] = (0, _metadata.createMetadataComponents)({\n            tree,\n            pathname,\n            errorType,\n            searchParams: providedSearchParams,\n            getDynamicParamFromSegment,\n            appUsingSizeAdjust\n          });\n          const head = /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, /*#__PURE__*/_react.default.createElement(MetadataTree, {\n            key: requestId\n          }), errorMeta);\n          const initialTree = (0, _createflightrouterstatefromloadertree.createFlightRouterStateFromLoaderTree)(tree, getDynamicParamFromSegment, query);\n          // For metadata notFound error there's no global not found boundary on top\n          // so we create a not found page with AppRouter\n          return /*#__PURE__*/_react.default.createElement(AppRouter, {\n            buildId: buildId,\n            assetPrefix: assetPrefix,\n            initialCanonicalUrl: pathname,\n            initialTree: initialTree,\n            initialHead: head,\n            globalErrorComponent: GlobalError\n          }, /*#__PURE__*/_react.default.createElement(\"html\", {\n            id: \"__next_error__\"\n          }, /*#__PURE__*/_react.default.createElement(\"head\", null), /*#__PURE__*/_react.default.createElement(\"body\", null)));\n        }, ComponentMod, serverErrorComponentsRenderOpts, serverComponentsErrorHandler, nonce);\n        try {\n          const renderStream = await (0, _nodewebstreamshelper.renderToInitialStream)({\n            ReactDOMServer: require(\"react-dom/server.edge\"),\n            element: /*#__PURE__*/_react.default.createElement(ErrorPage, null),\n            streamOptions: {\n              nonce,\n              // Include hydration scripts in the HTML\n              bootstrapScripts: [errorBootstrapScript]\n            }\n          });\n          return await (0, _nodewebstreamshelper.continueFromInitialStream)(renderStream, {\n            dataStream: serverErrorComponentsRenderOpts.transformStream.readable,\n            generateStaticHTML: staticGenerationStore.isStaticGeneration,\n            getServerInsertedHTML: () => getServerInsertedHTML([]),\n            serverInsertedHTMLToHead: true,\n            ...validateRootLayout\n          });\n        } catch (finalErr) {\n          if (process.env.NODE_ENV === \"development\" && (0, _notfound.isNotFoundError)(finalErr)) {\n            const bailOnNotFound = require(\"../../client/components/dev-root-not-found-boundary\").bailOnNotFound;\n            bailOnNotFound();\n          }\n          throw finalErr;\n        }\n      }\n    });\n    // For action requests, we handle them differently with a special render result.\n    const actionRequestResult = await (0, _actionhandler.handleAction)({\n      req,\n      res,\n      ComponentMod,\n      page: renderOpts.page,\n      serverActionsManifest,\n      generateFlight,\n      staticGenerationStore,\n      requestStore,\n      serverActionsBodySizeLimit\n    });\n    if (actionRequestResult === \"not-found\") {\n      const notFoundLoaderTree = createNotFoundLoaderTree(loaderTree);\n      return new _renderresult.default(await bodyResult({\n        asNotFound: true,\n        tree: notFoundLoaderTree\n      }), {\n        ...extraRenderResultMeta\n      });\n    } else if (actionRequestResult) {\n      actionRequestResult.extendMetadata(extraRenderResultMeta);\n      return actionRequestResult;\n    }\n    const renderResult = new _renderresult.default(await bodyResult({\n      asNotFound: pagePath === \"/404\",\n      tree: loaderTree\n    }), {\n      ...extraRenderResultMeta\n    });\n    if (staticGenerationStore.pendingRevalidates) {\n      await Promise.all(staticGenerationStore.pendingRevalidates);\n    }\n    (0, _patchfetch.addImplicitTags)(staticGenerationStore);\n    extraRenderResultMeta.fetchTags = (_staticGenerationStore_tags = staticGenerationStore.tags) == null ? void 0 : _staticGenerationStore_tags.join(\",\");\n    renderResult.extendMetadata({\n      fetchTags: extraRenderResultMeta.fetchTags\n    });\n    if (staticGenerationStore.isStaticGeneration) {\n      const htmlResult = await (0, _nodewebstreamshelper.streamToBufferedResult)(renderResult);\n      // if we encountered any unexpected errors during build\n      // we fail the prerendering phase and the build\n      if (capturedErrors.length > 0) {\n        throw capturedErrors[0];\n      }\n      // TODO-APP: derive this from same pass to prevent additional\n      // render during static generation\n      const filteredFlightData = await (0, _nodewebstreamshelper.streamToBufferedResult)(await generateFlight());\n      if (staticGenerationStore.forceStatic === false) {\n        staticGenerationStore.revalidate = 0;\n      }\n      extraRenderResultMeta.pageData = filteredFlightData;\n      extraRenderResultMeta.revalidate = staticGenerationStore.revalidate ?? defaultRevalidate;\n      // provide bailout info for debugging\n      if (extraRenderResultMeta.revalidate === 0) {\n        extraRenderResultMeta.staticBailoutInfo = {\n          description: staticGenerationStore.dynamicUsageDescription,\n          stack: staticGenerationStore.dynamicUsageStack\n        };\n      }\n      return new _renderresult.default(htmlResult, {\n        ...extraRenderResultMeta\n      });\n    }\n    return renderResult;\n  };\n  return _requestasyncstoragewrapper.RequestAsyncStorageWrapper.wrap(requestAsyncStorage, {\n    req,\n    res,\n    renderOpts\n  }, () => _staticgenerationasyncstoragewrapper.StaticGenerationAsyncStorageWrapper.wrap(staticGenerationAsyncStorage, {\n    urlPathname: pathname,\n    renderOpts\n  }, () => wrappedRender()));\n};","map":{"version":3,"names":["renderToHTMLOrFlight","createNotFoundLoaderTree","loaderTree","findDynamicParamFromRouterState","providedFlightRouterState","segment","treeSegment","_matchsegments","canSegmentBeOverridden","Array","isArray","param","value","type","parallelRouterState","Object","values","maybeDynamicParam","hasLoadingComponentInTree","tree","parallelRoutes","loading","some","parallelRoute","req","res","pagePath","query","renderOpts","isFlight","headers","_approuterheaders","RSC","toLowerCase","undefined","pathname","_validateurl","validateURL","url","DEV_REQUEST_TS","Date","now","buildManifest","subresourceIntegrityManifest","serverActionsManifest","ComponentMod","dev","nextFontManifest","supportsDynamicHTML","nextConfigOutput","serverActionsBodySizeLimit","buildId","deploymentId","appDirDevErrorLogger","__next_app__","globalThis","__next_require__","require","__next_chunk_load__","loadChunk","extraRenderResultMeta","appUsingSizeAdjust","clientReferenceManifest","capturedErrors","allCapturedErrors","isNextExport","nextExport","serverComponentsErrorHandler","_createerrorhandler","createErrorHandler","_source","errorLogger","flightDataRendererErrorHandler","htmlRendererErrorHandler","_patchfetch","patchFetch","generateStaticHTML","staticGenerationAsyncStorage","requestAsyncStorage","staticGenerationBailout","wrappedRender","_getTracer_getRootSpanAttributes","_staticGenerationStore_tags","staticGenerationStore","getStore","Error","fetchMetrics","requestStore","_internalutils","stripInternalQueries","isPrefetch","NEXT_ROUTER_PREFETCH","_parseandvalidateflightrouterstate","parseAndValidateFlightRouterState","NEXT_ROUTER_STATE_TREE","requestId","process","env","NEXT_RUNTIME","crypto","randomUUID","nanoid","LayoutRouter","RenderFromTemplateContext","createSearchParamsBailoutProxy","StaticGenerationSearchParamsBailoutProvider","isStaticGeneration","providedSearchParams","searchParamsProps","searchParams","serverContexts","params","getDynamicParamFromSegment","segmentParam","_getsegmentparam","getSegmentParam","key","map","i","encodeURIComponent","_getshortdynamicparamtype","dynamicParamTypes","getShortDynamicParamType","join","defaultRevalidate","assetPrefix","getAssetQueryString","addTimestamp","isDev","NODE_ENV","qs","createComponentAndStyles","filePath","getComponent","injectedCSS","cssHrefs","_getcssinlinedlinktags","getCssInlinedLinkTags","styles","href","index","fullHref","precedence","_react","default","createElement","rel","Comp","_interopdefault","interopDefault","getLayerAssets","layoutOrPagePath","injectedCSSWithCurrentLayout","injectedFontPreloadTags","injectedFontPreloadTagsWithCurrentLayout","stylesheets","preloadedFontFiles","_getpreloadablefonts","getPreloadableFonts","length","fontFilename","ext","exec","preloadFont","URL","preconnect","origin","error","preloadStyle","parseLoaderTree","components","layout","page","defaultPage","createComponentTree","createSegmentPath","parentParams","firstItem","rootLayoutIncluded","asNotFound","metadataOutlet","template","notFound","Set","Template","templateStyles","Fragment","ErrorComponent","errorStyles","Loading","loadingStyles","isLayout","isPage","layoutOrPageMod","_appdirmodule","getLayoutOrPageModule","rootLayoutAtThisLevel","rootLayoutIncludedAtThisLevelOrAbove","NotFound","notFoundStyles","dynamic","forceDynamic","dynamicShouldError","link","forceStatic","fetchCache","revalidate","DynamicServerError","serverHooks","dynamicUsageDescription","dynamicUsageErr","LayoutOrPage","Component","parallelKeys","keys","hasSlotKey","NotFoundBoundary","componentProps","NotFoundComponent","RootLayoutComponent","isValidElementType","currentParams","actualSegment","parallelRouteMap","Promise","all","parallelRouteKey","isChildrenRouteKey","currentSegmentPath","childSegment","childSegmentParam","notFoundComponent","getParallelRoutePair","currentChildProp","currentStyles","parallelRouterKey","segmentPath","hasLoading","Boolean","childProp","childElement","childPropSegment","_createflightrouterstatefromloadertree","addSearchParamsIfPageSegment","ChildComponent","childComponentStyles","child","current","parallelRouteComponents","reduce","list","children","isClientComponent","_clientreference","isClientReference","name","content","props","resolve","then","_preloadcomponent","preloadComponent","propsForComponent","generateFlight","options","walkTreeWithFlightRouterState","loaderTreeToFilter","isFirst","flightRouterState","parentRendered","rscPayloadHead","parallelRoutesKeys","renderComponentsOnThisLevel","matchSegment","overriddenSegment","createFlightRouterStateFromLoaderTree","layoutPath","paths","path","item","filter","flat","flightData","skipFlight","MetadataTree","MetadataOutlet","_metadata","createMetadataComponents","slice","buildIdFlightDataPair","readable","renderToReadableStream","actionResult","clientModules","context","onError","pipeThrough","_nodewebstreamshelper","createBufferedTransformStream","_flightrenderresult","FlightRenderResult","AppRouter","GlobalError","serverComponentsInlinedTransformStream","TransformStream","csp","nonce","_getscriptnoncefromheader","getScriptNonceFromHeader","serverComponentsRenderOpts","transformStream","rscChunks","validateRootLayout","getTree","createServerComponentsRenderer","loaderTreeToRender","preinitScripts","_createservercomponentsrenderer","createServerComponentRenderer","initialTree","errorType","ComponentTree","initialCanonicalUrl","initialHead","statusCode","globalErrorComponent","HeadManagerContext","ServerInsertedHTMLProvider","renderServerInsertedHTML","_serverinsertedhtml","createServerInsertedHTML","_tracer","getTracer","getRootSpanAttributes","set","bodyResult","wrap","_constants","AppRenderSpan","getBodyResult","spanName","attributes","polyfills","polyfillFiles","polyfill","endsWith","src","integrity","bootstrapScript","_requiredscripts","getRequiredScripts","ServerComponentsRenderer","Provider","appDir","polyfillsFlushed","flushedErrorMetaTagsUntilIndex","getServerInsertedHTML","serverCapturedErrors","errorMetaTags","_notfound","isNotFoundError","push","digest","_redirect","isRedirectError","redirectUrl","getURLFromRedirectError","isPermanent","_getredirectstatuscodefromerror","getRedirectStatusCodeFromError","httpEquiv","flushed","_rendertostring","renderToString","ReactDOMServer","element","noModule","renderStream","renderToInitialStream","streamOptions","bootstrapScripts","result","continueFromInitialStream","dataStream","serverInsertedHTMLToHead","err","_err_message","code","message","includes","_nossrerror","NEXT_DYNAMIC_NO_SSR_CODE","_log","warn","hasRedirectError","mutableCookies","Headers","_requestcookies","appendMutableCookies","setHeader","from","_addpathprefix","addPathPrefix","basePath","is404","serverErrorComponentsRenderOpts","cloneTransformStream","errorMeta","errorPreinitScripts","errorBootstrapScript","ErrorPage","head","id","finalErr","bailOnNotFound","actionRequestResult","_actionhandler","handleAction","notFoundLoaderTree","_renderresult","extendMetadata","renderResult","pendingRevalidates","addImplicitTags","fetchTags","tags","htmlResult","streamToBufferedResult","filteredFlightData","pageData","staticBailoutInfo","description","stack","dynamicUsageStack","_requestasyncstoragewrapper","RequestAsyncStorageWrapper","_staticgenerationasyncstoragewrapper","StaticGenerationAsyncStorageWrapper","urlPathname"],"sources":["../../../src/server/app-render/app-render.tsx"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}