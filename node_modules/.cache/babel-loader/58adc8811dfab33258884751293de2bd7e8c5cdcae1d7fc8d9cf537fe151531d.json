{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  normalizeRouteRegex: null,\n  checkCustomRoutes: null,\n  default: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  normalizeRouteRegex: function () {\n    return normalizeRouteRegex;\n  },\n  checkCustomRoutes: function () {\n    return checkCustomRoutes;\n  },\n  default: function () {\n    return loadCustomRoutes;\n  }\n});\nconst _chalk = /*#__PURE__*/_interop_require_default(require(\"./chalk\"));\nconst _escaperegexp = require(\"../shared/lib/escape-regexp\");\nconst _trytoparsepath = require(\"./try-to-parse-path\");\nconst _redirectstatus = require(\"./redirect-status\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst allowedHasTypes = new Set([\"header\", \"cookie\", \"query\", \"host\"]);\nconst namedGroupsRegex = /\\(\\?<([a-zA-Z][a-zA-Z0-9]*)>/g;\nfunction normalizeRouteRegex(regex) {\n  // clean up un-necessary escaping from regex.source which turns / into \\\\/\n  return regex.replace(/\\\\\\//g, \"/\");\n}\nfunction checkRedirect(route) {\n  const invalidParts = [];\n  let hadInvalidStatus = false;\n  if (route.statusCode && !_redirectstatus.allowedStatusCodes.has(route[\"statusCode\"])) {\n    hadInvalidStatus = true;\n    invalidParts.push(`\\`statusCode\\` is not undefined or valid statusCode`);\n  }\n  if (typeof route.permanent !== \"boolean\" && !route[\"statusCode\"]) {\n    invalidParts.push(`\\`permanent\\` is not set to \\`true\\` or \\`false\\``);\n  }\n  return {\n    invalidParts,\n    hadInvalidStatus\n  };\n}\nfunction checkHeader(route) {\n  const invalidParts = [];\n  if (!Array.isArray(route.headers)) {\n    invalidParts.push(\"`headers` field must be an array\");\n  } else if (route.headers.length === 0) {\n    invalidParts.push(\"`headers` field cannot be empty\");\n  } else {\n    for (const header of route.headers) {\n      if (!header || typeof header !== \"object\") {\n        invalidParts.push(\"`headers` items must be object with { key: '', value: '' }\");\n        break;\n      }\n      if (typeof header.key !== \"string\") {\n        invalidParts.push(\"`key` in header item must be string\");\n        break;\n      }\n      if (typeof header.value !== \"string\") {\n        invalidParts.push(\"`value` in header item must be string\");\n        break;\n      }\n    }\n  }\n  return invalidParts;\n}\nfunction checkCustomRoutes(routes, type) {\n  if (!Array.isArray(routes)) {\n    console.error(`Error: ${type}s must return an array, received ${typeof routes}.\\n` + `See here for more info: https://nextjs.org/docs/messages/routes-must-be-array`);\n    process.exit(1);\n  }\n  let numInvalidRoutes = 0;\n  let hadInvalidStatus = false;\n  let hadInvalidHas = false;\n  let hadInvalidMissing = false;\n  const allowedKeys = new Set([\"source\", \"locale\", \"has\", \"missing\"]);\n  if (type === \"rewrite\") {\n    allowedKeys.add(\"basePath\");\n    allowedKeys.add(\"destination\");\n  }\n  if (type === \"redirect\") {\n    allowedKeys.add(\"basePath\");\n    allowedKeys.add(\"statusCode\");\n    allowedKeys.add(\"permanent\");\n    allowedKeys.add(\"destination\");\n  }\n  if (type === \"header\") {\n    allowedKeys.add(\"basePath\");\n    allowedKeys.add(\"headers\");\n  }\n  for (const route of routes) {\n    if (!route || typeof route !== \"object\") {\n      console.error(`The route ${JSON.stringify(route)} is not a valid object with \\`source\\`${type !== \"middleware\" ? ` and \\`${type === \"header\" ? \"headers\" : \"destination\"}\\`` : \"\"}`);\n      numInvalidRoutes++;\n      continue;\n    }\n    if (type === \"rewrite\" && route.basePath === false && !(route.destination.startsWith(\"http://\") || route.destination.startsWith(\"https://\"))) {\n      console.error(`The route ${route.source} rewrites urls outside of the basePath. Please use a destination that starts with \\`http://\\` or \\`https://\\` https://nextjs.org/docs/messages/invalid-external-rewrite`);\n      numInvalidRoutes++;\n      continue;\n    }\n    const keys = Object.keys(route);\n    const invalidKeys = keys.filter(key => !allowedKeys.has(key));\n    const invalidParts = [];\n    if (\"basePath\" in route && typeof route.basePath !== \"undefined\" && route.basePath !== false) {\n      invalidParts.push(\"`basePath` must be undefined or false\");\n    }\n    if (typeof route.locale !== \"undefined\" && route.locale !== false) {\n      invalidParts.push(\"`locale` must be undefined or false\");\n    }\n    const checkInvalidHasMissing = (items, fieldName) => {\n      let hadInvalidItem = false;\n      if (typeof items !== \"undefined\" && !Array.isArray(items)) {\n        invalidParts.push(`\\`${fieldName}\\` must be undefined or valid has object`);\n        hadInvalidItem = true;\n      } else if (items) {\n        const invalidHasItems = [];\n        for (const hasItem of items) {\n          let invalidHasParts = [];\n          if (!allowedHasTypes.has(hasItem.type)) {\n            invalidHasParts.push(`invalid type \"${hasItem.type}\"`);\n          }\n          if (typeof hasItem.key !== \"string\" && hasItem.type !== \"host\") {\n            invalidHasParts.push(`invalid key \"${hasItem.key}\"`);\n          }\n          if (typeof hasItem.value !== \"undefined\" && typeof hasItem.value !== \"string\") {\n            invalidHasParts.push(`invalid value \"${hasItem.value}\"`);\n          }\n          if (typeof hasItem.value === \"undefined\" && hasItem.type === \"host\") {\n            invalidHasParts.push(`value is required for \"host\" type`);\n          }\n          if (invalidHasParts.length > 0) {\n            invalidHasItems.push(`${invalidHasParts.join(\", \")} for ${JSON.stringify(hasItem)}`);\n          }\n        }\n        if (invalidHasItems.length > 0) {\n          hadInvalidItem = true;\n          const itemStr = `item${invalidHasItems.length === 1 ? \"\" : \"s\"}`;\n          console.error(`Invalid \\`${fieldName}\\` ${itemStr}:\\n` + invalidHasItems.join(\"\\n\"));\n          console.error();\n          invalidParts.push(`invalid \\`${fieldName}\\` ${itemStr} found`);\n        }\n      }\n      return hadInvalidItem;\n    };\n    if (checkInvalidHasMissing(route.has, \"has\")) {\n      hadInvalidHas = true;\n    }\n    if (checkInvalidHasMissing(route.missing, \"missing\")) {\n      hadInvalidMissing = true;\n    }\n    if (!route.source) {\n      invalidParts.push(\"`source` is missing\");\n    } else if (typeof route.source !== \"string\") {\n      invalidParts.push(\"`source` is not a string\");\n    } else if (!route.source.startsWith(\"/\")) {\n      invalidParts.push(\"`source` does not start with /\");\n    }\n    if (type === \"header\") {\n      invalidParts.push(...checkHeader(route));\n    } else if (type !== \"middleware\") {\n      let _route = route;\n      if (!_route.destination) {\n        invalidParts.push(\"`destination` is missing\");\n      } else if (typeof _route.destination !== \"string\") {\n        invalidParts.push(\"`destination` is not a string\");\n      } else if (type === \"rewrite\" && !_route.destination.match(/^(\\/|https:\\/\\/|http:\\/\\/)/)) {\n        invalidParts.push(\"`destination` does not start with `/`, `http://`, or `https://`\");\n      }\n    }\n    if (type === \"redirect\") {\n      const result = checkRedirect(route);\n      hadInvalidStatus = hadInvalidStatus || result.hadInvalidStatus;\n      invalidParts.push(...result.invalidParts);\n    }\n    let sourceTokens;\n    if (typeof route.source === \"string\" && route.source.startsWith(\"/\")) {\n      // only show parse error if we didn't already show error\n      // for not being a string\n      const {\n        tokens,\n        error,\n        regexStr\n      } = (0, _trytoparsepath.tryToParsePath)(route.source);\n      if (error) {\n        invalidParts.push(\"`source` parse failed\");\n      }\n      if (regexStr && regexStr.length > 4096) {\n        invalidParts.push(\"`source` exceeds max built length of 4096\");\n      }\n      sourceTokens = tokens;\n    }\n    const hasSegments = new Set();\n    if (route.has) {\n      for (const hasItem of route.has) {\n        if (!hasItem.value && hasItem.key) {\n          hasSegments.add(hasItem.key);\n        }\n        if (hasItem.value) {\n          for (const match of hasItem.value.matchAll(namedGroupsRegex)) {\n            if (match[1]) {\n              hasSegments.add(match[1]);\n            }\n          }\n          if (hasItem.type === \"host\") {\n            hasSegments.add(\"host\");\n          }\n        }\n      }\n    }\n    // make sure no unnamed patterns are attempted to be used in the\n    // destination as this can cause confusion and is not allowed\n    if (typeof route.destination === \"string\") {\n      if (route.destination.startsWith(\"/\") && Array.isArray(sourceTokens)) {\n        const unnamedInDest = new Set();\n        for (const token of sourceTokens) {\n          if (typeof token === \"object\" && typeof token.name === \"number\") {\n            const unnamedIndex = new RegExp(`:${token.name}(?!\\\\d)`);\n            if (route.destination.match(unnamedIndex)) {\n              unnamedInDest.add(`:${token.name}`);\n            }\n          }\n        }\n        if (unnamedInDest.size > 0) {\n          invalidParts.push(`\\`destination\\` has unnamed params ${[...unnamedInDest].join(\", \")}`);\n        } else {\n          const {\n            tokens: destTokens,\n            regexStr: destRegexStr,\n            error: destinationParseFailed\n          } = (0, _trytoparsepath.tryToParsePath)(route.destination, {\n            handleUrl: true\n          });\n          if (destRegexStr && destRegexStr.length > 4096) {\n            invalidParts.push(\"`destination` exceeds max built length of 4096\");\n          }\n          if (destinationParseFailed) {\n            invalidParts.push(\"`destination` parse failed\");\n          } else {\n            const sourceSegments = new Set(sourceTokens.map(item => typeof item === \"object\" && item.name).filter(Boolean));\n            const invalidDestSegments = new Set();\n            for (const token of destTokens) {\n              if (typeof token === \"object\" && !sourceSegments.has(token.name) && !hasSegments.has(token.name)) {\n                invalidDestSegments.add(token.name);\n              }\n            }\n            if (invalidDestSegments.size) {\n              invalidParts.push(`\\`destination\\` has segments not in \\`source\\` or \\`has\\` (${[...invalidDestSegments].join(\", \")})`);\n            }\n          }\n        }\n      }\n    }\n    const hasInvalidKeys = invalidKeys.length > 0;\n    const hasInvalidParts = invalidParts.length > 0;\n    if (hasInvalidKeys || hasInvalidParts) {\n      console.error(`${invalidParts.join(\", \")}${invalidKeys.length ? (hasInvalidParts ? \",\" : \"\") + ` invalid field${invalidKeys.length === 1 ? \"\" : \"s\"}: ` + invalidKeys.join(\",\") : \"\"} for route ${JSON.stringify(route)}`);\n      console.error();\n      numInvalidRoutes++;\n    }\n  }\n  if (numInvalidRoutes > 0) {\n    if (hadInvalidStatus) {\n      console.error(`\\nValid redirect statusCode values are ${[..._redirectstatus.allowedStatusCodes].join(\", \")}`);\n    }\n    if (hadInvalidHas) {\n      console.error(`\\nValid \\`has\\` object shape is ${JSON.stringify({\n        type: [...allowedHasTypes].join(\", \"),\n        key: \"the key to check for\",\n        value: \"undefined or a value string to match against\"\n      }, null, 2)}`);\n    }\n    if (hadInvalidMissing) {\n      console.error(`\\nValid \\`missing\\` object shape is ${JSON.stringify({\n        type: [...allowedHasTypes].join(\", \"),\n        key: \"the key to check for\",\n        value: \"undefined or a value string to match against\"\n      }, null, 2)}`);\n    }\n    console.error();\n    console.error(`Error: Invalid ${type}${numInvalidRoutes === 1 ? \"\" : \"s\"} found`);\n    process.exit(1);\n  }\n}\nfunction processRoutes(routes, config, type) {\n  const _routes = routes;\n  const newRoutes = [];\n  const defaultLocales = [];\n  if (config.i18n && type === \"redirect\") {\n    var _config_i18n;\n    for (const item of ((_config_i18n = config.i18n) == null ? void 0 : _config_i18n.domains) || []) {\n      defaultLocales.push({\n        locale: item.defaultLocale,\n        base: `http${item.http ? \"\" : \"s\"}://${item.domain}`\n      });\n    }\n    defaultLocales.push({\n      locale: config.i18n.defaultLocale,\n      base: \"\"\n    });\n  }\n  for (const r of _routes) {\n    var _r_destination;\n    const srcBasePath = config.basePath && r.basePath !== false ? config.basePath : \"\";\n    const isExternal = !((_r_destination = r.destination) == null ? void 0 : _r_destination.startsWith(\"/\"));\n    const destBasePath = srcBasePath && !isExternal ? srcBasePath : \"\";\n    if (config.i18n && r.locale !== false) {\n      var _r_destination1;\n      if (!isExternal) {\n        defaultLocales.forEach(item => {\n          let destination;\n          if (r.destination) {\n            destination = item.base ? `${item.base}${destBasePath}${r.destination}` : `${destBasePath}${r.destination}`;\n          }\n          newRoutes.push({\n            ...r,\n            destination,\n            source: `${srcBasePath}/${item.locale}${r.source === \"/\" && !config.trailingSlash ? \"\" : r.source}`\n          });\n        });\n      }\n      r.source = `/:nextInternalLocale(${config.i18n.locales.map(locale => (0, _escaperegexp.escapeStringRegexp)(locale)).join(\"|\")})${r.source === \"/\" && !config.trailingSlash ? \"\" : r.source}`;\n      if (r.destination && ((_r_destination1 = r.destination) == null ? void 0 : _r_destination1.startsWith(\"/\"))) {\n        r.destination = `/:nextInternalLocale${r.destination === \"/\" && !config.trailingSlash ? \"\" : r.destination}`;\n      }\n    }\n    r.source = `${srcBasePath}${r.source === \"/\" && srcBasePath ? \"\" : r.source}`;\n    if (r.destination) {\n      r.destination = `${destBasePath}${r.destination === \"/\" && destBasePath ? \"\" : r.destination}`;\n    }\n    newRoutes.push(r);\n  }\n  return newRoutes;\n}\nasync function loadRedirects(config) {\n  if (typeof config.redirects !== \"function\") {\n    return [];\n  }\n  let redirects = await config.redirects();\n  // check before we process the routes and after to ensure\n  // they are still valid\n  checkCustomRoutes(redirects, \"redirect\");\n  // save original redirects before transforms\n  if (Array.isArray(redirects)) {\n    config._originalRedirects = redirects.map(r => ({\n      ...r\n    }));\n  }\n  redirects = processRoutes(redirects, config, \"redirect\");\n  checkCustomRoutes(redirects, \"redirect\");\n  return redirects;\n}\nasync function loadRewrites(config) {\n  if (typeof config.rewrites !== \"function\") {\n    return {\n      beforeFiles: [],\n      afterFiles: [],\n      fallback: []\n    };\n  }\n  const _rewrites = await config.rewrites();\n  let beforeFiles = [];\n  let afterFiles = [];\n  let fallback = [];\n  if (!Array.isArray(_rewrites) && typeof _rewrites === \"object\" && Object.keys(_rewrites).every(key => key === \"beforeFiles\" || key === \"afterFiles\" || key === \"fallback\")) {\n    beforeFiles = _rewrites.beforeFiles || [];\n    afterFiles = _rewrites.afterFiles || [];\n    fallback = _rewrites.fallback || [];\n  } else {\n    afterFiles = _rewrites;\n  }\n  // check before we process the routes and after to ensure\n  // they are still valid\n  checkCustomRoutes(beforeFiles, \"rewrite\");\n  checkCustomRoutes(afterFiles, \"rewrite\");\n  checkCustomRoutes(fallback, \"rewrite\");\n  // save original rewrites before transforms\n  config._originalRewrites = {\n    beforeFiles: beforeFiles.map(r => ({\n      ...r\n    })),\n    afterFiles: afterFiles.map(r => ({\n      ...r\n    })),\n    fallback: fallback.map(r => ({\n      ...r\n    }))\n  };\n  beforeFiles = processRoutes(beforeFiles, config, \"rewrite\");\n  afterFiles = processRoutes(afterFiles, config, \"rewrite\");\n  fallback = processRoutes(fallback, config, \"rewrite\");\n  checkCustomRoutes(beforeFiles, \"rewrite\");\n  checkCustomRoutes(afterFiles, \"rewrite\");\n  checkCustomRoutes(fallback, \"rewrite\");\n  return {\n    beforeFiles,\n    afterFiles,\n    fallback\n  };\n}\nasync function loadHeaders(config) {\n  if (typeof config.headers !== \"function\") {\n    return [];\n  }\n  let headers = await config.headers();\n  // check before we process the routes and after to ensure\n  // they are still valid\n  checkCustomRoutes(headers, \"header\");\n  headers = processRoutes(headers, config, \"header\");\n  checkCustomRoutes(headers, \"header\");\n  return headers;\n}\nasync function loadCustomRoutes(config) {\n  const [headers, rewrites, redirects] = await Promise.all([loadHeaders(config), loadRewrites(config), loadRedirects(config)]);\n  const totalRewrites = rewrites.beforeFiles.length + rewrites.afterFiles.length + rewrites.fallback.length;\n  const totalRoutes = headers.length + redirects.length + totalRewrites;\n  if (totalRoutes > 1000) {\n    console.warn(_chalk.default.bold.yellow(`Warning: `) + `total number of custom routes exceeds 1000, this can reduce performance. Route counts:\\n` + `headers: ${headers.length}\\n` + `rewrites: ${totalRewrites}\\n` + `redirects: ${redirects.length}\\n` + `See more info: https://nextjs.org/docs/messages/max-custom-routes-reached`);\n  }\n  if (!config.skipTrailingSlashRedirect) {\n    if (config.trailingSlash) {\n      redirects.unshift({\n        source: \"/:file((?!\\\\.well-known(?:/.*)?)(?:[^/]+/)*[^/]+\\\\.\\\\w+)/\",\n        destination: \"/:file\",\n        permanent: true,\n        locale: config.i18n ? false : undefined,\n        internal: true,\n        // don't run this redirect for _next/data requests\n        missing: [{\n          type: \"header\",\n          key: \"x-nextjs-data\"\n        }]\n      }, {\n        source: \"/:notfile((?!\\\\.well-known(?:/.*)?)(?:[^/]+/)*[^/\\\\.]+)\",\n        destination: \"/:notfile/\",\n        permanent: true,\n        locale: config.i18n ? false : undefined,\n        internal: true\n      });\n      if (config.basePath) {\n        redirects.unshift({\n          source: config.basePath,\n          destination: config.basePath + \"/\",\n          permanent: true,\n          basePath: false,\n          locale: config.i18n ? false : undefined,\n          internal: true\n        });\n      }\n    } else {\n      redirects.unshift({\n        source: \"/:path+/\",\n        destination: \"/:path+\",\n        permanent: true,\n        locale: config.i18n ? false : undefined,\n        internal: true\n      });\n      if (config.basePath) {\n        redirects.unshift({\n          source: config.basePath + \"/\",\n          destination: config.basePath,\n          permanent: true,\n          basePath: false,\n          locale: config.i18n ? false : undefined,\n          internal: true\n        });\n      }\n    }\n  }\n  return {\n    headers,\n    rewrites,\n    redirects\n  };\n}","map":{"version":3,"names":["normalizeRouteRegex","checkCustomRoutes","default","loadCustomRoutes","allowedHasTypes","Set","namedGroupsRegex","regex","replace","checkRedirect","route","invalidParts","hadInvalidStatus","statusCode","_redirectstatus","allowedStatusCodes","has","push","permanent","checkHeader","Array","isArray","headers","length","header","key","value","routes","type","console","error","process","exit","numInvalidRoutes","hadInvalidHas","hadInvalidMissing","allowedKeys","add","JSON","stringify","basePath","destination","startsWith","source","keys","Object","invalidKeys","filter","locale","checkInvalidHasMissing","items","fieldName","hadInvalidItem","invalidHasItems","hasItem","invalidHasParts","join","itemStr","missing","_route","match","result","sourceTokens","tokens","regexStr","_trytoparsepath","tryToParsePath","hasSegments","matchAll","unnamedInDest","token","name","unnamedIndex","RegExp","size","destTokens","destRegexStr","destinationParseFailed","handleUrl","sourceSegments","map","item","Boolean","invalidDestSegments","hasInvalidKeys","hasInvalidParts","processRoutes","config","_routes","newRoutes","defaultLocales","i18n","_config_i18n","domains","defaultLocale","base","http","domain","r","_r_destination","srcBasePath","isExternal","destBasePath","_r_destination1","forEach","trailingSlash","locales","_escaperegexp","escapeStringRegexp","loadRedirects","redirects","_originalRedirects","loadRewrites","rewrites","beforeFiles","afterFiles","fallback","_rewrites","every","_originalRewrites","loadHeaders","Promise","all","totalRewrites","totalRoutes","warn","_chalk","bold","yellow","skipTrailingSlashRedirect","unshift","undefined","internal"],"sources":["../../src/lib/load-custom-routes.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}