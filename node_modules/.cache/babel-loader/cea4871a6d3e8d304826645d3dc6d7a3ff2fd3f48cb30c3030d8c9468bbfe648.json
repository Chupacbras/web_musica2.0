{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"scheduleOnNextTick\", {\n  enumerable: true,\n  get: function () {\n    return scheduleOnNextTick;\n  }\n});\nfunction scheduleOnNextTick(cb) {\n  // We use Promise.resolve().then() here so that the operation is scheduled at\n  // the end of the promise job queue, we then add it to the next process tick\n  // to ensure it's evaluated afterwards.\n  //\n  // This was inspired by the implementation of the DataLoader interface: https://github.com/graphql/dataloader/blob/d336bd15282664e0be4b4a657cb796f09bafbc6b/src/index.js#L213-L255\n  //\n  Promise.resolve().then(() => {\n    process.nextTick(cb);\n  });\n}","map":{"version":3,"names":["scheduleOnNextTick","cb","Promise","resolve","then","process","nextTick"],"sources":["../../../src/server/lib/schedule-on-next-tick.ts"],"sourcesContent":[null],"mappings":";;;;;+BAMgB;;;WAAAA,kBAAA;;;AAAT,SAASA,mBAA6BC,EAAkB;EAC7D;EACA;EACA;EACA;EACA;EACA;EACAC,OAAA,CAAQC,OAAO,GAAGC,IAAI,CAAC;IACrBC,OAAA,CAAQC,QAAQ,CAACL,EAAA;EACnB;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}