{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"TerserPlugin\", {\n  enumerable: true,\n  get: function () {\n    return TerserPlugin;\n  }\n});\nconst _path = /*#__PURE__*/_interop_require_wildcard(require(\"path\"));\nconst _webpack = require(\"next/dist/compiled/webpack/webpack\");\nconst _plimit = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/p-limit\"));\nconst _jestworker = require(\"next/dist/compiled/jest-worker\");\nconst _profilingplugin = require(\"../../profiling-plugin\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction getEcmaVersion(environment) {\n  // ES 6th\n  if (environment.arrowFunction || environment.const || environment.destructuring || environment.forOf || environment.module) {\n    return 2015;\n  }\n  // ES 11th\n  if (environment.bigIntLiteral || environment.dynamicImport) {\n    return 2020;\n  }\n  return 5;\n}\nfunction buildError(error, file) {\n  if (error.line) {\n    return new Error(`${file} from Terser\\n${error.message} [${file}:${error.line},${error.col}]${error.stack ? `\\n${error.stack.split(\"\\n\").slice(1).join(\"\\n\")}` : \"\"}`);\n  }\n  if (error.stack) {\n    return new Error(`${file} from Terser\\n${error.message}\\n${error.stack}`);\n  }\n  return new Error(`${file} from Terser\\n${error.message}`);\n}\nconst debugMinify = process.env.NEXT_DEBUG_MINIFY;\nclass TerserPlugin {\n  constructor(options = {}) {\n    const {\n      terserOptions = {},\n      parallel,\n      swcMinify\n    } = options;\n    this.options = {\n      swcMinify,\n      parallel,\n      terserOptions\n    };\n  }\n  async optimize(compiler, compilation, assets, optimizeOptions, cache, {\n    SourceMapSource,\n    RawSource\n  }) {\n    const compilationSpan = _profilingplugin.spans.get(compilation) || _profilingplugin.spans.get(compiler);\n    const terserSpan = compilationSpan.traceChild(\"terser-webpack-plugin-optimize\");\n    terserSpan.setAttribute(\"compilationName\", compilation.name);\n    terserSpan.setAttribute(\"swcMinify\", this.options.swcMinify);\n    return terserSpan.traceAsyncFn(async () => {\n      let numberOfAssetsForMinify = 0;\n      const assetsList = Object.keys(assets);\n      const assetsForMinify = await Promise.all(assetsList.filter(name => {\n        if (!_webpack.ModuleFilenameHelpers.matchObject.bind(\n        // eslint-disable-next-line no-undefined\n        undefined, {\n          test: /\\.[cm]?js(\\?.*)?$/i\n        })(name)) {\n          return false;\n        }\n        const res = compilation.getAsset(name);\n        if (!res) {\n          console.log(name);\n          return false;\n        }\n        // don't minify _middleware as it can break in some cases\n        // and doesn't provide too much of a benefit as it's server-side\n        if (name.match(/(edge-runtime-webpack\\.js|edge-chunks|middleware\\.js$)/)) {\n          return false;\n        }\n        const {\n          info\n        } = res;\n        // Skip double minimize assets from child compilation\n        if (info.minimized) {\n          return false;\n        }\n        return true;\n      }).map(async name => {\n        const {\n          info,\n          source\n        } = compilation.getAsset(name);\n        const eTag = cache.getLazyHashedEtag(source);\n        const output = await cache.getPromise(name, eTag);\n        if (!output) {\n          numberOfAssetsForMinify += 1;\n        }\n        if (debugMinify && debugMinify === \"1\") {\n          console.dir({\n            name,\n            source: source.source().toString()\n          }, {\n            breakLength: Infinity,\n            maxStringLength: Infinity\n          });\n        }\n        return {\n          name,\n          info,\n          inputSource: source,\n          output,\n          eTag\n        };\n      }));\n      const numberOfWorkers = Math.min(numberOfAssetsForMinify, optimizeOptions.availableNumberOfCores);\n      let initializedWorker;\n      // eslint-disable-next-line consistent-return\n      const getWorker = () => {\n        if (this.options.swcMinify) {\n          return {\n            minify: async options => {\n              const result = await require(\"../../../../swc\").minify(options.input, {\n                ...(options.inputSourceMap ? {\n                  sourceMap: {\n                    content: JSON.stringify(options.inputSourceMap)\n                  }\n                } : {}),\n                compress: true,\n                mangle: true\n              });\n              return result;\n            }\n          };\n        }\n        if (initializedWorker) {\n          return initializedWorker;\n        }\n        initializedWorker = new _jestworker.Worker(_path.join(__dirname, \"./minify.js\"), {\n          numWorkers: numberOfWorkers,\n          enableWorkerThreads: true\n        });\n        initializedWorker.getStdout().pipe(process.stdout);\n        initializedWorker.getStderr().pipe(process.stderr);\n        return initializedWorker;\n      };\n      const limit = (0, _plimit.default)(\n      // When using the SWC minifier the limit will be handled by Node.js\n      this.options.swcMinify ? Infinity : numberOfAssetsForMinify > 0 ? numberOfWorkers : Infinity);\n      const scheduledTasks = [];\n      for (const asset of assetsForMinify) {\n        scheduledTasks.push(limit(async () => {\n          const {\n            name,\n            inputSource,\n            info,\n            eTag\n          } = asset;\n          let {\n            output\n          } = asset;\n          const minifySpan = terserSpan.traceChild(\"minify-js\");\n          minifySpan.setAttribute(\"name\", name);\n          minifySpan.setAttribute(\"cache\", typeof output === \"undefined\" ? \"MISS\" : \"HIT\");\n          return minifySpan.traceAsyncFn(async () => {\n            if (!output) {\n              const {\n                source: sourceFromInputSource,\n                map: inputSourceMap\n              } = inputSource.sourceAndMap();\n              const input = Buffer.isBuffer(sourceFromInputSource) ? sourceFromInputSource.toString() : sourceFromInputSource;\n              const options = {\n                name,\n                input,\n                inputSourceMap,\n                terserOptions: {\n                  ...this.options.terserOptions\n                }\n              };\n              if (typeof options.terserOptions.module === \"undefined\") {\n                if (typeof info.javascriptModule !== \"undefined\") {\n                  options.terserOptions.module = info.javascriptModule;\n                } else if (/\\.mjs(\\?.*)?$/i.test(name)) {\n                  options.terserOptions.module = true;\n                } else if (/\\.cjs(\\?.*)?$/i.test(name)) {\n                  options.terserOptions.module = false;\n                }\n              }\n              try {\n                output = await getWorker().minify(options);\n              } catch (error) {\n                compilation.errors.push(buildError(error, name));\n                return;\n              }\n              if (output.map) {\n                output.source = new SourceMapSource(output.code, name, output.map, input, inputSourceMap, true);\n              } else {\n                output.source = new RawSource(output.code);\n              }\n              await cache.storePromise(name, eTag, {\n                source: output.source\n              });\n            }\n            const newInfo = {\n              minimized: true\n            };\n            const {\n              source\n            } = output;\n            compilation.updateAsset(name, source, newInfo);\n          });\n        }));\n      }\n      await Promise.all(scheduledTasks);\n      if (initializedWorker) {\n        await initializedWorker.end();\n      }\n    });\n  }\n  apply(compiler) {\n    var _compiler_webpack;\n    const {\n      SourceMapSource,\n      RawSource\n    } = (compiler == null ? void 0 : (_compiler_webpack = compiler.webpack) == null ? void 0 : _compiler_webpack.sources) || _webpack.sources;\n    const {\n      output\n    } = compiler.options;\n    if (typeof this.options.terserOptions.ecma === \"undefined\") {\n      this.options.terserOptions.ecma = getEcmaVersion(output.environment || {});\n    }\n    const pluginName = this.constructor.name;\n    const availableNumberOfCores = this.options.parallel;\n    compiler.hooks.thisCompilation.tap(pluginName, compilation => {\n      const cache = compilation.getCache(\"TerserWebpackPlugin\");\n      const handleHashForChunk = (hash, _chunk) => {\n        // increment 'c' to invalidate cache\n        hash.update(\"c\");\n      };\n      const JSModulesHooks = _webpack.webpack.javascript.JavascriptModulesPlugin.getCompilationHooks(compilation);\n      JSModulesHooks.chunkHash.tap(pluginName, (chunk, hash) => {\n        if (!chunk.hasRuntime()) return;\n        return handleHashForChunk(hash, chunk);\n      });\n      compilation.hooks.processAssets.tapPromise({\n        name: pluginName,\n        stage: _webpack.webpack.Compilation.PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE\n      }, assets => this.optimize(compiler, compilation, assets, {\n        availableNumberOfCores\n      }, cache, {\n        SourceMapSource,\n        RawSource\n      }));\n      compilation.hooks.statsPrinter.tap(pluginName, stats => {\n        stats.hooks.print.for(\"asset.info.minimized\").tap(\"terser-webpack-plugin\", (minimized, {\n          green,\n          formatFlag\n        }) =>\n        // eslint-disable-next-line no-undefined\n        minimized ? green(formatFlag(\"minimized\")) : undefined);\n      });\n    });\n  }\n}","map":{"version":3,"names":["TerserPlugin","getEcmaVersion","environment","arrowFunction","const","destructuring","forOf","module","bigIntLiteral","dynamicImport","buildError","error","file","line","Error","message","col","stack","split","slice","join","debugMinify","process","env","NEXT_DEBUG_MINIFY","constructor","options","terserOptions","parallel","swcMinify","optimize","compiler","compilation","assets","optimizeOptions","cache","SourceMapSource","RawSource","compilationSpan","_profilingplugin","spans","get","terserSpan","traceChild","setAttribute","name","traceAsyncFn","numberOfAssetsForMinify","assetsList","Object","keys","assetsForMinify","Promise","all","filter","_webpack","ModuleFilenameHelpers","matchObject","bind","undefined","test","res","getAsset","console","log","match","info","minimized","map","source","eTag","getLazyHashedEtag","output","getPromise","dir","toString","breakLength","Infinity","maxStringLength","inputSource","numberOfWorkers","Math","min","availableNumberOfCores","initializedWorker","getWorker","minify","result","require","input","inputSourceMap","sourceMap","content","JSON","stringify","compress","mangle","_jestworker","Worker","_path","__dirname","numWorkers","enableWorkerThreads","getStdout","pipe","stdout","getStderr","stderr","limit","_plimit","default","scheduledTasks","asset","push","minifySpan","sourceFromInputSource","sourceAndMap","Buffer","isBuffer","javascriptModule","errors","code","storePromise","newInfo","updateAsset","end","apply","_compiler_webpack","webpack","sources","ecma","pluginName","hooks","thisCompilation","tap","getCache","handleHashForChunk","hash","_chunk","update","JSModulesHooks","javascript","JavascriptModulesPlugin","getCompilationHooks","chunkHash","chunk","hasRuntime","processAssets","tapPromise","stage","Compilation","PROCESS_ASSETS_STAGE_OPTIMIZE_SIZE","statsPrinter","stats","print","for","green","formatFlag"],"sources":["../../../../../../src/build/webpack/plugins/terser-webpack-plugin/src/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}