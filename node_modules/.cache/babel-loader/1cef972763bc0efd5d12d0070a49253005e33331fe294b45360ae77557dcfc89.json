{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"autoImplementMethods\", {\n  enumerable: true,\n  get: function () {\n    return autoImplementMethods;\n  }\n});\nconst _http = require(\"../../../../web/http\");\nconst _responsehandlers = require(\"../../helpers/response-handlers\");\nconst AUTOMATIC_ROUTE_METHODS = [\"HEAD\", \"OPTIONS\"];\nfunction autoImplementMethods(handlers) {\n  // Loop through all the HTTP methods to create the initial methods object.\n  // Each of the methods will be set to the the 405 response handler.\n  const methods = _http.HTTP_METHODS.reduce((acc, method) => ({\n    ...acc,\n    // If the userland module implements the method, then use it. Otherwise,\n    // use the 405 response handler.\n    [method]: handlers[method] ?? _responsehandlers.handleMethodNotAllowedResponse\n  }), {});\n  // Get all the methods that could be automatically implemented that were not\n  // implemented by the userland module.\n  const implemented = new Set(_http.HTTP_METHODS.filter(method => handlers[method]));\n  const missing = AUTOMATIC_ROUTE_METHODS.filter(method => !implemented.has(method));\n  // Loop over the missing methods to automatically implement them if we can.\n  for (const method of missing) {\n    // If the userland module doesn't implement the HEAD method, then\n    // we'll automatically implement it by calling the GET method (if it\n    // exists).\n    if (method === \"HEAD\") {\n      // If the userland module doesn't implement the GET method, then\n      // we're done.\n      if (!handlers.GET) break;\n      // Implement the HEAD method by calling the GET method.\n      methods.HEAD = handlers.GET;\n      // Mark it as implemented.\n      implemented.add(\"HEAD\");\n      continue;\n    }\n    // If OPTIONS is not provided then implement it.\n    if (method === \"OPTIONS\") {\n      // TODO: check if HEAD is implemented, if so, use it to add more headers\n      // Get all the methods that were implemented by the userland module.\n      const allow = [\"OPTIONS\", ...implemented];\n      // If the list of methods doesn't include HEAD, but it includes GET, then\n      // add HEAD as it's automatically implemented.\n      if (!implemented.has(\"HEAD\") && implemented.has(\"GET\")) {\n        allow.push(\"HEAD\");\n      }\n      // Sort and join the list with commas to create the `Allow` header. See:\n      // https://httpwg.org/specs/rfc9110.html#field.allow\n      const headers = {\n        Allow: allow.sort().join(\", \")\n      };\n      // Implement the OPTIONS method by returning a 204 response with the\n      // `Allow` header.\n      methods.OPTIONS = () => new Response(null, {\n        status: 204,\n        headers\n      });\n      // Mark this method as implemented.\n      implemented.add(\"OPTIONS\");\n      continue;\n    }\n    throw new Error(`Invariant: should handle all automatic implementable methods, got method: ${method}`);\n  }\n  return methods;\n}","map":{"version":3,"names":["autoImplementMethods","AUTOMATIC_ROUTE_METHODS","handlers","methods","_http","HTTP_METHODS","reduce","acc","method","_responsehandlers","handleMethodNotAllowedResponse","implemented","Set","filter","missing","has","GET","HEAD","add","allow","push","headers","Allow","sort","join","OPTIONS","Response","status","Error"],"sources":["../../../../../../src/server/future/route-modules/app-route/helpers/auto-implement-methods.ts"],"sourcesContent":[null],"mappings":";;;;;+BAOgB;;;WAAAA,oBAAA;;;sBAL+B;kCACA;AAE/C,MAAMC,uBAAA,GAA0B,CAAC,QAAQ,UAAU;AAE5C,SAASD,qBACdE,QAA0B;EAE1B;EACA;EACA,MAAMC,OAAA,GAAkDC,KAAA,CAAAC,YAAY,CAACC,MAAM,CACzE,CAACC,GAAA,EAAKC,MAAA,MAAY;IAChB,GAAGD,GAAG;IACN;IACA;IACA,CAACC,MAAA,GAASN,QAAQ,CAACM,MAAA,CAAO,IAAIC,iBAAA,CAAAC;EAChC,IACA,CAAC;EAGH;EACA;EACA,MAAMC,WAAA,GAAc,IAAIC,GAAA,CAAIR,KAAA,CAAAC,YAAY,CAACQ,MAAM,CAAEL,MAAA,IAAWN,QAAQ,CAACM,MAAA,CAAO;EAC5E,MAAMM,OAAA,GAAUb,uBAAA,CAAwBY,MAAM,CAC3CL,MAAA,IAAW,CAACG,WAAA,CAAYI,GAAG,CAACP,MAAA;EAG/B;EACA,KAAK,MAAMA,MAAA,IAAUM,OAAA,EAAS;IAC5B;IACA;IACA;IACA,IAAIN,MAAA,KAAW,QAAQ;MACrB;MACA;MACA,IAAI,CAACN,QAAA,CAASc,GAAG,EAAE;MAEnB;MACAb,OAAA,CAAQc,IAAI,GAAGf,QAAA,CAASc,GAAG;MAE3B;MACAL,WAAA,CAAYO,GAAG,CAAC;MAEhB;IACF;IAEA;IACA,IAAIV,MAAA,KAAW,WAAW;MACxB;MAEA;MACA,MAAMW,KAAA,GAAuB,CAAC,W,GAAcR,WAAA,CAAY;MAExD;MACA;MACA,IAAI,CAACA,WAAA,CAAYI,GAAG,CAAC,WAAWJ,WAAA,CAAYI,GAAG,CAAC,QAAQ;QACtDI,KAAA,CAAMC,IAAI,CAAC;MACb;MAEA;MACA;MACA,MAAMC,OAAA,GAAU;QAAEC,KAAA,EAAOH,KAAA,CAAMI,IAAI,GAAGC,IAAI,CAAC;MAAM;MAEjD;MACA;MACArB,OAAA,CAAQsB,OAAO,GAAG,MAAM,IAAIC,QAAA,CAAS,MAAM;QAAEC,MAAA,EAAQ;QAAKN;MAAQ;MAElE;MACAV,WAAA,CAAYO,GAAG,CAAC;MAEhB;IACF;IAEA,MAAM,IAAIU,KAAA,CACP,6EAA4EpB,MAAO,EAAC;EAEzF;EAEA,OAAOL,OAAA;AACT"},"metadata":{},"sourceType":"script","externalDependencies":[]}