{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  prefixes: null,\n  bootstrap: null,\n  wait: null,\n  error: null,\n  warn: null,\n  ready: null,\n  info: null,\n  event: null,\n  trace: null,\n  warnOnce: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  prefixes: function () {\n    return prefixes;\n  },\n  bootstrap: function () {\n    return bootstrap;\n  },\n  wait: function () {\n    return wait;\n  },\n  error: function () {\n    return error;\n  },\n  warn: function () {\n    return warn;\n  },\n  ready: function () {\n    return ready;\n  },\n  info: function () {\n    return info;\n  },\n  event: function () {\n    return event;\n  },\n  trace: function () {\n    return trace;\n  },\n  warnOnce: function () {\n    return warnOnce;\n  }\n});\nconst _chalk = /*#__PURE__*/_interop_require_default(require(\"../../lib/chalk\"));\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst prefixes = {\n  wait: _chalk.default.white(_chalk.default.bold(\"○\")),\n  error: _chalk.default.red(_chalk.default.bold(\"⨯\")),\n  warn: _chalk.default.yellow(_chalk.default.bold(\"⚠\")),\n  ready: _chalk.default.bold(\"▲\"),\n  info: _chalk.default.white(_chalk.default.bold(\" \")),\n  event: _chalk.default.green(_chalk.default.bold(\"✓\")),\n  trace: _chalk.default.magenta(_chalk.default.bold(\"\\xbb\"))\n};\nconst LOGGING_METHOD = {\n  log: \"log\",\n  warn: \"warn\",\n  error: \"error\"\n};\nfunction prefixedLog(prefixType, ...message) {\n  if ((message[0] === \"\" || message[0] === undefined) && message.length === 1) {\n    message.shift();\n  }\n  const consoleMethod = prefixType in LOGGING_METHOD ? LOGGING_METHOD[prefixType] : \"log\";\n  const prefix = prefixes[prefixType];\n  // If there's no message, don't print the prefix but a new line\n  if (message.length === 0) {\n    console[consoleMethod](\"\");\n  } else {\n    console[consoleMethod](\" \" + prefix, ...message);\n  }\n}\nfunction bootstrap(...message) {\n  console.log(\" \", ...message);\n}\nfunction wait(...message) {\n  prefixedLog(\"wait\", ...message);\n}\nfunction error(...message) {\n  prefixedLog(\"error\", ...message);\n}\nfunction warn(...message) {\n  prefixedLog(\"warn\", ...message);\n}\nfunction ready(...message) {\n  prefixedLog(\"ready\", ...message);\n}\nfunction info(...message) {\n  prefixedLog(\"info\", ...message);\n}\nfunction event(...message) {\n  prefixedLog(\"event\", ...message);\n}\nfunction trace(...message) {\n  prefixedLog(\"trace\", ...message);\n}\nconst warnOnceMessages = new Set();\nfunction warnOnce(...message) {\n  if (!warnOnceMessages.has(message[0])) {\n    warnOnceMessages.add(message.join(\" \"));\n    warn(...message);\n  }\n}","map":{"version":3,"names":["prefixes","bootstrap","wait","error","warn","ready","info","event","trace","warnOnce","_chalk","default","white","bold","red","yellow","green","magenta","LOGGING_METHOD","log","prefixedLog","prefixType","message","undefined","length","shift","consoleMethod","prefix","console","warnOnceMessages","Set","has","add","join"],"sources":["../../../src/build/output/log.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}