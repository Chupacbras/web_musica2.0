{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"CopyFilePlugin\", {\n  enumerable: true,\n  get: function () {\n    return CopyFilePlugin;\n  }\n});\nconst _fs = require(\"fs\");\nconst _loaderutils3 = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/loader-utils3\"));\nconst _webpack = require(\"next/dist/compiled/webpack/webpack\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst PLUGIN_NAME = \"CopyFilePlugin\";\nclass CopyFilePlugin {\n  constructor({\n    filePath,\n    cacheKey,\n    name,\n    info\n  }) {\n    this.filePath = filePath;\n    this.cacheKey = cacheKey;\n    this.name = name;\n    this.info = info;\n  }\n  apply(compiler) {\n    compiler.hooks.thisCompilation.tap(PLUGIN_NAME, compilation => {\n      const cache = compilation.getCache(\"CopyFilePlugin\");\n      const hook = compilation.hooks.processAssets;\n      hook.tapPromise({\n        name: PLUGIN_NAME,\n        stage: _webpack.webpack.Compilation.PROCESS_ASSETS_STAGE_ADDITIONS\n      }, async () => {\n        if (cache) {\n          const cachedResult = await cache.getPromise(this.filePath, this.cacheKey);\n          if (cachedResult) {\n            const {\n              file,\n              source\n            } = cachedResult;\n            compilation.emitAsset(file, source, {\n              ...this.info\n            });\n            return;\n          }\n        }\n        const content = await _fs.promises.readFile(this.filePath, \"utf8\");\n        const file = _loaderutils3.default.interpolateName({\n          resourcePath: this.filePath\n        }, this.name, {\n          content,\n          context: compiler.context\n        });\n        const source = new _webpack.sources.RawSource(content);\n        if (cache) {\n          await cache.storePromise(this.filePath, this.cacheKey, {\n            file,\n            source\n          });\n        }\n        compilation.emitAsset(file, source, {\n          ...this.info\n        });\n      });\n    });\n  }\n}","map":{"version":3,"names":["CopyFilePlugin","PLUGIN_NAME","constructor","filePath","cacheKey","name","info","apply","compiler","hooks","thisCompilation","tap","compilation","cache","getCache","hook","processAssets","tapPromise","stage","_webpack","webpack","Compilation","PROCESS_ASSETS_STAGE_ADDITIONS","cachedResult","getPromise","file","source","emitAsset","content","_fs","promises","readFile","_loaderutils3","default","interpolateName","resourcePath","context","sources","RawSource","storePromise"],"sources":["../../../../src/build/webpack/plugins/copy-file-plugin.ts"],"sourcesContent":[null],"mappings":";;;;;+BAMa;;;WAAAA,cAAA;;;oBANkB;oEACP;yBACS;;;;;;AAEjC,MAAMC,WAAA,GAAc;AAEb,MAAMD,cAAA;EAMXE,YAAY;IACVC,QAAQ;IACRC,QAAQ;IACRC,IAAI;IACJC;EAAI,CAOL,EAAE;IACD,IAAI,CAACH,QAAQ,GAAGA,QAAA;IAChB,IAAI,CAACC,QAAQ,GAAGA,QAAA;IAChB,IAAI,CAACC,IAAI,GAAGA,IAAA;IACZ,IAAI,CAACC,IAAI,GAAGA,IAAA;EACd;EAEAC,MAAMC,QAA0B,EAAE;IAChCA,QAAA,CAASC,KAAK,CAACC,eAAe,CAACC,GAAG,CAACV,WAAA,EAAcW,WAAA;MAC/C,MAAMC,KAAA,GAAQD,WAAA,CAAYE,QAAQ,CAAC;MACnC,MAAMC,IAAA,GAAOH,WAAA,CAAYH,KAAK,CAACO,aAAa;MAC5CD,IAAA,CAAKE,UAAU,CACb;QACEZ,IAAA,EAAMJ,WAAA;QACNiB,KAAA,EAAOC,QAAA,CAAAC,OAAO,CAACC,WAAW,CAACC;MAC7B,GACA;QACE,IAAIT,KAAA,EAAO;UACT,MAAMU,YAAA,GAAe,MAAMV,KAAA,CAAMW,UAAU,CACzC,IAAI,CAACrB,QAAQ,EACb,IAAI,CAACC,QAAQ;UAEf,IAAImB,YAAA,EAAc;YAChB,MAAM;cAAEE,IAAI;cAAEC;YAAM,CAAE,GAAGH,YAAA;YACzBX,WAAA,CAAYe,SAAS,CAACF,IAAA,EAAMC,MAAA,EAAQ;cAClC,GAAG,IAAI,CAACpB;YACV;YACA;UACF;QACF;QACA,MAAMsB,OAAA,GAAU,MAAMC,GAAA,CAAAC,QAAE,CAACC,QAAQ,CAAC,IAAI,CAAC5B,QAAQ,EAAE;QAEjD,MAAMsB,IAAA,GAAOO,aAAA,CAAAC,OAAW,CAACC,eAAe,CACtC;UAAEC,YAAA,EAAc,IAAI,CAAChC;QAAS,GAC9B,IAAI,CAACE,IAAI,EACT;UAAEuB,OAAA;UAASQ,OAAA,EAAS5B,QAAA,CAAS4B;QAAQ;QAGvC,MAAMV,MAAA,GAAS,IAAIP,QAAA,CAAAkB,OAAO,CAACC,SAAS,CAACV,OAAA;QAErC,IAAIf,KAAA,EAAO;UACT,MAAMA,KAAA,CAAM0B,YAAY,CAAC,IAAI,CAACpC,QAAQ,EAAE,IAAI,CAACC,QAAQ,EAAE;YACrDqB,IAAA;YACAC;UACF;QACF;QAEAd,WAAA,CAAYe,SAAS,CAACF,IAAA,EAAMC,MAAA,EAAQ;UAClC,GAAG,IAAI,CAACpB;QACV;MACF;IAEJ;EACF;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}