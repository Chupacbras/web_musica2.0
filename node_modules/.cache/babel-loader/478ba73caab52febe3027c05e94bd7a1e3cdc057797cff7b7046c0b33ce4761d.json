{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"exportPages\", {\n  enumerable: true,\n  get: function () {\n    return exportPages;\n  }\n});\nconst _promises = /*#__PURE__*/_interop_require_default(require(\"fs/promises\"));\nconst _renderresult = /*#__PURE__*/_interop_require_default(require(\"../../server/render-result\"));\nconst _path = require(\"path\");\nconst _ampmode = require(\"../../shared/lib/amp-mode\");\nconst _constants = require(\"../../lib/constants\");\nconst _nossrerror = require(\"../../shared/lib/lazy-dynamic/no-ssr-error\");\nconst _amphtmlvalidator = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/amphtml-validator\"));\nconst _fileexists = require(\"../../lib/file-exists\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Lazily loads and runs the app page render function.\n */\nconst render = (...args) => {\n  return require(\"../../server/future/route-modules/pages/module.compiled\").renderToHTML(...args);\n};\nasync function exportPages(req, res, path, page, query, htmlFilepath, htmlFilename, ampPath, subFolders, outDir, ampValidatorPath, pagesDataDir, buildExport, isDynamic, hasOrigQueryValues, renderOpts, components) {\n  var _components_pageConfig, _components_pageConfig1;\n  const ampState = {\n    ampFirst: ((_components_pageConfig = components.pageConfig) == null ? void 0 : _components_pageConfig.amp) === true,\n    hasQuery: Boolean(query.amp),\n    hybrid: ((_components_pageConfig1 = components.pageConfig) == null ? void 0 : _components_pageConfig1.amp) === \"hybrid\"\n  };\n  const inAmpMode = (0, _ampmode.isInAmpMode)(ampState);\n  const hybridAmp = ampState.hybrid;\n  if (components.getServerSideProps) {\n    throw new Error(`Error for page ${page}: ${_constants.SERVER_PROPS_EXPORT_ERROR}`);\n  }\n  // for non-dynamic SSG pages we should have already\n  // prerendered the file\n  if (!buildExport && components.getStaticProps && !isDynamic) {\n    return {};\n  }\n  if (components.getStaticProps && !htmlFilepath.endsWith(\".html\")) {\n    // make sure it ends with .html if the name contains a dot\n    htmlFilepath += \".html\";\n    htmlFilename += \".html\";\n  }\n  let renderResult;\n  if (typeof components.Component === \"string\") {\n    renderResult = _renderresult.default.fromStatic(components.Component);\n    if (hasOrigQueryValues) {\n      throw new Error(`\\nError: you provided query values for ${path} which is an auto-exported page. These can not be applied since the page can no longer be re-rendered on the server. To disable auto-export for this page add \\`getInitialProps\\`\\n`);\n    }\n  } else {\n    /**\n    * This sets environment variable to be used at the time of static export by head.tsx.\n    * Using this from process.env allows targeting SSR by calling\n    * `process.env.__NEXT_OPTIMIZE_FONTS`.\n    * TODO(prateekbh@): Remove this when experimental.optimizeFonts are being cleaned up.\n    */\n    if (renderOpts.optimizeFonts) {\n      process.env.__NEXT_OPTIMIZE_FONTS = JSON.stringify(renderOpts.optimizeFonts);\n    }\n    if (renderOpts.optimizeCss) {\n      process.env.__NEXT_OPTIMIZE_CSS = JSON.stringify(true);\n    }\n    try {\n      renderResult = await render(req, res, page, query, renderOpts);\n    } catch (err) {\n      if (err.digest !== _nossrerror.NEXT_DYNAMIC_NO_SSR_CODE) {\n        throw err;\n      }\n    }\n  }\n  const ssgNotFound = renderResult == null ? void 0 : renderResult.metadata.isNotFound;\n  const ampValidations = [];\n  const validateAmp = async (rawAmpHtml, ampPageName, validatorPath) => {\n    const validator = await _amphtmlvalidator.default.getInstance(validatorPath);\n    const result = validator.validateString(rawAmpHtml);\n    const errors = result.errors.filter(e => e.severity === \"ERROR\");\n    const warnings = result.errors.filter(e => e.severity !== \"ERROR\");\n    if (warnings.length || errors.length) {\n      ampValidations.push({\n        page: ampPageName,\n        result: {\n          errors,\n          warnings\n        }\n      });\n    }\n  };\n  const html = renderResult && !renderResult.isNull ? renderResult.toUnchunkedString() : \"\";\n  let ampRenderResult;\n  if (inAmpMode && !renderOpts.ampSkipValidation) {\n    if (!ssgNotFound) {\n      await validateAmp(html, path, ampValidatorPath);\n    }\n  } else if (hybridAmp) {\n    const ampHtmlFilename = subFolders ? (0, _path.join)(ampPath, \"index.html\") : `${ampPath}.html`;\n    const ampBaseDir = (0, _path.join)(outDir, (0, _path.dirname)(ampHtmlFilename));\n    const ampHtmlFilepath = (0, _path.join)(outDir, ampHtmlFilename);\n    const exists = await (0, _fileexists.fileExists)(ampHtmlFilepath, _fileexists.FileType.File);\n    if (!exists) {\n      try {\n        ampRenderResult = await render(req, res, page, {\n          ...query,\n          amp: \"1\"\n        }, renderOpts);\n      } catch (err) {\n        if (err.digest !== _nossrerror.NEXT_DYNAMIC_NO_SSR_CODE) {\n          throw err;\n        }\n      }\n      const ampHtml = ampRenderResult && !ampRenderResult.isNull ? ampRenderResult.toUnchunkedString() : \"\";\n      if (!renderOpts.ampSkipValidation) {\n        await validateAmp(ampHtml, page + \"?amp=1\");\n      }\n      await _promises.default.mkdir(ampBaseDir, {\n        recursive: true\n      });\n      await _promises.default.writeFile(ampHtmlFilepath, ampHtml, \"utf8\");\n    }\n  }\n  const metadata = (renderResult == null ? void 0 : renderResult.metadata) || (ampRenderResult == null ? void 0 : ampRenderResult.metadata) || {};\n  if (metadata.pageData) {\n    const dataFile = (0, _path.join)(pagesDataDir, htmlFilename.replace(/\\.html$/, \".json\"));\n    await _promises.default.mkdir((0, _path.dirname)(dataFile), {\n      recursive: true\n    });\n    await _promises.default.writeFile(dataFile, JSON.stringify(metadata.pageData), \"utf8\");\n    if (hybridAmp) {\n      await _promises.default.writeFile(dataFile.replace(/\\.json$/, \".amp.json\"), JSON.stringify(metadata.pageData), \"utf8\");\n    }\n  }\n  if (!ssgNotFound) {\n    // don't attempt writing to disk if getStaticProps returned not found\n    await _promises.default.writeFile(htmlFilepath, html, \"utf8\");\n  }\n  return {\n    ampValidations,\n    fromBuildExportRevalidate: metadata.revalidate,\n    ssgNotFound\n  };\n}","map":{"version":3,"names":["exportPages","render","args","require","renderToHTML","req","res","path","page","query","htmlFilepath","htmlFilename","ampPath","subFolders","outDir","ampValidatorPath","pagesDataDir","buildExport","isDynamic","hasOrigQueryValues","renderOpts","components","_components_pageConfig","_components_pageConfig1","ampState","ampFirst","pageConfig","amp","hasQuery","Boolean","hybrid","inAmpMode","_ampmode","isInAmpMode","hybridAmp","getServerSideProps","Error","_constants","SERVER_PROPS_EXPORT_ERROR","getStaticProps","endsWith","renderResult","Component","_renderresult","default","fromStatic","optimizeFonts","process","env","__NEXT_OPTIMIZE_FONTS","JSON","stringify","optimizeCss","__NEXT_OPTIMIZE_CSS","err","digest","_nossrerror","NEXT_DYNAMIC_NO_SSR_CODE","ssgNotFound","metadata","isNotFound","ampValidations","validateAmp","rawAmpHtml","ampPageName","validatorPath","validator","_amphtmlvalidator","getInstance","result","validateString","errors","filter","e","severity","warnings","length","push","html","isNull","toUnchunkedString","ampRenderResult","ampSkipValidation","ampHtmlFilename","_path","join","ampBaseDir","dirname","ampHtmlFilepath","exists","_fileexists","fileExists","FileType","File","ampHtml","_promises","mkdir","recursive","writeFile","pageData","dataFile","replace","fromBuildExportRevalidate","revalidate"],"sources":["../../../src/export/routes/pages.ts"],"sourcesContent":[null],"mappings":";;;;;+BAyBsB;;;WAAAA,WAAA;;;gEAnBP;oEACU;sBACK;yBAEF;2BACc;4BACD;wEACZ;4BACQ;;;;;;AAErC;;;AAGA,MAAMC,MAAA,GAAsBA,CAAC,GAAGC,IAAA;EAC9B,OAAOC,OAAA,CAAQ,2DAA2DC,YAAY,IACjFF,IAAA;AAEP;AAEO,eAAeF,YACpBK,GAAkB,EAClBC,GAAmB,EACnBC,IAAY,EACZC,IAAY,EACZC,KAAyB,EACzBC,YAAoB,EACpBC,YAAoB,EACpBC,OAAe,EACfC,UAAmB,EACnBC,MAAc,EACdC,gBAAoC,EACpCC,YAAoB,EACpBC,WAAoB,EACpBC,SAAkB,EAClBC,kBAA2B,EAC3BC,UAAsB,EACtBC,UAAoC;MAGxBC,sBAAA,EAEFC,uBAAA;EAHV,MAAMC,QAAA,GAAW;IACfC,QAAA,EAAU,EAAAH,sBAAA,GAAAD,UAAA,CAAWK,UAAU,qBAArBJ,sBAAA,CAAuBK,GAAG,MAAK;IACzCC,QAAA,EAAUC,OAAA,CAAQpB,KAAA,CAAMkB,GAAG;IAC3BG,MAAA,EAAQ,EAAAP,uBAAA,GAAAF,UAAA,CAAWK,UAAU,qBAArBH,uBAAA,CAAuBI,GAAG,MAAK;EACzC;EAEA,MAAMI,SAAA,GAAY,IAAAC,QAAA,CAAAC,WAAW,EAACT,QAAA;EAC9B,MAAMU,SAAA,GAAYV,QAAA,CAASM,MAAM;EAEjC,IAAIT,UAAA,CAAWc,kBAAkB,EAAE;IACjC,MAAM,IAAIC,KAAA,CAAO,kBAAiB5B,IAAK,KAAI6B,UAAA,CAAAC,yBAA0B,EAAC;EACxE;EAEA;EACA;EACA,IAAI,CAACrB,WAAA,IAAeI,UAAA,CAAWkB,cAAc,IAAI,CAACrB,SAAA,EAAW;IAC3D,OAAO,CAAC;EACV;EAEA,IAAIG,UAAA,CAAWkB,cAAc,IAAI,CAAC7B,YAAA,CAAa8B,QAAQ,CAAC,UAAU;IAChE;IACA9B,YAAA,IAAgB;IAChBC,YAAA,IAAgB;EAClB;EAEA,IAAI8B,YAAA;EAEJ,IAAI,OAAOpB,UAAA,CAAWqB,SAAS,KAAK,UAAU;IAC5CD,YAAA,GAAeE,aAAA,CAAAC,OAAY,CAACC,UAAU,CAACxB,UAAA,CAAWqB,SAAS;IAE3D,IAAIvB,kBAAA,EAAoB;MACtB,MAAM,IAAIiB,KAAA,CACP,0CAAyC7B,IAAK,qLAAoL;IAEvO;EACF,OAAO;IACL;;;;;;IAMA,IAAIa,UAAA,CAAW0B,aAAa,EAAE;MAC5BC,OAAA,CAAQC,GAAG,CAACC,qBAAqB,GAAGC,IAAA,CAAKC,SAAS,CAChD/B,UAAA,CAAW0B,aAAa;IAE5B;IACA,IAAI1B,UAAA,CAAWgC,WAAW,EAAE;MAC1BL,OAAA,CAAQC,GAAG,CAACK,mBAAmB,GAAGH,IAAA,CAAKC,SAAS,CAAC;IACnD;IACA,IAAI;MACFV,YAAA,GAAe,MAAMxC,MAAA,CAAOI,GAAA,EAAKC,GAAA,EAAKE,IAAA,EAAMC,KAAA,EAAOW,UAAA;IACrD,EAAE,OAAOkC,GAAA,EAAU;MACjB,IAAIA,GAAA,CAAIC,MAAM,KAAKC,WAAA,CAAAC,wBAAwB,EAAE;QAC3C,MAAMH,GAAA;MACR;IACF;EACF;EAEA,MAAMI,WAAA,GAAcjB,YAAA,oBAAAA,YAAA,CAAckB,QAAQ,CAACC,UAAU;EAErD,MAAMC,cAAA,GAAkC,EAAE;EAE1C,MAAMC,WAAA,GAAc,MAAAA,CAClBC,UAAA,EACAC,WAAA,EACAC,aAAA;IAEA,MAAMC,SAAA,GAAY,MAAMC,iBAAA,CAAAvB,OAAgB,CAACwB,WAAW,CAACH,aAAA;IACrD,MAAMI,MAAA,GAASH,SAAA,CAAUI,cAAc,CAACP,UAAA;IACxC,MAAMQ,MAAA,GAASF,MAAA,CAAOE,MAAM,CAACC,MAAM,CAAEC,CAAA,IAAMA,CAAA,CAAEC,QAAQ,KAAK;IAC1D,MAAMC,QAAA,GAAWN,MAAA,CAAOE,MAAM,CAACC,MAAM,CAAEC,CAAA,IAAMA,CAAA,CAAEC,QAAQ,KAAK;IAE5D,IAAIC,QAAA,CAASC,MAAM,IAAIL,MAAA,CAAOK,MAAM,EAAE;MACpCf,cAAA,CAAegB,IAAI,CAAC;QAClBrE,IAAA,EAAMwD,WAAA;QACNK,MAAA,EAAQ;UACNE,MAAA;UACAI;QACF;MACF;IACF;EACF;EAEA,MAAMG,IAAA,GACJrC,YAAA,IAAgB,CAACA,YAAA,CAAasC,MAAM,GAAGtC,YAAA,CAAauC,iBAAiB,KAAK;EAE5E,IAAIC,eAAA;EAEJ,IAAIlD,SAAA,IAAa,CAACX,UAAA,CAAW8D,iBAAiB,EAAE;IAC9C,IAAI,CAACxB,WAAA,EAAa;MAChB,MAAMI,WAAA,CAAYgB,IAAA,EAAMvE,IAAA,EAAMQ,gBAAA;IAChC;EACF,OAAO,IAAImB,SAAA,EAAW;IACpB,MAAMiD,eAAA,GAAkBtE,UAAA,GACpB,IAAAuE,KAAA,CAAAC,IAAI,EAACzE,OAAA,EAAS,gBACb,GAAEA,OAAQ,OAAM;IAErB,MAAM0E,UAAA,GAAa,IAAAF,KAAA,CAAAC,IAAI,EAACvE,MAAA,EAAQ,IAAAsE,KAAA,CAAAG,OAAO,EAACJ,eAAA;IACxC,MAAMK,eAAA,GAAkB,IAAAJ,KAAA,CAAAC,IAAI,EAACvE,MAAA,EAAQqE,eAAA;IAErC,MAAMM,MAAA,GAAS,MAAM,IAAAC,WAAA,CAAAC,UAAU,EAACH,eAAA,EAAiBE,WAAA,CAAAE,QAAQ,CAACC,IAAI;IAC9D,IAAI,CAACJ,MAAA,EAAQ;MACX,IAAI;QACFR,eAAA,GAAkB,MAAMhF,MAAA,CACtBI,GAAA,EACAC,GAAA,EACAE,IAAA,EACA;UAAE,GAAGC,KAAK;UAAEkB,GAAA,EAAK;QAAI,GACrBP,UAAA;MAEJ,EAAE,OAAOkC,GAAA,EAAU;QACjB,IAAIA,GAAA,CAAIC,MAAM,KAAKC,WAAA,CAAAC,wBAAwB,EAAE;UAC3C,MAAMH,GAAA;QACR;MACF;MAEA,MAAMwC,OAAA,GACJb,eAAA,IAAmB,CAACA,eAAA,CAAgBF,MAAM,GACtCE,eAAA,CAAgBD,iBAAiB,KACjC;MACN,IAAI,CAAC5D,UAAA,CAAW8D,iBAAiB,EAAE;QACjC,MAAMpB,WAAA,CAAYgC,OAAA,EAAStF,IAAA,GAAO;MACpC;MACA,MAAMuF,SAAA,CAAAnD,OAAE,CAACoD,KAAK,CAACV,UAAA,EAAY;QAAEW,SAAA,EAAW;MAAK;MAC7C,MAAMF,SAAA,CAAAnD,OAAE,CAACsD,SAAS,CAACV,eAAA,EAAiBM,OAAA,EAAS;IAC/C;EACF;EAEA,MAAMnC,QAAA,GAAW,CAAAlB,YAAA,oBAAAA,YAAA,CAAckB,QAAQ,MAAIsB,eAAA,oBAAAA,eAAA,CAAiBtB,QAAQ,KAAI,CAAC;EACzE,IAAIA,QAAA,CAASwC,QAAQ,EAAE;IACrB,MAAMC,QAAA,GAAW,IAAAhB,KAAA,CAAAC,IAAI,EACnBrE,YAAA,EACAL,YAAA,CAAa0F,OAAO,CAAC,WAAW;IAGlC,MAAMN,SAAA,CAAAnD,OAAE,CAACoD,KAAK,CAAC,IAAAZ,KAAA,CAAAG,OAAO,EAACa,QAAA,GAAW;MAAEH,SAAA,EAAW;IAAK;IACpD,MAAMF,SAAA,CAAAnD,OAAE,CAACsD,SAAS,CAACE,QAAA,EAAUlD,IAAA,CAAKC,SAAS,CAACQ,QAAA,CAASwC,QAAQ,GAAG;IAEhE,IAAIjE,SAAA,EAAW;MACb,MAAM6D,SAAA,CAAAnD,OAAE,CAACsD,SAAS,CAChBE,QAAA,CAASC,OAAO,CAAC,WAAW,cAC5BnD,IAAA,CAAKC,SAAS,CAACQ,QAAA,CAASwC,QAAQ,GAChC;IAEJ;EACF;EAEA,IAAI,CAACzC,WAAA,EAAa;IAChB;IACA,MAAMqC,SAAA,CAAAnD,OAAE,CAACsD,SAAS,CAACxF,YAAA,EAAcoE,IAAA,EAAM;EACzC;EAEA,OAAO;IACLjB,cAAA;IACAyC,yBAAA,EAA2B3C,QAAA,CAAS4C,UAAU;IAC9C7C;EACF;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}