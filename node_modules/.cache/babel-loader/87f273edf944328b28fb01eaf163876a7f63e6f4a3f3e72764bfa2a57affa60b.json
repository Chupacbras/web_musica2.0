{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateLocalFontFunctionCall = void 0;\nconst constants_1 = require(\"../constants\");\nconst format_available_values_1 = require(\"../format-available-values\");\nconst next_font_error_1 = require(\"../next-font-error\");\nconst extToFormat = {\n  woff: 'woff',\n  woff2: 'woff2',\n  ttf: 'truetype',\n  otf: 'opentype',\n  eot: 'embedded-opentype'\n};\n/**\n * Validate the data recieved from next-swc next-transform-font on next/font/local calls\n */\nfunction validateLocalFontFunctionCall(functionName, fontData) {\n  if (functionName) {\n    (0, next_font_error_1.nextFontError)(`next/font/local has no named exports`);\n  }\n  let {\n    src,\n    display = 'swap',\n    weight,\n    style,\n    fallback,\n    preload = true,\n    variable,\n    adjustFontFallback,\n    declarations\n  } = fontData || {};\n  if (!constants_1.allowedDisplayValues.includes(display)) {\n    (0, next_font_error_1.nextFontError)(`Invalid display value \\`${display}\\`.\\nAvailable display values: ${(0, format_available_values_1.formatAvailableValues)(constants_1.allowedDisplayValues)}`);\n  }\n  if (!src) {\n    (0, next_font_error_1.nextFontError)('Missing required `src` property');\n  }\n  if (!Array.isArray(src)) {\n    src = [{\n      path: src,\n      weight,\n      style\n    }];\n  } else {\n    if (src.length === 0) {\n      (0, next_font_error_1.nextFontError)('Unexpected empty `src` array.');\n    }\n  }\n  src = src.map(fontFile => {\n    var _a;\n    const ext = (_a = /\\.(woff|woff2|eot|ttf|otf)$/.exec(fontFile.path)) === null || _a === void 0 ? void 0 : _a[1];\n    if (!ext) {\n      (0, next_font_error_1.nextFontError)(`Unexpected file \\`${fontFile.path}\\``);\n    }\n    return {\n      ...fontFile,\n      ext,\n      format: extToFormat[ext]\n    };\n  });\n  if (Array.isArray(declarations)) {\n    declarations.forEach(declaration => {\n      if (['font-family', 'src', 'font-display', 'font-weight', 'font-style'].includes(declaration === null || declaration === void 0 ? void 0 : declaration.prop)) {\n        (0, next_font_error_1.nextFontError)(`Invalid declaration prop: \\`${declaration.prop}\\``);\n      }\n    });\n  }\n  return {\n    src,\n    display,\n    weight,\n    style,\n    fallback,\n    preload,\n    variable,\n    adjustFontFallback,\n    declarations\n  };\n}\nexports.validateLocalFontFunctionCall = validateLocalFontFunctionCall;","map":{"version":3,"names":["Object","defineProperty","exports","value","validateLocalFontFunctionCall","constants_1","require","format_available_values_1","next_font_error_1","extToFormat","woff","woff2","ttf","otf","eot","functionName","fontData","nextFontError","src","display","weight","style","fallback","preload","variable","adjustFontFallback","declarations","allowedDisplayValues","includes","formatAvailableValues","Array","isArray","path","length","map","fontFile","_a","ext","exec","format","forEach","declaration","prop"],"sources":["/Users/albertformatger/Documents/GitHub/web_musica/node_modules/next/dist/compiled/@next/font/dist/local/validate-local-font-function-call.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.validateLocalFontFunctionCall = void 0;\nconst constants_1 = require(\"../constants\");\nconst format_available_values_1 = require(\"../format-available-values\");\nconst next_font_error_1 = require(\"../next-font-error\");\nconst extToFormat = {\n    woff: 'woff',\n    woff2: 'woff2',\n    ttf: 'truetype',\n    otf: 'opentype',\n    eot: 'embedded-opentype',\n};\n/**\n * Validate the data recieved from next-swc next-transform-font on next/font/local calls\n */\nfunction validateLocalFontFunctionCall(functionName, fontData) {\n    if (functionName) {\n        (0, next_font_error_1.nextFontError)(`next/font/local has no named exports`);\n    }\n    let { src, display = 'swap', weight, style, fallback, preload = true, variable, adjustFontFallback, declarations, } = fontData || {};\n    if (!constants_1.allowedDisplayValues.includes(display)) {\n        (0, next_font_error_1.nextFontError)(`Invalid display value \\`${display}\\`.\\nAvailable display values: ${(0, format_available_values_1.formatAvailableValues)(constants_1.allowedDisplayValues)}`);\n    }\n    if (!src) {\n        (0, next_font_error_1.nextFontError)('Missing required `src` property');\n    }\n    if (!Array.isArray(src)) {\n        src = [{ path: src, weight, style }];\n    }\n    else {\n        if (src.length === 0) {\n            (0, next_font_error_1.nextFontError)('Unexpected empty `src` array.');\n        }\n    }\n    src = src.map((fontFile) => {\n        var _a;\n        const ext = (_a = /\\.(woff|woff2|eot|ttf|otf)$/.exec(fontFile.path)) === null || _a === void 0 ? void 0 : _a[1];\n        if (!ext) {\n            (0, next_font_error_1.nextFontError)(`Unexpected file \\`${fontFile.path}\\``);\n        }\n        return {\n            ...fontFile,\n            ext,\n            format: extToFormat[ext],\n        };\n    });\n    if (Array.isArray(declarations)) {\n        declarations.forEach((declaration) => {\n            if ([\n                'font-family',\n                'src',\n                'font-display',\n                'font-weight',\n                'font-style',\n            ].includes(declaration === null || declaration === void 0 ? void 0 : declaration.prop)) {\n                (0, next_font_error_1.nextFontError)(`Invalid declaration prop: \\`${declaration.prop}\\``);\n            }\n        });\n    }\n    return {\n        src,\n        display,\n        weight,\n        style,\n        fallback,\n        preload,\n        variable,\n        adjustFontFallback,\n        declarations,\n    };\n}\nexports.validateLocalFontFunctionCall = validateLocalFontFunctionCall;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}