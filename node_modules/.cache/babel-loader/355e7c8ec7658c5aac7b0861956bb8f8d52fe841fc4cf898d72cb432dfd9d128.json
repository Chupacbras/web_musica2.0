{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"verifyTypeScriptSetup\", {\n  enumerable: true,\n  get: function () {\n    return verifyTypeScriptSetup;\n  }\n});\nconst _chalk = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/chalk\"));\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nconst _hasnecessarydependencies = require(\"./has-necessary-dependencies\");\nconst _semver = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/semver\"));\nconst _compileerror = require(\"./compile-error\");\nconst _fatalerror = require(\"./fatal-error\");\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"../build/output/log\"));\nconst _getTypeScriptIntent = require(\"./typescript/getTypeScriptIntent\");\nconst _writeAppTypeDeclarations = require(\"./typescript/writeAppTypeDeclarations\");\nconst _writeConfigurationDefaults = require(\"./typescript/writeConfigurationDefaults\");\nconst _installdependencies = require(\"./install-dependencies\");\nconst _ciinfo = require(\"../telemetry/ci-info\");\nconst _missingDependencyError = require(\"./typescript/missingDependencyError\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nconst requiredPackages = [{\n  file: \"typescript/lib/typescript.js\",\n  pkg: \"typescript\",\n  exportsRestrict: true\n}, {\n  file: \"@types/react/index.d.ts\",\n  pkg: \"@types/react\",\n  exportsRestrict: true\n}, {\n  file: \"@types/node/index.d.ts\",\n  pkg: \"@types/node\",\n  exportsRestrict: true\n}];\nasync function verifyTypeScriptSetup({\n  dir,\n  distDir,\n  cacheDir,\n  intentDirs,\n  tsconfigPath,\n  typeCheckPreflight,\n  disableStaticImages,\n  hasAppDir,\n  hasPagesDir\n}) {\n  const resolvedTsConfigPath = _path.default.join(dir, tsconfigPath);\n  try {\n    var _deps_missing;\n    // Check if the project uses TypeScript:\n    const intent = await (0, _getTypeScriptIntent.getTypeScriptIntent)(dir, intentDirs, tsconfigPath);\n    if (!intent) {\n      return {\n        version: null\n      };\n    }\n    // Ensure TypeScript and necessary `@types/*` are installed:\n    let deps = await (0, _hasnecessarydependencies.hasNecessaryDependencies)(dir, requiredPackages);\n    if (((_deps_missing = deps.missing) == null ? void 0 : _deps_missing.length) > 0) {\n      if (_ciinfo.isCI) {\n        // we don't attempt auto install in CI to avoid side-effects\n        // and instead log the error for installing needed packages\n        await (0, _missingDependencyError.missingDepsError)(dir, deps.missing);\n      }\n      console.log(_chalk.default.bold.yellow(`It looks like you're trying to use TypeScript but do not have the required package(s) installed.`) + \"\\n\" + \"Installing dependencies\" + \"\\n\\n\" + _chalk.default.bold(\"If you are not trying to use TypeScript, please remove the \" + _chalk.default.cyan(\"tsconfig.json\") + \" file from your package root (and any TypeScript files in your pages directory).\") + \"\\n\");\n      await (0, _installdependencies.installDependencies)(dir, deps.missing, true).catch(err => {\n        if (err && typeof err === \"object\" && \"command\" in err) {\n          console.error(`Failed to install required TypeScript dependencies, please install them manually to continue:\\n` + err.command + \"\\n\");\n        }\n        throw err;\n      });\n      deps = await (0, _hasnecessarydependencies.hasNecessaryDependencies)(dir, requiredPackages);\n    }\n    // Load TypeScript after we're sure it exists:\n    const tsPath = deps.resolved.get(\"typescript\");\n    const ts = await Promise.resolve(require(tsPath));\n    if (_semver.default.lt(ts.version, \"4.5.2\")) {\n      _log.warn(`Minimum recommended TypeScript version is v4.5.2, older versions can potentially be incompatible with Next.js. Detected: ${ts.version}`);\n    }\n    // Reconfigure (or create) the user's `tsconfig.json` for them:\n    await (0, _writeConfigurationDefaults.writeConfigurationDefaults)(ts, resolvedTsConfigPath, intent.firstTimeSetup, hasAppDir, distDir, hasPagesDir);\n    // Write out the necessary `next-env.d.ts` file to correctly register\n    // Next.js' types:\n    await (0, _writeAppTypeDeclarations.writeAppTypeDeclarations)({\n      baseDir: dir,\n      imageImportsEnabled: !disableStaticImages,\n      hasPagesDir,\n      isAppDirEnabled: hasAppDir\n    });\n    let result;\n    if (typeCheckPreflight) {\n      const {\n        runTypeCheck\n      } = require(\"./typescript/runTypeCheck\");\n      // Verify the project passes type-checking before we go to webpack phase:\n      result = await runTypeCheck(ts, dir, distDir, resolvedTsConfigPath, cacheDir, hasAppDir);\n    }\n    return {\n      result,\n      version: ts.version\n    };\n  } catch (err) {\n    // These are special errors that should not show a stack trace:\n    if (err instanceof _compileerror.CompileError) {\n      console.error(_chalk.default.red(\"Failed to compile.\\n\"));\n      console.error(err.message);\n      process.exit(1);\n    } else if (err instanceof _fatalerror.FatalError) {\n      console.error(err.message);\n      process.exit(1);\n    }\n    throw err;\n  }\n}","map":{"version":3,"names":["verifyTypeScriptSetup","requiredPackages","file","pkg","exportsRestrict","dir","distDir","cacheDir","intentDirs","tsconfigPath","typeCheckPreflight","disableStaticImages","hasAppDir","hasPagesDir","resolvedTsConfigPath","_path","default","join","_deps_missing","intent","_getTypeScriptIntent","getTypeScriptIntent","version","deps","_hasnecessarydependencies","hasNecessaryDependencies","missing","length","_ciinfo","isCI","_missingDependencyError","missingDepsError","console","log","_chalk","bold","yellow","cyan","_installdependencies","installDependencies","catch","err","error","command","tsPath","resolved","get","ts","Promise","resolve","require","_semver","lt","_log","warn","_writeConfigurationDefaults","writeConfigurationDefaults","firstTimeSetup","_writeAppTypeDeclarations","writeAppTypeDeclarations","baseDir","imageImportsEnabled","isAppDirEnabled","result","runTypeCheck","_compileerror","CompileError","red","message","process","exit","_fatalerror","FatalError"],"sources":["../../src/lib/verifyTypeScriptSetup.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}