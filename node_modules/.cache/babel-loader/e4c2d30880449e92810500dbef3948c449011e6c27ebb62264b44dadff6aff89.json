{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return createSpinner;\n  }\n});\nconst _ora = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/ora\"));\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"./output/log\"));\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nconst dotsSpinner = {\n  frames: [\".\", \"..\", \"...\"],\n  interval: 200\n};\nfunction createSpinner(text, options = {}, logFn = console.log) {\n  let spinner;\n  const prefixText = ` ${_log.prefixes.info} ${text} `;\n  // Add \\r at beginning to reset the current line of loading status text\n  const suffixText = `\\r ${_log.prefixes.event} ${text} `;\n  if (process.stdout.isTTY) {\n    spinner = (0, _ora.default)({\n      text: undefined,\n      prefixText,\n      spinner: dotsSpinner,\n      stream: process.stdout,\n      ...options\n    }).start();\n    // Add capturing of console.log/warn/error to allow pausing\n    // the spinner before logging and then restarting spinner after\n    const origLog = console.log;\n    const origWarn = console.warn;\n    const origError = console.error;\n    const origStop = spinner.stop.bind(spinner);\n    const origStopAndPersist = spinner.stopAndPersist.bind(spinner);\n    const logHandle = (method, args) => {\n      origStop();\n      method(...args);\n      spinner.start();\n    };\n    console.log = (...args) => logHandle(origLog, args);\n    console.warn = (...args) => logHandle(origWarn, args);\n    console.error = (...args) => logHandle(origError, args);\n    const resetLog = () => {\n      console.log = origLog;\n      console.warn = origWarn;\n      console.error = origError;\n    };\n    spinner.stop = () => {\n      origStop();\n      resetLog();\n      return spinner;\n    };\n    spinner.stopAndPersist = () => {\n      if (suffixText) {\n        if (spinner) {\n          spinner.text = suffixText;\n        } else {\n          logFn(suffixText);\n        }\n      }\n      origStopAndPersist();\n      resetLog();\n      return spinner;\n    };\n  } else if (prefixText || text) {\n    logFn(prefixText ? prefixText + \"...\" : text);\n  }\n  return spinner;\n}","map":{"version":3,"names":["createSpinner","dotsSpinner","frames","interval","text","options","logFn","console","log","spinner","prefixText","_log","prefixes","info","suffixText","event","process","stdout","isTTY","_ora","default","undefined","stream","start","origLog","origWarn","warn","origError","error","origStop","stop","bind","origStopAndPersist","stopAndPersist","logHandle","method","args","resetLog"],"sources":["../../src/build/spinner.ts"],"sourcesContent":[null],"mappings":";;;;;+BAQA;;;WAAwBA,aAAA;;;2DARR;4DACK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAErB,MAAMC,WAAA,GAAc;EAClBC,MAAA,EAAQ,CAAC,KAAK,MAAM,MAAM;EAC1BC,QAAA,EAAU;AACZ;AAEe,SAASH,cACtBI,IAAY,EACZC,OAAA,GAAuB,CAAC,CAAC,EACzBC,KAAA,GAAkCC,OAAA,CAAQC,GAAG;EAE7C,IAAIC,OAAA;EAEJ,MAAMC,UAAA,GAAc,IAAGC,IAAA,CAAIC,QAAQ,CAACC,IAAK,IAAGT,IAAK,GAAE;EACnD;EACA,MAAMU,UAAA,GAAc,MAAKH,IAAA,CAAIC,QAAQ,CAACG,KAAM,IAAGX,IAAK,GAAE;EAEtD,IAAIY,OAAA,CAAQC,MAAM,CAACC,KAAK,EAAE;IACxBT,OAAA,GAAU,IAAAU,IAAA,CAAAC,OAAG,EAAC;MACZhB,IAAA,EAAMiB,SAAA;MACNX,UAAA;MACAD,OAAA,EAASR,WAAA;MACTqB,MAAA,EAAQN,OAAA,CAAQC,MAAM;MACtB,GAAGZ;IACL,GAAGkB,KAAK;IAER;IACA;IACA,MAAMC,OAAA,GAAUjB,OAAA,CAAQC,GAAG;IAC3B,MAAMiB,QAAA,GAAWlB,OAAA,CAAQmB,IAAI;IAC7B,MAAMC,SAAA,GAAYpB,OAAA,CAAQqB,KAAK;IAC/B,MAAMC,QAAA,GAAWpB,OAAA,CAAQqB,IAAI,CAACC,IAAI,CAACtB,OAAA;IACnC,MAAMuB,kBAAA,GAAqBvB,OAAA,CAAQwB,cAAc,CAACF,IAAI,CAACtB,OAAA;IAEvD,MAAMyB,SAAA,GAAYA,CAACC,MAAA,EAAaC,IAAA;MAC9BP,QAAA;MACAM,MAAA,IAAUC,IAAA;MACV3B,OAAA,CAASc,KAAK;IAChB;IAEAhB,OAAA,CAAQC,GAAG,GAAG,CAAC,GAAG4B,IAAA,KAAcF,SAAA,CAAUV,OAAA,EAASY,IAAA;IACnD7B,OAAA,CAAQmB,IAAI,GAAG,CAAC,GAAGU,IAAA,KAAcF,SAAA,CAAUT,QAAA,EAAUW,IAAA;IACrD7B,OAAA,CAAQqB,KAAK,GAAG,CAAC,GAAGQ,IAAA,KAAcF,SAAA,CAAUP,SAAA,EAAWS,IAAA;IAEvD,MAAMC,QAAA,GAAWA,CAAA;MACf9B,OAAA,CAAQC,GAAG,GAAGgB,OAAA;MACdjB,OAAA,CAAQmB,IAAI,GAAGD,QAAA;MACflB,OAAA,CAAQqB,KAAK,GAAGD,SAAA;IAClB;IACAlB,OAAA,CAAQqB,IAAI,GAAG;MACbD,QAAA;MACAQ,QAAA;MACA,OAAO5B,OAAA;IACT;IACAA,OAAA,CAAQwB,cAAc,GAAG;MACvB,IAAInB,UAAA,EAAY;QACd,IAAIL,OAAA,EAAS;UACXA,OAAA,CAAQL,IAAI,GAAGU,UAAA;QACjB,OAAO;UACLR,KAAA,CAAMQ,UAAA;QACR;MACF;MACAkB,kBAAA;MACAK,QAAA;MACA,OAAO5B,OAAA;IACT;EACF,OAAO,IAAIC,UAAA,IAAcN,IAAA,EAAM;IAC7BE,KAAA,CAAMI,UAAA,GAAaA,UAAA,GAAa,QAAQN,IAAA;EAC1C;EAEA,OAAOK,OAAA;AACT"},"metadata":{},"sourceType":"script","externalDependencies":[]}