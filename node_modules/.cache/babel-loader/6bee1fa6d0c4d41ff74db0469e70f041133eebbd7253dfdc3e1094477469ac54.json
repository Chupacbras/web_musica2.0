{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  sortByPageExts: null,\n  getStaticInfoIncludingLayouts: null,\n  getPageFromPath: null,\n  getPageFilePath: null,\n  createPagesMapping: null,\n  getEdgeServerEntry: null,\n  getAppEntry: null,\n  getClientEntry: null,\n  runDependingOnPageType: null,\n  createEntrypoints: null,\n  finalizeEntrypoint: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  sortByPageExts: function () {\n    return sortByPageExts;\n  },\n  getStaticInfoIncludingLayouts: function () {\n    return getStaticInfoIncludingLayouts;\n  },\n  getPageFromPath: function () {\n    return getPageFromPath;\n  },\n  getPageFilePath: function () {\n    return getPageFilePath;\n  },\n  createPagesMapping: function () {\n    return createPagesMapping;\n  },\n  getEdgeServerEntry: function () {\n    return getEdgeServerEntry;\n  },\n  getAppEntry: function () {\n    return getAppEntry;\n  },\n  getClientEntry: function () {\n    return getClientEntry;\n  },\n  runDependingOnPageType: function () {\n    return runDependingOnPageType;\n  },\n  createEntrypoints: function () {\n    return createEntrypoints;\n  },\n  finalizeEntrypoint: function () {\n    return finalizeEntrypoint;\n  }\n});\nconst _chalk = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/chalk\"));\nconst _path = require(\"path\");\nconst _querystring = require(\"querystring\");\nconst _constants = require(\"../lib/constants\");\nconst _isapiroute = require(\"../lib/is-api-route\");\nconst _isedgeruntime = require(\"../lib/is-edge-runtime\");\nconst _constants1 = require(\"../shared/lib/constants\");\nconst _log = require(\"./output/log\");\nconst _utils = require(\"./utils\");\nconst _getpagestaticinfo = require(\"./analysis/get-page-static-info\");\nconst _normalizepathsep = require(\"../shared/lib/page-path/normalize-path-sep\");\nconst _normalizepagepath = require(\"../shared/lib/page-path/normalize-page-path\");\nconst _apppaths = require(\"../shared/lib/router/utils/app-paths\");\nconst _nextmiddlewareloader = require(\"./webpack/loaders/next-middleware-loader\");\nconst _isapprouteroute = require(\"../lib/is-app-route-route\");\nconst _getmetadataroute = require(\"../lib/metadata/get-metadata-route\");\nconst _fileexists = require(\"../lib/file-exists\");\nconst _nextrouteloader = require(\"./webpack/loaders/next-route-loader\");\nconst _isinternalcomponent = require(\"../lib/is-internal-component\");\nconst _ismetadataroute = require(\"../lib/metadata/is-metadata-route\");\nconst _routekind = require(\"../server/future/route-kind\");\nconst _utils1 = require(\"./webpack/loaders/utils\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction sortByPageExts(pageExtensions) {\n  return (a, b) => {\n    // prioritize entries according to pageExtensions order\n    // for consistency as fs order can differ across systems\n    // NOTE: this is reversed so preferred comes last and\n    // overrides prior\n    const aExt = (0, _path.extname)(a);\n    const bExt = (0, _path.extname)(b);\n    const aNoExt = a.substring(0, a.length - aExt.length);\n    const bNoExt = a.substring(0, b.length - bExt.length);\n    if (aNoExt !== bNoExt) return 0;\n    // find extension index (skip '.' as pageExtensions doesn't have it)\n    const aExtIndex = pageExtensions.indexOf(aExt.substring(1));\n    const bExtIndex = pageExtensions.indexOf(bExt.substring(1));\n    return bExtIndex - aExtIndex;\n  };\n}\nasync function getStaticInfoIncludingLayouts({\n  isInsideAppDir,\n  pageExtensions,\n  pageFilePath,\n  appDir,\n  config,\n  isDev,\n  page\n}) {\n  const pageStaticInfo = await (0, _getpagestaticinfo.getPageStaticInfo)({\n    nextConfig: config,\n    pageFilePath,\n    isDev,\n    page,\n    pageType: isInsideAppDir ? \"app\" : \"pages\"\n  });\n  const staticInfo = isInsideAppDir ? {\n    // TODO-APP: Remove the rsc key altogether. It's no longer required.\n    rsc: \"server\"\n  } : pageStaticInfo;\n  if (isInsideAppDir && appDir) {\n    const layoutFiles = [];\n    const potentialLayoutFiles = pageExtensions.map(ext => \"layout.\" + ext);\n    let dir = (0, _path.dirname)(pageFilePath);\n    // Uses startsWith to not include directories further up.\n    while (dir.startsWith(appDir)) {\n      for (const potentialLayoutFile of potentialLayoutFiles) {\n        const layoutFile = (0, _path.join)(dir, potentialLayoutFile);\n        if (!(await (0, _fileexists.fileExists)(layoutFile))) {\n          continue;\n        }\n        layoutFiles.unshift(layoutFile);\n      }\n      // Walk up the directory tree\n      dir = (0, _path.join)(dir, \"..\");\n    }\n    for (const layoutFile of layoutFiles) {\n      const layoutStaticInfo = await (0, _getpagestaticinfo.getPageStaticInfo)({\n        nextConfig: config,\n        pageFilePath: layoutFile,\n        isDev,\n        page,\n        pageType: isInsideAppDir ? \"app\" : \"pages\"\n      });\n      // Only runtime is relevant here.\n      if (layoutStaticInfo.runtime) {\n        staticInfo.runtime = layoutStaticInfo.runtime;\n      }\n      if (layoutStaticInfo.preferredRegion) {\n        staticInfo.preferredRegion = layoutStaticInfo.preferredRegion;\n      }\n    }\n    if (pageStaticInfo.runtime) {\n      staticInfo.runtime = pageStaticInfo.runtime;\n    }\n    if (pageStaticInfo.preferredRegion) {\n      staticInfo.preferredRegion = pageStaticInfo.preferredRegion;\n    }\n    // if it's static metadata route, don't inherit runtime from layout\n    const relativePath = pageFilePath.replace(appDir, \"\");\n    if ((0, _ismetadataroute.isStaticMetadataRouteFile)(relativePath)) {\n      delete staticInfo.runtime;\n      delete staticInfo.preferredRegion;\n    }\n  }\n  return staticInfo;\n}\nfunction getPageFromPath(pagePath, pageExtensions) {\n  let page = (0, _normalizepathsep.normalizePathSep)(pagePath.replace(new RegExp(`\\\\.+(${pageExtensions.join(\"|\")})$`), \"\"));\n  page = page.replace(/\\/index$/, \"\");\n  return page === \"\" ? \"/\" : page;\n}\nfunction getPageFilePath({\n  absolutePagePath,\n  pagesDir,\n  appDir,\n  rootDir\n}) {\n  if (absolutePagePath.startsWith(_constants.PAGES_DIR_ALIAS) && pagesDir) {\n    return absolutePagePath.replace(_constants.PAGES_DIR_ALIAS, pagesDir);\n  }\n  if (absolutePagePath.startsWith(_constants.APP_DIR_ALIAS) && appDir) {\n    return absolutePagePath.replace(_constants.APP_DIR_ALIAS, appDir);\n  }\n  if (absolutePagePath.startsWith(_constants.ROOT_DIR_ALIAS)) {\n    return absolutePagePath.replace(_constants.ROOT_DIR_ALIAS, rootDir);\n  }\n  return require.resolve(absolutePagePath);\n}\nfunction createPagesMapping({\n  isDev,\n  pageExtensions,\n  pagePaths,\n  pagesType,\n  pagesDir\n}) {\n  const isAppRoute = pagesType === \"app\";\n  const previousPages = {};\n  const pages = pagePaths.reduce((result, pagePath) => {\n    // Do not process .d.ts files inside the `pages` folder\n    if (pagePath.endsWith(\".d.ts\") && pageExtensions.includes(\"ts\")) {\n      return result;\n    }\n    let pageKey = getPageFromPath(pagePath, pageExtensions);\n    if (isAppRoute) {\n      pageKey = pageKey.replace(/%5F/g, \"_\");\n      pageKey = pageKey.replace(/^\\/not-found$/g, \"/_not-found\");\n    }\n    if (pageKey in result) {\n      (0, _log.warn)(`Duplicate page detected. ${_chalk.default.cyan((0, _path.join)(\"pages\", previousPages[pageKey]))} and ${_chalk.default.cyan((0, _path.join)(\"pages\", pagePath))} both resolve to ${_chalk.default.cyan(pageKey)}.`);\n    } else {\n      previousPages[pageKey] = pagePath;\n    }\n    const normalizedPath = (0, _normalizepathsep.normalizePathSep)((0, _path.join)(pagesType === \"pages\" ? _constants.PAGES_DIR_ALIAS : pagesType === \"app\" ? _constants.APP_DIR_ALIAS : _constants.ROOT_DIR_ALIAS, pagePath));\n    const route = pagesType === \"app\" ? (0, _getmetadataroute.normalizeMetadataRoute)(pageKey) : pageKey;\n    result[route] = normalizedPath;\n    return result;\n  }, {});\n  if (pagesType === \"app\") {\n    const hasAppPages = Object.keys(pages).some(page => page.endsWith(\"/page\"));\n    return {\n      // If there's any app pages existed, add a default not-found page.\n      // If there's any custom not-found page existed, it will override the default one.\n      ...(hasAppPages && {\n        \"/_not-found\": \"next/dist/client/components/not-found-error\"\n      }),\n      ...pages\n    };\n  } else if (pagesType === \"root\") {\n    return pages;\n  }\n  if (isDev) {\n    delete pages[\"/_app\"];\n    delete pages[\"/_error\"];\n    delete pages[\"/_document\"];\n  }\n  // In development we always alias these to allow Webpack to fallback to\n  // the correct source file so that HMR can work properly when a file is\n  // added or removed.\n  const root = isDev && pagesDir ? _constants.PAGES_DIR_ALIAS : \"next/dist/pages\";\n  return {\n    \"/_app\": `${root}/_app`,\n    \"/_error\": `${root}/_error`,\n    \"/_document\": `${root}/_document`,\n    ...pages\n  };\n}\nfunction getEdgeServerEntry(opts) {\n  var _opts_config_experimental_sri;\n  if (opts.pagesType === \"app\" && (0, _isapprouteroute.isAppRouteRoute)(opts.page) && opts.appDirLoader) {\n    const loaderParams = {\n      absolutePagePath: opts.absolutePagePath,\n      page: opts.page,\n      appDirLoader: Buffer.from(opts.appDirLoader || \"\").toString(\"base64\"),\n      nextConfigOutput: opts.config.output,\n      preferredRegion: opts.preferredRegion,\n      middlewareConfig: Buffer.from(JSON.stringify(opts.middlewareConfig || {})).toString(\"base64\")\n    };\n    return {\n      import: `next-edge-app-route-loader?${(0, _querystring.stringify)(loaderParams)}!`,\n      layer: _constants.WEBPACK_LAYERS.reactServerComponents\n    };\n  }\n  if ((0, _utils.isMiddlewareFile)(opts.page)) {\n    var _opts_middleware;\n    const loaderParams = {\n      absolutePagePath: opts.absolutePagePath,\n      page: opts.page,\n      rootDir: opts.rootDir,\n      matchers: ((_opts_middleware = opts.middleware) == null ? void 0 : _opts_middleware.matchers) ? (0, _nextmiddlewareloader.encodeMatchers)(opts.middleware.matchers) : \"\",\n      preferredRegion: opts.preferredRegion,\n      middlewareConfig: Buffer.from(JSON.stringify(opts.middlewareConfig || {})).toString(\"base64\")\n    };\n    return `next-middleware-loader?${(0, _querystring.stringify)(loaderParams)}!`;\n  }\n  if ((0, _isapiroute.isAPIRoute)(opts.page)) {\n    const loaderParams = {\n      absolutePagePath: opts.absolutePagePath,\n      page: opts.page,\n      rootDir: opts.rootDir,\n      preferredRegion: opts.preferredRegion,\n      middlewareConfig: Buffer.from(JSON.stringify(opts.middlewareConfig || {})).toString(\"base64\")\n    };\n    return `next-edge-function-loader?${(0, _querystring.stringify)(loaderParams)}!`;\n  }\n  if ((0, _utils.isInstrumentationHookFile)(opts.page)) {\n    return {\n      import: opts.absolutePagePath,\n      filename: `edge-${_constants.INSTRUMENTATION_HOOK_FILENAME}.js`\n    };\n  }\n  const loaderParams = {\n    absolute500Path: opts.pages[\"/500\"] || \"\",\n    absoluteAppPath: opts.pages[\"/_app\"],\n    absoluteDocumentPath: opts.pages[\"/_document\"],\n    absoluteErrorPath: opts.pages[\"/_error\"],\n    absolutePagePath: opts.absolutePagePath,\n    buildId: opts.buildId,\n    dev: opts.isDev,\n    isServerComponent: opts.isServerComponent,\n    page: opts.page,\n    stringifiedConfig: Buffer.from(JSON.stringify(opts.config)).toString(\"base64\"),\n    pagesType: opts.pagesType,\n    appDirLoader: Buffer.from(opts.appDirLoader || \"\").toString(\"base64\"),\n    sriEnabled: !opts.isDev && !!((_opts_config_experimental_sri = opts.config.experimental.sri) == null ? void 0 : _opts_config_experimental_sri.algorithm),\n    incrementalCacheHandlerPath: opts.config.experimental.incrementalCacheHandlerPath,\n    preferredRegion: opts.preferredRegion,\n    middlewareConfig: Buffer.from(JSON.stringify(opts.middlewareConfig || {})).toString(\"base64\"),\n    serverActionsBodySizeLimit: opts.config.experimental.serverActionsBodySizeLimit\n  };\n  return {\n    import: `next-edge-ssr-loader?${(0, _querystring.stringify)(loaderParams)}!`,\n    // The Edge bundle includes the server in its entrypoint, so it has to\n    // be in the SSR layer — we later convert the page request to the RSC layer\n    // via a webpack rule.\n    layer: opts.appDirLoader ? _constants.WEBPACK_LAYERS.serverSideRendering : undefined\n  };\n}\nfunction getAppEntry(opts) {\n  return {\n    import: `next-app-loader?${(0, _querystring.stringify)(opts)}!`,\n    layer: _constants.WEBPACK_LAYERS.reactServerComponents\n  };\n}\nfunction getClientEntry(opts) {\n  const loaderOptions = {\n    absolutePagePath: opts.absolutePagePath,\n    page: opts.page\n  };\n  const pageLoader = `next-client-pages-loader?${(0, _querystring.stringify)(loaderOptions)}!`;\n  // Make sure next/router is a dependency of _app or else chunk splitting\n  // might cause the router to not be able to load causing hydration\n  // to fail\n  return opts.page === \"/_app\" ? [pageLoader, require.resolve(\"../client/router\")] : pageLoader;\n}\nfunction runDependingOnPageType(params) {\n  if (params.pageType === \"root\" && (0, _utils.isInstrumentationHookFile)(params.page)) {\n    params.onServer();\n    params.onEdgeServer();\n    return;\n  }\n  if ((0, _utils.isMiddlewareFile)(params.page)) {\n    params.onEdgeServer();\n    return;\n  }\n  if ((0, _isapiroute.isAPIRoute)(params.page)) {\n    if ((0, _isedgeruntime.isEdgeRuntime)(params.pageRuntime)) {\n      params.onEdgeServer();\n      return;\n    }\n    params.onServer();\n    return;\n  }\n  if (params.page === \"/_document\") {\n    params.onServer();\n    return;\n  }\n  if (params.page === \"/_app\" || params.page === \"/_error\" || params.page === \"/404\" || params.page === \"/500\") {\n    params.onClient();\n    params.onServer();\n    return;\n  }\n  if ((0, _isedgeruntime.isEdgeRuntime)(params.pageRuntime)) {\n    params.onClient();\n    params.onEdgeServer();\n    return;\n  }\n  params.onClient();\n  params.onServer();\n  return;\n}\nasync function createEntrypoints(params) {\n  const {\n    config,\n    pages,\n    pagesDir,\n    isDev,\n    rootDir,\n    rootPaths,\n    appDir,\n    appPaths,\n    pageExtensions\n  } = params;\n  const edgeServer = {};\n  const server = {};\n  const client = {};\n  let middlewareMatchers = undefined;\n  let appPathsPerRoute = {};\n  if (appDir && appPaths) {\n    for (const pathname in appPaths) {\n      const normalizedPath = (0, _apppaths.normalizeAppPath)(pathname);\n      const actualPath = appPaths[pathname];\n      if (!appPathsPerRoute[normalizedPath]) {\n        appPathsPerRoute[normalizedPath] = [];\n      }\n      appPathsPerRoute[normalizedPath].push(\n      // TODO-APP: refactor to pass the page path from createPagesMapping instead.\n      getPageFromPath(actualPath, pageExtensions).replace(_constants.APP_DIR_ALIAS, \"\"));\n    }\n    // Make sure to sort parallel routes to make the result deterministic.\n    appPathsPerRoute = Object.fromEntries(Object.entries(appPathsPerRoute).map(([k, v]) => [k, v.sort()]));\n  }\n  const getEntryHandler = (mappings, pagesType) => async page => {\n    const bundleFile = (0, _normalizepagepath.normalizePagePath)(page);\n    const clientBundlePath = _path.posix.join(pagesType, bundleFile);\n    const serverBundlePath = pagesType === \"pages\" ? _path.posix.join(\"pages\", bundleFile) : pagesType === \"app\" ? _path.posix.join(\"app\", bundleFile) : bundleFile.slice(1);\n    const absolutePagePath = mappings[page];\n    // Handle paths that have aliases\n    const pageFilePath = getPageFilePath({\n      absolutePagePath,\n      pagesDir,\n      appDir,\n      rootDir\n    });\n    const isInsideAppDir = !!appDir && (absolutePagePath.startsWith(_constants.APP_DIR_ALIAS) || absolutePagePath.startsWith(appDir));\n    const staticInfo = await getStaticInfoIncludingLayouts({\n      isInsideAppDir,\n      pageExtensions,\n      pageFilePath,\n      appDir,\n      config,\n      isDev,\n      page\n    });\n    const isServerComponent = isInsideAppDir && staticInfo.rsc !== _constants1.RSC_MODULE_TYPES.client;\n    if ((0, _utils.isMiddlewareFile)(page)) {\n      var _staticInfo_middleware;\n      middlewareMatchers = ((_staticInfo_middleware = staticInfo.middleware) == null ? void 0 : _staticInfo_middleware.matchers) ?? [{\n        regexp: \".*\",\n        originalSource: \"/:path*\"\n      }];\n    }\n    runDependingOnPageType({\n      page,\n      pageRuntime: staticInfo.runtime,\n      pageType: pagesType,\n      onClient: () => {\n        if (isServerComponent || isInsideAppDir) {\n          // We skip the initial entries for server component pages and let the\n          // server compiler inject them instead.\n        } else {\n          client[clientBundlePath] = getClientEntry({\n            absolutePagePath,\n            page\n          });\n        }\n      },\n      onServer: () => {\n        if (pagesType === \"app\" && appDir) {\n          const matchedAppPaths = appPathsPerRoute[(0, _apppaths.normalizeAppPath)(page)];\n          server[serverBundlePath] = getAppEntry({\n            page,\n            name: serverBundlePath,\n            pagePath: absolutePagePath,\n            appDir,\n            appPaths: matchedAppPaths,\n            pageExtensions,\n            basePath: config.basePath,\n            assetPrefix: config.assetPrefix,\n            nextConfigOutput: config.output,\n            preferredRegion: staticInfo.preferredRegion,\n            middlewareConfig: (0, _utils1.encodeToBase64)(staticInfo.middleware || {})\n          });\n        } else if ((0, _utils.isInstrumentationHookFile)(page) && pagesType === \"root\") {\n          server[serverBundlePath.replace(\"src/\", \"\")] = {\n            import: absolutePagePath,\n            // the '../' is needed to make sure the file is not chunked\n            filename: `../${_constants.INSTRUMENTATION_HOOK_FILENAME}.js`\n          };\n        } else if ((0, _isapiroute.isAPIRoute)(page)) {\n          server[serverBundlePath] = [(0, _nextrouteloader.getRouteLoaderEntry)({\n            kind: _routekind.RouteKind.PAGES_API,\n            page,\n            absolutePagePath,\n            preferredRegion: staticInfo.preferredRegion,\n            middlewareConfig: staticInfo.middleware || {}\n          })];\n        } else if (!(0, _utils.isMiddlewareFile)(page) && !(0, _isinternalcomponent.isInternalComponent)(absolutePagePath) && !(0, _isinternalcomponent.isNonRoutePagesPage)(page)) {\n          server[serverBundlePath] = [(0, _nextrouteloader.getRouteLoaderEntry)({\n            kind: _routekind.RouteKind.PAGES,\n            page,\n            pages,\n            absolutePagePath,\n            preferredRegion: staticInfo.preferredRegion,\n            middlewareConfig: staticInfo.middleware ?? {}\n          })];\n        } else {\n          server[serverBundlePath] = [absolutePagePath];\n        }\n      },\n      onEdgeServer: () => {\n        let appDirLoader = \"\";\n        if (pagesType === \"app\") {\n          const matchedAppPaths = appPathsPerRoute[(0, _apppaths.normalizeAppPath)(page)];\n          appDirLoader = getAppEntry({\n            name: serverBundlePath,\n            page,\n            pagePath: absolutePagePath,\n            appDir: appDir,\n            appPaths: matchedAppPaths,\n            pageExtensions,\n            basePath: config.basePath,\n            assetPrefix: config.assetPrefix,\n            nextConfigOutput: config.output,\n            // This isn't used with edge as it needs to be set on the entry module, which will be the `edgeServerEntry` instead.\n            // Still passing it here for consistency.\n            preferredRegion: staticInfo.preferredRegion,\n            middlewareConfig: Buffer.from(JSON.stringify(staticInfo.middleware || {})).toString(\"base64\")\n          }).import;\n        }\n        const normalizedServerBundlePath = (0, _utils.isInstrumentationHookFile)(page) && pagesType === \"root\" ? serverBundlePath.replace(\"src/\", \"\") : serverBundlePath;\n        edgeServer[normalizedServerBundlePath] = getEdgeServerEntry({\n          ...params,\n          rootDir,\n          absolutePagePath: absolutePagePath,\n          bundlePath: clientBundlePath,\n          isDev: false,\n          isServerComponent,\n          page,\n          middleware: staticInfo == null ? void 0 : staticInfo.middleware,\n          pagesType,\n          appDirLoader,\n          preferredRegion: staticInfo.preferredRegion,\n          middlewareConfig: staticInfo.middleware\n        });\n      }\n    });\n  };\n  const promises = [];\n  if (appPaths) {\n    const entryHandler = getEntryHandler(appPaths, \"app\");\n    promises.push(Promise.all(Object.keys(appPaths).map(entryHandler)));\n  }\n  if (rootPaths) {\n    promises.push(Promise.all(Object.keys(rootPaths).map(getEntryHandler(rootPaths, \"root\"))));\n  }\n  promises.push(Promise.all(Object.keys(pages).map(getEntryHandler(pages, \"pages\"))));\n  await Promise.all(promises);\n  return {\n    client,\n    server,\n    edgeServer,\n    middlewareMatchers\n  };\n}\nfunction finalizeEntrypoint({\n  name,\n  compilerType,\n  value,\n  isServerComponent,\n  hasAppDir\n}) {\n  const entry = typeof value !== \"object\" || Array.isArray(value) ? {\n    import: value\n  } : value;\n  const isApi = name.startsWith(\"pages/api/\");\n  switch (compilerType) {\n    case _constants1.COMPILER_NAMES.server:\n      {\n        return {\n          publicPath: isApi ? \"\" : undefined,\n          runtime: isApi ? \"webpack-api-runtime\" : \"webpack-runtime\",\n          layer: isApi ? _constants.WEBPACK_LAYERS.api : isServerComponent ? _constants.WEBPACK_LAYERS.reactServerComponents : undefined,\n          ...entry\n        };\n      }\n    case _constants1.COMPILER_NAMES.edgeServer:\n      {\n        return {\n          layer: (0, _utils.isMiddlewareFilename)(name) || isApi ? _constants.WEBPACK_LAYERS.middleware : undefined,\n          library: {\n            name: [\"_ENTRIES\", `middleware_[name]`],\n            type: \"assign\"\n          },\n          runtime: _constants1.EDGE_RUNTIME_WEBPACK,\n          asyncChunks: false,\n          ...entry\n        };\n      }\n    case _constants1.COMPILER_NAMES.client:\n      {\n        const isAppLayer = hasAppDir && (name === _constants1.CLIENT_STATIC_FILES_RUNTIME_MAIN_APP || name === _constants1.APP_CLIENT_INTERNALS || name.startsWith(\"app/\"));\n        if (\n        // Client special cases\n        name !== _constants1.CLIENT_STATIC_FILES_RUNTIME_POLYFILLS && name !== _constants1.CLIENT_STATIC_FILES_RUNTIME_MAIN && name !== _constants1.CLIENT_STATIC_FILES_RUNTIME_MAIN_APP && name !== _constants1.CLIENT_STATIC_FILES_RUNTIME_AMP && name !== _constants1.CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH) {\n          if (isAppLayer) {\n            return {\n              dependOn: _constants1.CLIENT_STATIC_FILES_RUNTIME_MAIN_APP,\n              layer: _constants.WEBPACK_LAYERS.appPagesBrowser,\n              ...entry\n            };\n          }\n          return {\n            dependOn: name.startsWith(\"pages/\") && name !== \"pages/_app\" ? \"pages/_app\" : _constants1.CLIENT_STATIC_FILES_RUNTIME_MAIN,\n            ...entry\n          };\n        }\n        if (isAppLayer) {\n          return {\n            layer: _constants.WEBPACK_LAYERS.appPagesBrowser,\n            ...entry\n          };\n        }\n        return entry;\n      }\n    default:\n      {\n        // Should never happen.\n        throw new Error(\"Invalid compiler type\");\n      }\n  }\n}","map":{"version":3,"names":["sortByPageExts","getStaticInfoIncludingLayouts","getPageFromPath","getPageFilePath","createPagesMapping","getEdgeServerEntry","getAppEntry","getClientEntry","runDependingOnPageType","createEntrypoints","finalizeEntrypoint","pageExtensions","a","b","aExt","_path","extname","bExt","aNoExt","substring","length","bNoExt","aExtIndex","indexOf","bExtIndex","isInsideAppDir","pageFilePath","appDir","config","isDev","page","pageStaticInfo","_getpagestaticinfo","getPageStaticInfo","nextConfig","pageType","staticInfo","rsc","layoutFiles","potentialLayoutFiles","map","ext","dir","dirname","startsWith","potentialLayoutFile","layoutFile","join","_fileexists","fileExists","unshift","layoutStaticInfo","runtime","preferredRegion","relativePath","replace","_ismetadataroute","isStaticMetadataRouteFile","pagePath","_normalizepathsep","normalizePathSep","RegExp","absolutePagePath","pagesDir","rootDir","_constants","PAGES_DIR_ALIAS","APP_DIR_ALIAS","ROOT_DIR_ALIAS","require","resolve","pagePaths","pagesType","isAppRoute","previousPages","pages","reduce","result","endsWith","includes","pageKey","_log","warn","_chalk","default","cyan","normalizedPath","route","_getmetadataroute","normalizeMetadataRoute","hasAppPages","Object","keys","some","root","opts","_opts_config_experimental_sri","_isapprouteroute","isAppRouteRoute","appDirLoader","loaderParams","Buffer","from","toString","nextConfigOutput","output","middlewareConfig","JSON","stringify","import","_querystring","layer","WEBPACK_LAYERS","reactServerComponents","_utils","isMiddlewareFile","_opts_middleware","matchers","middleware","_nextmiddlewareloader","encodeMatchers","_isapiroute","isAPIRoute","isInstrumentationHookFile","filename","INSTRUMENTATION_HOOK_FILENAME","absolute500Path","absoluteAppPath","absoluteDocumentPath","absoluteErrorPath","buildId","dev","isServerComponent","stringifiedConfig","sriEnabled","experimental","sri","algorithm","incrementalCacheHandlerPath","serverActionsBodySizeLimit","serverSideRendering","undefined","loaderOptions","pageLoader","params","onServer","onEdgeServer","_isedgeruntime","isEdgeRuntime","pageRuntime","onClient","rootPaths","appPaths","edgeServer","server","client","middlewareMatchers","appPathsPerRoute","pathname","_apppaths","normalizeAppPath","actualPath","push","fromEntries","entries","k","v","sort","getEntryHandler","mappings","bundleFile","_normalizepagepath","normalizePagePath","clientBundlePath","posix","serverBundlePath","slice","_constants1","RSC_MODULE_TYPES","_staticInfo_middleware","regexp","originalSource","matchedAppPaths","name","basePath","assetPrefix","_utils1","encodeToBase64","_nextrouteloader","getRouteLoaderEntry","kind","_routekind","RouteKind","PAGES_API","_isinternalcomponent","isInternalComponent","isNonRoutePagesPage","PAGES","normalizedServerBundlePath","bundlePath","promises","entryHandler","Promise","all","compilerType","value","hasAppDir","entry","Array","isArray","isApi","COMPILER_NAMES","publicPath","api","isMiddlewareFilename","library","type","EDGE_RUNTIME_WEBPACK","asyncChunks","isAppLayer","CLIENT_STATIC_FILES_RUNTIME_MAIN_APP","APP_CLIENT_INTERNALS","CLIENT_STATIC_FILES_RUNTIME_POLYFILLS","CLIENT_STATIC_FILES_RUNTIME_MAIN","CLIENT_STATIC_FILES_RUNTIME_AMP","CLIENT_STATIC_FILES_RUNTIME_REACT_REFRESH","dependOn","appPagesBrowser","Error"],"sources":["../../src/build/entries.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}