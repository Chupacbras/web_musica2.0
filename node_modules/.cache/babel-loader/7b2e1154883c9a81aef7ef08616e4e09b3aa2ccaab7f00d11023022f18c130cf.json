{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Worker\", {\n  enumerable: true,\n  get: function () {\n    return Worker;\n  }\n});\nconst _jestworker = require(\"next/dist/compiled/jest-worker\");\nconst _utils = require(\"../server/lib/utils\");\nconst RESTARTED = Symbol(\"restarted\");\nconst cleanupWorkers = worker => {\n  var _worker__workerPool;\n  for (const curWorker of ((_worker__workerPool = worker._workerPool) == null ? void 0 : _worker__workerPool._workers) || []) {\n    var _curWorker__child;\n    (_curWorker__child = curWorker._child) == null ? void 0 : _curWorker__child.kill(\"SIGINT\");\n  }\n};\nclass Worker {\n  constructor(workerPath, options) {\n    let {\n      timeout,\n      onRestart,\n      ...farmOptions\n    } = options;\n    let restartPromise;\n    let resolveRestartPromise;\n    let activeTasks = 0;\n    this._worker = undefined;\n    const createWorker = () => {\n      var _farmOptions_forkOptions;\n      this._worker = new _jestworker.Worker(workerPath, {\n        ...farmOptions,\n        forkOptions: {\n          ...farmOptions.forkOptions,\n          env: {\n            ...(((_farmOptions_forkOptions = farmOptions.forkOptions) == null ? void 0 : _farmOptions_forkOptions.env) || {}),\n            ...process.env,\n            // we don't pass down NODE_OPTIONS as it can\n            // extra memory usage\n            NODE_OPTIONS: (0, _utils.getNodeOptionsWithoutInspect)().replace(/--max-old-space-size=[\\d]{1,}/, \"\").trim()\n          }\n        }\n      });\n      restartPromise = new Promise(resolve => resolveRestartPromise = resolve);\n      /**\n      * Jest Worker has two worker types, ChildProcessWorker (uses child_process) and NodeThreadWorker (uses worker_threads)\n      * Next.js uses ChildProcessWorker by default, but it can be switched to NodeThreadWorker with an experimental flag\n      *\n      * We only want to handle ChildProcessWorker's orphan process issue, so we access the private property \"_child\":\n      * https://github.com/facebook/jest/blob/b38d7d345a81d97d1dc3b68b8458b1837fbf19be/packages/jest-worker/src/workers/ChildProcessWorker.ts\n      *\n      * But this property is not available in NodeThreadWorker, so we need to check if we are using ChildProcessWorker\n      */\n      if (!farmOptions.enableWorkerThreads) {\n        var _this__worker__workerPool;\n        for (const worker of ((_this__worker__workerPool = this._worker._workerPool) == null ? void 0 : _this__worker__workerPool._workers) || []) {\n          var _worker__child;\n          (_worker__child = worker._child) == null ? void 0 : _worker__child.on(\"exit\", (code, signal) => {\n            // log unexpected exit if .end() wasn't called\n            if ((code || signal) && this._worker) {\n              console.error(`Static worker unexpectedly exited with code: ${code} and signal: ${signal}`);\n            }\n          });\n        }\n      }\n      this._worker.getStdout().pipe(process.stdout);\n      this._worker.getStderr().pipe(process.stderr);\n    };\n    createWorker();\n    const onHanging = () => {\n      const worker = this._worker;\n      if (!worker) return;\n      const resolve = resolveRestartPromise;\n      createWorker();\n      worker.end().then(() => {\n        resolve(RESTARTED);\n      });\n    };\n    let hangingTimer = false;\n    const onActivity = () => {\n      if (hangingTimer) clearTimeout(hangingTimer);\n      hangingTimer = activeTasks > 0 && setTimeout(onHanging, timeout);\n    };\n    for (const method of farmOptions.exposedMethods) {\n      if (method.startsWith(\"_\")) continue;\n      this[method] = timeout ? async (...args) => {\n        activeTasks++;\n        try {\n          let attempts = 0;\n          for (;;) {\n            onActivity();\n            const result = await Promise.race([this._worker[method](...args), restartPromise]);\n            if (result !== RESTARTED) return result;\n            if (onRestart) onRestart(method, args, ++attempts);\n          }\n        } finally {\n          activeTasks--;\n          onActivity();\n        }\n      } : this._worker[method].bind(this._worker);\n    }\n  }\n  end() {\n    const worker = this._worker;\n    if (!worker) {\n      throw new Error(\"Farm is ended, no more calls can be done to it\");\n    }\n    cleanupWorkers(worker);\n    this._worker = undefined;\n    return worker.end();\n  }\n  /**\n  * Quietly end the worker if it exists\n  */\n  close() {\n    if (this._worker) {\n      cleanupWorkers(this._worker);\n      this._worker.end();\n    }\n  }\n}","map":{"version":3,"names":["Worker","RESTARTED","Symbol","cleanupWorkers","worker","_worker__workerPool","curWorker","_workerPool","_workers","_curWorker__child","_child","kill","constructor","workerPath","options","timeout","onRestart","farmOptions","restartPromise","resolveRestartPromise","activeTasks","_worker","undefined","createWorker","_farmOptions_forkOptions","_jestworker","forkOptions","env","process","NODE_OPTIONS","_utils","getNodeOptionsWithoutInspect","replace","trim","Promise","resolve","enableWorkerThreads","_this__worker__workerPool","_worker__child","on","code","signal","console","error","getStdout","pipe","stdout","getStderr","stderr","onHanging","end","then","hangingTimer","onActivity","clearTimeout","setTimeout","method","exposedMethods","startsWith","args","attempts","result","race","bind","Error","close"],"sources":["../../src/lib/worker.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}