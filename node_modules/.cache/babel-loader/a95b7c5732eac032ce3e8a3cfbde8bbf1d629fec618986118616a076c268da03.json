{"ast":null,"code":"(() => {\n  \"use strict\";\n\n  var e = {\n    151: e => {\n      function dataUriToBuffer(e) {\n        if (!/^data:/i.test(e)) {\n          throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")');\n        }\n        e = e.replace(/\\r?\\n/g, \"\");\n        const r = e.indexOf(\",\");\n        if (r === -1 || r <= 4) {\n          throw new TypeError(\"malformed data: URI\");\n        }\n        const t = e.substring(5, r).split(\";\");\n        let a = \"\";\n        let i = false;\n        const s = t[0] || \"text/plain\";\n        let n = s;\n        for (let e = 1; e < t.length; e++) {\n          if (t[e] === \"base64\") {\n            i = true;\n          } else {\n            n += `;${t[e]}`;\n            if (t[e].indexOf(\"charset=\") === 0) {\n              a = t[e].substring(8);\n            }\n          }\n        }\n        if (!t[0] && !a.length) {\n          n += \";charset=US-ASCII\";\n          a = \"US-ASCII\";\n        }\n        const o = i ? \"base64\" : \"ascii\";\n        const f = unescape(e.substring(r + 1));\n        const _ = Buffer.from(f, o);\n        _.type = s;\n        _.typeFull = n;\n        _.charset = a;\n        return _;\n      }\n      e.exports = dataUriToBuffer;\n    }\n  };\n  var r = {};\n  function __nccwpck_require__(t) {\n    var a = r[t];\n    if (a !== undefined) {\n      return a.exports;\n    }\n    var i = r[t] = {\n      exports: {}\n    };\n    var s = true;\n    try {\n      e[t](i, i.exports, __nccwpck_require__);\n      s = false;\n    } finally {\n      if (s) delete r[t];\n    }\n    return i.exports;\n  }\n  if (typeof __nccwpck_require__ !== \"undefined\") __nccwpck_require__.ab = __dirname + \"/\";\n  var t = __nccwpck_require__(151);\n  module.exports = t;\n})();","map":{"version":3,"names":["e","dataUriToBuffer","test","TypeError","replace","r","indexOf","t","substring","split","a","i","s","n","length","o","f","unescape","_","Buffer","from","type","typeFull","charset","exports","__nccwpck_require__","undefined","ab","__dirname","module"],"sources":["/Users/albertformatger/Documents/GitHub/web_musica/node_modules/next/dist/compiled/data-uri-to-buffer/index.js"],"sourcesContent":["(()=>{\"use strict\";var e={151:e=>{function dataUriToBuffer(e){if(!/^data:/i.test(e)){throw new TypeError('`uri` does not appear to be a Data URI (must begin with \"data:\")')}e=e.replace(/\\r?\\n/g,\"\");const r=e.indexOf(\",\");if(r===-1||r<=4){throw new TypeError(\"malformed data: URI\")}const t=e.substring(5,r).split(\";\");let a=\"\";let i=false;const s=t[0]||\"text/plain\";let n=s;for(let e=1;e<t.length;e++){if(t[e]===\"base64\"){i=true}else{n+=`;${t[e]}`;if(t[e].indexOf(\"charset=\")===0){a=t[e].substring(8)}}}if(!t[0]&&!a.length){n+=\";charset=US-ASCII\";a=\"US-ASCII\"}const o=i?\"base64\":\"ascii\";const f=unescape(e.substring(r+1));const _=Buffer.from(f,o);_.type=s;_.typeFull=n;_.charset=a;return _}e.exports=dataUriToBuffer}};var r={};function __nccwpck_require__(t){var a=r[t];if(a!==undefined){return a.exports}var i=r[t]={exports:{}};var s=true;try{e[t](i,i.exports,__nccwpck_require__);s=false}finally{if(s)delete r[t]}return i.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(151);module.exports=t})();"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}