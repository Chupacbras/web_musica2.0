{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"LocaleRouteMatcher\", {\n  enumerable: true,\n  get: function () {\n    return LocaleRouteMatcher;\n  }\n});\nconst _routematcher = require(\"./route-matcher\");\nclass LocaleRouteMatcher extends _routematcher.RouteMatcher {\n  /**\n  * Identity returns the identity part of the matcher. This is used to compare\n  * a unique matcher to another. This is also used when sorting dynamic routes,\n  * so it must contain the pathname part as well.\n  */\n  get identity() {\n    var _this_definition_i18n;\n    return `${this.definition.pathname}?__nextLocale=${(_this_definition_i18n = this.definition.i18n) == null ? void 0 : _this_definition_i18n.locale}`;\n  }\n  /**\n  * Match will attempt to match the given pathname against this route while\n  * also taking into account the locale information.\n  *\n  * @param pathname The pathname to match against.\n  * @param options The options to use when matching.\n  * @returns The match result, or `null` if there was no match.\n  */\n  match(pathname, options) {\n    var\n      // If the options have a detected locale, then use that, otherwise use\n      // the route's locale.\n      _options_i18n, _this_definition_i18n;\n    // This is like the parent `match` method but instead this injects the\n    // additional `options` into the\n    const result = this.test(pathname, options);\n    if (!result) return null;\n    return {\n      definition: this.definition,\n      params: result.params,\n      detectedLocale: (options == null ? void 0 : (_options_i18n = options.i18n) == null ? void 0 : _options_i18n.detectedLocale) ?? ((_this_definition_i18n = this.definition.i18n) == null ? void 0 : _this_definition_i18n.locale)\n    };\n  }\n  /**\n  * Test will attempt to match the given pathname against this route while\n  * also taking into account the locale information.\n  *\n  * @param pathname The pathname to match against.\n  * @param options The options to use when matching.\n  * @returns The match result, or `null` if there was no match.\n  */\n  test(pathname, options) {\n    // If this route has locale information and we have detected a locale, then\n    // we need to compare the detected locale to the route's locale.\n    if (this.definition.i18n && (options == null ? void 0 : options.i18n)) {\n      // If we have detected a locale and it does not match this route's locale,\n      // then this isn't a match!\n      if (this.definition.i18n.locale && options.i18n.detectedLocale && this.definition.i18n.locale !== options.i18n.detectedLocale) {\n        return null;\n      }\n      // Perform regular matching against the locale stripped pathname now, the\n      // locale information matches!\n      return super.test(options.i18n.pathname);\n    }\n    // If we don't have locale information, then we can just perform regular\n    // matching.\n    return super.test(pathname);\n  }\n}","map":{"version":3,"names":["LocaleRouteMatcher","_routematcher","RouteMatcher","identity","_this_definition_i18n","definition","pathname","i18n","locale","match","options","_options_i18n","result","test","params","detectedLocale"],"sources":["../../../../src/server/future/route-matchers/locale-route-matcher.ts"],"sourcesContent":[null],"mappings":";;;;;+BAca;;;WAAAA,kBAAA;;;8BAXgB;AAWtB,MAAMA,kBAAA,SAEHC,aAAA,CAAAC,YAAY;EACpB;;;;;EAKA,IAAWC,SAAA,EAAmB;QACuBC,qBAAA;IAAnD,OAAQ,GAAE,IAAI,CAACC,UAAU,CAACC,QAAS,iBAAc,CAAEF,qBAAA,OAAI,CAACC,UAAU,CAACE,IAAI,qBAApBH,qBAAA,CAAsBI,MAAO,EAAC;EACnF;EAEA;;;;;;;;EAQAC,KAAOA,CACLH,QAAgB,EAChBI,OAAmC,EACP;;MAUxB;MACA;MACAC,aAAA,EAAiCP,qBAAA;IAXrC;IACA;IACA,MAAMQ,MAAA,GAAS,IAAI,CAACC,IAAI,CAACP,QAAA,EAAUI,OAAA;IACnC,IAAI,CAACE,MAAA,EAAQ,OAAO;IAEpB,OAAO;MACLP,UAAA,EAAY,IAAI,CAACA,UAAU;MAC3BS,MAAA,EAAQF,MAAA,CAAOE,MAAM;MACrBC,cAAA,EAGE,CAAAL,OAAA,qBAAAC,aAAA,GAAAD,OAAA,CAASH,IAAI,qBAAbI,aAAA,CAAeI,cAAc,OAAIX,qBAAA,OAAI,CAACC,UAAU,CAACE,IAAI,qBAApBH,qBAAA,CAAsBI,MAAM;IACjE;EACF;EAEA;;;;;;;;EAQAK,IAAOA,CAAKP,QAAgB,EAAEI,OAAmC,EAAE;IACjE;IACA;IACA,IAAI,IAAI,CAACL,UAAU,CAACE,IAAI,KAAIG,OAAA,oBAAAA,OAAA,CAASH,IAAI,GAAE;MACzC;MACA;MACA,IACE,IAAI,CAACF,UAAU,CAACE,IAAI,CAACC,MAAM,IAC3BE,OAAA,CAAQH,IAAI,CAACQ,cAAc,IAC3B,IAAI,CAACV,UAAU,CAACE,IAAI,CAACC,MAAM,KAAKE,OAAA,CAAQH,IAAI,CAACQ,cAAc,EAC3D;QACA,OAAO;MACT;MAEA;MACA;MACA,OAAO,KAAK,CAACF,IAAA,CAAKH,OAAA,CAAQH,IAAI,CAACD,QAAQ;IACzC;IAEA;IACA;IACA,OAAO,KAAK,CAACO,IAAA,CAAKP,QAAA;EACpB;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}