{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"createSelfSignedCertificate\", {\n  enumerable: true,\n  get: function () {\n    return createSelfSignedCertificate;\n  }\n});\nconst _fs = /*#__PURE__*/_interop_require_default(require(\"fs\"));\nconst _path = /*#__PURE__*/_interop_require_default(require(\"path\"));\nconst _getcachedirectory = require(\"./helpers/get-cache-directory\");\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"../build/output/log\"));\nconst _child_process = require(\"child_process\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nconst {\n  fetch\n} = require(\"next/dist/compiled/undici\");\nconst MKCERT_VERSION = \"v1.4.4\";\nfunction getBinaryName() {\n  const platform = process.platform;\n  const arch = process.arch === \"x64\" ? \"amd64\" : process.arch;\n  if (platform === \"win32\") {\n    return `mkcert-${MKCERT_VERSION}-windows-${arch}.exe`;\n  }\n  if (platform === \"darwin\") {\n    return `mkcert-${MKCERT_VERSION}-darwin-${arch}`;\n  }\n  if (platform === \"linux\") {\n    return `mkcert-${MKCERT_VERSION}-linux-${arch}`;\n  }\n  throw new Error(`Unsupported platform: ${platform}`);\n}\nasync function downloadBinary() {\n  try {\n    const binaryName = getBinaryName();\n    const cacheDirectory = await (0, _getcachedirectory.getCacheDirectory)(\"mkcert\");\n    const binaryPath = _path.default.join(cacheDirectory, binaryName);\n    if (_fs.default.existsSync(binaryPath)) {\n      return binaryPath;\n    }\n    const downloadUrl = `https://github.com/FiloSottile/mkcert/releases/download/${MKCERT_VERSION}/${binaryName}`;\n    await _fs.default.promises.mkdir(cacheDirectory, {\n      recursive: true\n    });\n    _log.info(`Downloading mkcert package...`);\n    const response = await fetch(downloadUrl);\n    if (!response.ok || !response.body) {\n      throw new Error(`request failed with status ${response.status}`);\n    }\n    _log.info(`Download response was successful, writing to disk`);\n    const arrayBuffer = await response.arrayBuffer();\n    const buffer = Buffer.from(arrayBuffer);\n    await _fs.default.promises.writeFile(binaryPath, buffer);\n    await _fs.default.promises.chmod(binaryPath, 493);\n    return binaryPath;\n  } catch (err) {\n    _log.error(\"Error downloading mkcert:\", err);\n  }\n}\nasync function createSelfSignedCertificate(host, certDir = \"certificates\") {\n  try {\n    const binaryPath = await downloadBinary();\n    if (!binaryPath) throw new Error(\"missing mkcert binary\");\n    const resolvedCertDir = _path.default.resolve(process.cwd(), `./${certDir}`);\n    await _fs.default.promises.mkdir(resolvedCertDir, {\n      recursive: true\n    });\n    const keyPath = _path.default.resolve(resolvedCertDir, \"localhost-key.pem\");\n    const certPath = _path.default.resolve(resolvedCertDir, \"localhost.pem\");\n    _log.info(\"Attempting to generate self signed certificate. This may prompt for your password\");\n    const defaultHosts = [\"localhost\", \"127.0.0.1\", \"::1\"];\n    const hosts = host && !defaultHosts.includes(host) ? [...defaultHosts, host] : defaultHosts;\n    (0, _child_process.execSync)(`${binaryPath} -install -key-file ${keyPath} -cert-file ${certPath} ${hosts.join(\" \")}`, {\n      stdio: \"ignore\"\n    });\n    const caLocation = (0, _child_process.execSync)(`${binaryPath} -CAROOT`).toString().trim();\n    if (!_fs.default.existsSync(keyPath) || !_fs.default.existsSync(certPath)) {\n      throw new Error(\"Certificate files not found\");\n    }\n    _log.info(`CA Root certificate created in ${caLocation}`);\n    _log.info(`Certificates created in ${resolvedCertDir}`);\n    const gitignorePath = _path.default.resolve(process.cwd(), \"./.gitignore\");\n    if (_fs.default.existsSync(gitignorePath)) {\n      const gitignore = await _fs.default.promises.readFile(gitignorePath, \"utf8\");\n      if (!gitignore.includes(certDir)) {\n        _log.info(\"Adding certificates to .gitignore\");\n        await _fs.default.promises.appendFile(gitignorePath, `\\n${certDir}`);\n      }\n    }\n    return {\n      key: keyPath,\n      cert: certPath,\n      rootCA: `${caLocation}/rootCA.pem`\n    };\n  } catch (err) {\n    _log.error(\"Failed to generate self-signed certificate. Falling back to http.\", err);\n  }\n}","map":{"version":3,"names":["createSelfSignedCertificate","fetch","require","MKCERT_VERSION","getBinaryName","platform","process","arch","Error","downloadBinary","binaryName","cacheDirectory","_getcachedirectory","getCacheDirectory","binaryPath","_path","default","join","_fs","existsSync","downloadUrl","promises","mkdir","recursive","_log","info","response","ok","body","status","arrayBuffer","buffer","Buffer","from","writeFile","chmod","err","error","host","certDir","resolvedCertDir","resolve","cwd","keyPath","certPath","defaultHosts","hosts","includes","_child_process","execSync","stdio","caLocation","toString","trim","gitignorePath","gitignore","readFile","appendFile","key","cert","rootCA"],"sources":["../../src/lib/mkcert.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}