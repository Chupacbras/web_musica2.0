{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  regexLikeCss: null,\n  lazyPostCSS: null,\n  css: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  regexLikeCss: function () {\n    return regexLikeCss;\n  },\n  lazyPostCSS: function () {\n    return lazyPostCSS;\n  },\n  css: function () {\n    return css;\n  }\n});\nconst _lodashcurry = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/lodash.curry\"));\nconst _helpers = require(\"../../helpers\");\nconst _utils = require(\"../../utils\");\nconst _loaders = require(\"./loaders\");\nconst _nextfont = require(\"./loaders/next-font\");\nconst _messages = require(\"./messages\");\nconst _plugins = require(\"./plugins\");\nconst _nonnullable = require(\"../../../../../lib/non-nullable\");\nconst _constants = require(\"../../../../../lib/constants\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nconst regexLikeCss = /\\.(css|scss|sass)$/;\n// RegExps for Style Sheets\nconst regexCssGlobal = /(?<!\\.module)\\.css$/;\nconst regexCssModules = /\\.module\\.css$/;\n// RegExps for Syntactically Awesome Style Sheets\nconst regexSassGlobal = /(?<!\\.module)\\.(scss|sass)$/;\nconst regexSassModules = /\\.module\\.(scss|sass)$/;\nconst APP_LAYER_RULE = {\n  or: [_constants.WEBPACK_LAYERS.reactServerComponents, _constants.WEBPACK_LAYERS.serverSideRendering, _constants.WEBPACK_LAYERS.appPagesBrowser]\n};\nconst PAGES_LAYER_RULE = {\n  not: [_constants.WEBPACK_LAYERS.reactServerComponents, _constants.WEBPACK_LAYERS.serverSideRendering, _constants.WEBPACK_LAYERS.appPagesBrowser]\n};\n/**\n * Mark a rule as removable if built-in CSS support is disabled\n */\nfunction markRemovable(r) {\n  Object.defineProperty(r, Symbol.for(\"__next_css_remove\"), {\n    enumerable: false,\n    value: true\n  });\n  return r;\n}\nlet postcssInstancePromise;\nasync function lazyPostCSS(rootDirectory, supportedBrowsers, disablePostcssPresetEnv) {\n  if (!postcssInstancePromise) {\n    postcssInstancePromise = (async () => {\n      const postcss = require(\"postcss\");\n      // @ts-ignore backwards compat\n      postcss.plugin = function postcssPlugin(name, initializer) {\n        function creator(...args) {\n          let transformer = initializer(...args);\n          transformer.postcssPlugin = name;\n          // transformer.postcssVersion = new Processor().version\n          return transformer;\n        }\n        let cache;\n        Object.defineProperty(creator, \"postcss\", {\n          get() {\n            if (!cache) cache = creator();\n            return cache;\n          }\n        });\n        creator.process = function (css, processOpts, pluginOpts) {\n          return postcss([creator(pluginOpts)]).process(css, processOpts);\n        };\n        return creator;\n      };\n      // @ts-ignore backwards compat\n      postcss.vendor = {\n        /**\n        * Returns the vendor prefix extracted from an input string.\n        *\n        * @example\n        * postcss.vendor.prefix('-moz-tab-size') //=> '-moz-'\n        * postcss.vendor.prefix('tab-size')      //=> ''\n        */\n        prefix: function prefix(prop) {\n          const match = prop.match(/^(-\\w+-)/);\n          if (match) {\n            return match[0];\n          }\n          return \"\";\n        },\n        /**\n        * Returns the input string stripped of its vendor prefix.\n        *\n        * @example\n        * postcss.vendor.unprefixed('-moz-tab-size') //=> 'tab-size'\n        */\n        unprefixed: function unprefixed(\n        /**\n        * String with or without vendor prefix.\n        */\n        prop) {\n          return prop.replace(/^-\\w+-/, \"\");\n        }\n      };\n      const postCssPlugins = await (0, _plugins.getPostCssPlugins)(rootDirectory, supportedBrowsers, disablePostcssPresetEnv);\n      return {\n        postcss,\n        postcssWithPlugins: postcss(postCssPlugins)\n      };\n    })();\n  }\n  return postcssInstancePromise;\n}\nconst css = (0, _lodashcurry.default)(async function css(ctx, config) {\n  const {\n    prependData: sassPrependData,\n    additionalData: sassAdditionalData,\n    ...sassOptions\n  } = ctx.sassOptions;\n  const lazyPostCSSInitializer = () => lazyPostCSS(ctx.rootDirectory, ctx.supportedBrowsers, ctx.experimental.disablePostcssPresetEnv);\n  const sassPreprocessors = [\n  // First, process files with `sass-loader`: this inlines content, and\n  // compiles away the proprietary syntax.\n  {\n    loader: require.resolve(\"next/dist/compiled/sass-loader\"),\n    options: {\n      // Source maps are required so that `resolve-url-loader` can locate\n      // files original to their source directory.\n      sourceMap: true,\n      sassOptions: {\n        // The \"fibers\" option is not needed for Node.js 16+, but it's causing\n        // problems for Node.js <= 14 users as you'll have to manually install\n        // the `fibers` package:\n        // https://github.com/webpack-contrib/sass-loader#:~:text=We%20automatically%20inject%20the%20fibers%20package\n        // https://github.com/vercel/next.js/issues/45052\n        // Since it's optional and not required, we'll disable it by default\n        // to avoid the confusion.\n        fibers: false,\n        ...sassOptions\n      },\n      additionalData: sassPrependData || sassAdditionalData\n    }\n  },\n  // Then, `sass-loader` will have passed-through CSS imports as-is instead\n  // of inlining them. Because they were inlined, the paths are no longer\n  // correct.\n  // To fix this, we use `resolve-url-loader` to rewrite the CSS\n  // imports to real file paths.\n  {\n    loader: require.resolve(\"../../../loaders/resolve-url-loader/index\"),\n    options: {\n      postcss: lazyPostCSSInitializer,\n      // Source maps are not required here, but we may as well emit\n      // them.\n      sourceMap: true\n    }\n  }];\n  const fns = [];\n  const googleLoader = require.resolve(\"next/dist/compiled/@next/font/google/loader\");\n  const localLoader = require.resolve(\"next/dist/compiled/@next/font/local/loader\");\n  const nextFontLoaders = [[require.resolve(\"next/font/google/target.css\"), googleLoader], [require.resolve(\"next/font/local/target.css\"), localLoader],\n  // TODO: remove this in the next major version\n  [/node_modules[\\\\/]@next[\\\\/]font[\\\\/]google[\\\\/]target.css/, googleLoader], [/node_modules[\\\\/]@next[\\\\/]font[\\\\/]local[\\\\/]target.css/, localLoader]];\n  nextFontLoaders.forEach(([fontLoaderTarget, fontLoaderPath]) => {\n    // Matches the resolved font loaders noop files to run next-font-loader\n    fns.push((0, _helpers.loader)({\n      oneOf: [markRemovable({\n        sideEffects: false,\n        test: fontLoaderTarget,\n        use: (0, _nextfont.getNextFontLoader)(ctx, lazyPostCSSInitializer, fontLoaderPath)\n      })]\n    }));\n  });\n  // CSS cannot be imported in _document. This comes before everything because\n  // global CSS nor CSS modules work in said file.\n  fns.push((0, _helpers.loader)({\n    oneOf: [markRemovable({\n      test: regexLikeCss,\n      // Use a loose regex so we don't have to crawl the file system to\n      // find the real file name (if present).\n      issuer: /pages[\\\\/]_document\\./,\n      use: {\n        loader: \"error-loader\",\n        options: {\n          reason: (0, _messages.getCustomDocumentError)()\n        }\n      }\n    })]\n  }));\n  const shouldIncludeExternalCSSImports = !!ctx.experimental.craCompat || !!ctx.transpilePackages;\n  // CSS modules & SASS modules support. They are allowed to be imported in anywhere.\n  fns.push(\n  // CSS Modules should never have side effects. This setting will\n  // allow unused CSS to be removed from the production build.\n  // We ensure this by disallowing `:global()` CSS at the top-level\n  // via the `pure` mode in `css-loader`.\n  (0, _helpers.loader)({\n    oneOf: [\n    // For app dir, we need to match the specific app layer.\n    ctx.hasAppDir ? markRemovable({\n      sideEffects: false,\n      test: regexCssModules,\n      issuerLayer: APP_LAYER_RULE,\n      use: [{\n        loader: require.resolve(\"../../../loaders/next-flight-css-loader\"),\n        options: {\n          cssModules: true\n        }\n      }, ...(0, _loaders.getCssModuleLoader)({\n        ...ctx,\n        isAppDir: true\n      }, lazyPostCSSInitializer)]\n    }) : null, markRemovable({\n      sideEffects: false,\n      test: regexCssModules,\n      issuerLayer: PAGES_LAYER_RULE,\n      use: (0, _loaders.getCssModuleLoader)({\n        ...ctx,\n        isAppDir: false\n      }, lazyPostCSSInitializer)\n    })].filter(_nonnullable.nonNullable)\n  }),\n  // Opt-in support for Sass (using .scss or .sass extensions).\n  // Sass Modules should never have side effects. This setting will\n  // allow unused Sass to be removed from the production build.\n  // We ensure this by disallowing `:global()` Sass at the top-level\n  // via the `pure` mode in `css-loader`.\n  (0, _helpers.loader)({\n    oneOf: [\n    // For app dir, we need to match the specific app layer.\n    ctx.hasAppDir ? markRemovable({\n      sideEffects: false,\n      test: regexSassModules,\n      issuerLayer: APP_LAYER_RULE,\n      use: [{\n        loader: require.resolve(\"../../../loaders/next-flight-css-loader\"),\n        options: {\n          cssModules: true\n        }\n      }, ...(0, _loaders.getCssModuleLoader)({\n        ...ctx,\n        isAppDir: true\n      }, lazyPostCSSInitializer, sassPreprocessors)]\n    }) : null, markRemovable({\n      sideEffects: false,\n      test: regexSassModules,\n      issuerLayer: PAGES_LAYER_RULE,\n      use: (0, _loaders.getCssModuleLoader)({\n        ...ctx,\n        isAppDir: false\n      }, lazyPostCSSInitializer, sassPreprocessors)\n    })].filter(_nonnullable.nonNullable)\n  }),\n  // Throw an error for CSS Modules used outside their supported scope\n  (0, _helpers.loader)({\n    oneOf: [markRemovable({\n      test: [regexCssModules, regexSassModules],\n      use: {\n        loader: \"error-loader\",\n        options: {\n          reason: (0, _messages.getLocalModuleImportError)()\n        }\n      }\n    })]\n  }));\n  // Global CSS and SASS support.\n  if (ctx.isServer) {\n    fns.push((0, _helpers.loader)({\n      oneOf: [ctx.hasAppDir && !ctx.isProduction ? markRemovable({\n        sideEffects: true,\n        test: [regexCssGlobal, regexSassGlobal],\n        issuerLayer: APP_LAYER_RULE,\n        use: {\n          loader: require.resolve(\"../../../loaders/next-flight-css-loader\"),\n          options: {\n            cssModules: false\n          }\n        }\n      }) : null, markRemovable({\n        // CSS imports have side effects, even on the server side.\n        sideEffects: true,\n        test: [regexCssGlobal, regexSassGlobal],\n        use: require.resolve(\"next/dist/compiled/ignore-loader\")\n      })].filter(_nonnullable.nonNullable)\n    }));\n  } else {\n    // External CSS files are allowed to be loaded when any of the following is true:\n    // - hasAppDir: all CSS files are allowed\n    // - If the CSS file is located in `node_modules`\n    // - If the CSS file is located in another package in a monorepo (outside of the current rootDir)\n    // - If the issuer is pages/_app (matched later)\n    const allowedPagesGlobalCSSPath = ctx.hasAppDir ? undefined : {\n      and: [{\n        or: [/node_modules/, {\n          not: [ctx.rootDirectory]\n        }]\n      }]\n    };\n    const allowedPagesGlobalCSSIssuer = ctx.hasAppDir ? undefined : shouldIncludeExternalCSSImports ? undefined : {\n      and: [ctx.rootDirectory],\n      not: [/node_modules/]\n    };\n    fns.push((0, _helpers.loader)({\n      oneOf: [...(ctx.hasAppDir ? [markRemovable({\n        sideEffects: true,\n        test: regexCssGlobal,\n        issuerLayer: APP_LAYER_RULE,\n        use: [{\n          loader: require.resolve(\"../../../loaders/next-flight-css-loader\"),\n          options: {\n            cssModules: false\n          }\n        }, ...(0, _loaders.getGlobalCssLoader)({\n          ...ctx,\n          isAppDir: true\n        }, lazyPostCSSInitializer)]\n      }), markRemovable({\n        sideEffects: true,\n        test: regexSassGlobal,\n        issuerLayer: APP_LAYER_RULE,\n        use: [{\n          loader: require.resolve(\"../../../loaders/next-flight-css-loader\"),\n          options: {\n            cssModules: false\n          }\n        }, ...(0, _loaders.getGlobalCssLoader)({\n          ...ctx,\n          isAppDir: true\n        }, lazyPostCSSInitializer, sassPreprocessors)]\n      })] : []), markRemovable({\n        sideEffects: true,\n        test: regexCssGlobal,\n        include: allowedPagesGlobalCSSPath,\n        issuer: allowedPagesGlobalCSSIssuer,\n        issuerLayer: PAGES_LAYER_RULE,\n        use: (0, _loaders.getGlobalCssLoader)({\n          ...ctx,\n          isAppDir: false\n        }, lazyPostCSSInitializer)\n      }), markRemovable({\n        sideEffects: true,\n        test: regexSassGlobal,\n        include: allowedPagesGlobalCSSPath,\n        issuer: allowedPagesGlobalCSSIssuer,\n        issuerLayer: PAGES_LAYER_RULE,\n        use: (0, _loaders.getGlobalCssLoader)({\n          ...ctx,\n          isAppDir: false\n        }, lazyPostCSSInitializer, sassPreprocessors)\n      })].filter(_nonnullable.nonNullable)\n    }));\n    if (ctx.customAppFile) {\n      fns.push((0, _helpers.loader)({\n        oneOf: [markRemovable({\n          sideEffects: true,\n          test: regexCssGlobal,\n          issuer: {\n            and: [ctx.customAppFile]\n          },\n          use: (0, _loaders.getGlobalCssLoader)({\n            ...ctx,\n            isAppDir: false\n          }, lazyPostCSSInitializer)\n        })]\n      }), (0, _helpers.loader)({\n        oneOf: [markRemovable({\n          sideEffects: true,\n          test: regexSassGlobal,\n          issuer: {\n            and: [ctx.customAppFile]\n          },\n          use: (0, _loaders.getGlobalCssLoader)({\n            ...ctx,\n            isAppDir: false\n          }, lazyPostCSSInitializer, sassPreprocessors)\n        })]\n      }));\n    }\n  }\n  // Throw an error for Global CSS used inside of `node_modules`\n  if (!shouldIncludeExternalCSSImports) {\n    fns.push((0, _helpers.loader)({\n      oneOf: [markRemovable({\n        test: [regexCssGlobal, regexSassGlobal],\n        issuer: {\n          and: [/node_modules/]\n        },\n        use: {\n          loader: \"error-loader\",\n          options: {\n            reason: (0, _messages.getGlobalModuleImportError)()\n          }\n        }\n      })]\n    }));\n  }\n  // Throw an error for Global CSS used outside of our custom <App> file\n  fns.push((0, _helpers.loader)({\n    oneOf: [markRemovable({\n      test: [regexCssGlobal, regexSassGlobal],\n      issuer: ctx.hasAppDir ? {\n        // If it's inside the app dir, but not importing from a layout file,\n        // throw an error.\n        and: [ctx.rootDirectory],\n        not: [/layout\\.(js|mjs|jsx|ts|tsx)$/]\n      } : undefined,\n      use: {\n        loader: \"error-loader\",\n        options: {\n          reason: (0, _messages.getGlobalImportError)()\n        }\n      }\n    })]\n  }));\n  if (ctx.isClient) {\n    // Automatically transform references to files (i.e. url()) into URLs\n    // e.g. url(./logo.svg)\n    fns.push((0, _helpers.loader)({\n      oneOf: [markRemovable({\n        // This should only be applied to CSS files\n        issuer: regexLikeCss,\n        // Exclude extensions that webpack handles by default\n        exclude: [/\\.(js|mjs|jsx|ts|tsx)$/, /\\.html$/, /\\.json$/, /\\.webpack\\[[^\\]]+\\]$/],\n        // `asset/resource` always emits a URL reference, where `asset`\n        // might inline the asset as a data URI\n        type: \"asset/resource\"\n      })]\n    }));\n  }\n  // Enable full mini-css-extract-plugin hmr for prod mode pages or app dir\n  if (ctx.isClient && (ctx.isProduction || ctx.hasAppDir)) {\n    // Extract CSS as CSS file(s) in the client-side production bundle.\n    const MiniCssExtractPlugin = require(\"../../../plugins/mini-css-extract-plugin\").default;\n    fns.push((0, _helpers.plugin)(\n    // @ts-ignore webpack 5 compat\n    new MiniCssExtractPlugin({\n      filename: ctx.isProduction ? \"static/css/[contenthash].css\" : \"static/css/[name].css\",\n      chunkFilename: ctx.isProduction ? \"static/css/[contenthash].css\" : \"static/css/[name].css\",\n      // Next.js guarantees that CSS order \"doesn't matter\", due to imposed\n      // restrictions:\n      // 1. Global CSS can only be defined in a single entrypoint (_app)\n      // 2. CSS Modules generate scoped class names by default and cannot\n      //    include Global CSS (:global() selector).\n      //\n      // While not a perfect guarantee (e.g. liberal use of `:global()`\n      // selector), this assumption is required to code-split CSS.\n      //\n      // If this warning were to trigger, it'd be unactionable by the user,\n      // but likely not valid -- so we disable it.\n      ignoreOrder: true\n    })));\n  }\n  const fn = (0, _utils.pipe)(...fns);\n  return fn(config);\n});","map":{"version":3,"names":["regexLikeCss","lazyPostCSS","css","regexCssGlobal","regexCssModules","regexSassGlobal","regexSassModules","APP_LAYER_RULE","or","_constants","WEBPACK_LAYERS","reactServerComponents","serverSideRendering","appPagesBrowser","PAGES_LAYER_RULE","not","markRemovable","r","Object","defineProperty","Symbol","for","enumerable","value","postcssInstancePromise","rootDirectory","supportedBrowsers","disablePostcssPresetEnv","postcss","require","plugin","postcssPlugin","name","initializer","creator","args","transformer","cache","get","process","processOpts","pluginOpts","vendor","prefix","prop","match","unprefixed","replace","postCssPlugins","_plugins","getPostCssPlugins","postcssWithPlugins","_lodashcurry","default","ctx","config","prependData","sassPrependData","additionalData","sassAdditionalData","sassOptions","lazyPostCSSInitializer","experimental","sassPreprocessors","loader","resolve","options","sourceMap","fibers","fns","googleLoader","localLoader","nextFontLoaders","forEach","fontLoaderTarget","fontLoaderPath","push","_helpers","oneOf","sideEffects","test","use","_nextfont","getNextFontLoader","issuer","reason","_messages","getCustomDocumentError","shouldIncludeExternalCSSImports","craCompat","transpilePackages","hasAppDir","issuerLayer","cssModules","_loaders","getCssModuleLoader","isAppDir","filter","_nonnullable","nonNullable","getLocalModuleImportError","isServer","isProduction","allowedPagesGlobalCSSPath","undefined","and","allowedPagesGlobalCSSIssuer","getGlobalCssLoader","include","customAppFile","getGlobalModuleImportError","getGlobalImportError","isClient","exclude","type","MiniCssExtractPlugin","filename","chunkFilename","ignoreOrder","fn","_utils","pipe"],"sources":["../../../../../../src/build/webpack/config/blocks/css/index.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}