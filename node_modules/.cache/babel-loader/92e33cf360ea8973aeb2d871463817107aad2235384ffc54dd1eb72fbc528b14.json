{"ast":null,"code":"#!/usr/bin/env node\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"nextExport\", {\n  enumerable: true,\n  get: function () {\n    return nextExport;\n  }\n});\nconst _path = require(\"path\");\nconst _fs = require(\"fs\");\nconst _chalk = /*#__PURE__*/_interop_require_default(require(\"next/dist/compiled/chalk\"));\nconst _export = /*#__PURE__*/_interop_require_wildcard(require(\"../export\"));\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"../build/output/log\"));\nconst _utils = require(\"../server/lib/utils\");\nconst _trace = require(\"../trace\");\nconst _getprojectdir = require(\"../lib/get-project-dir\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nconst nextExport = args => {\n  const nextExportCliSpan = (0, _trace.trace)(\"next-export-cli\");\n  if (args[\"--help\"]) {\n    console.log(`\n      Description\n        [DEPRECATED] Exports a static version of the application for production deployment\n\n      Usage\n        $ next export [options] <dir>\n\n      <dir> represents the directory of the Next.js application.\n      If no directory is provided, the current directory will be used.\n\n      Options\n       --outdir, -o  Set the output dir (defaults to 'out')\n       --silent, -s  Do not print any messages to console\n       --threads     Max number of threads to use\n       --help, -h    List this help\n\n      The \"next export\" command is deprecated in favor of \"output: export\" in next.config.js\n      Learn more: ${_chalk.default.cyan(\"https://nextjs.org/docs/advanced-features/static-html-export\")}\n    `);\n    process.exit(0);\n  }\n  const dir = (0, _getprojectdir.getProjectDir)(args._[0]);\n  // Check if pages dir exists and warn if not\n  if (!(0, _fs.existsSync)(dir)) {\n    (0, _utils.printAndExit)(`> No such directory exists as the project root: ${dir}`);\n  }\n  const options = {\n    silent: args[\"--silent\"] || false,\n    threads: args[\"--threads\"],\n    outdir: args[\"--outdir\"] ? (0, _path.resolve)(args[\"--outdir\"]) : (0, _path.join)(dir, \"out\"),\n    hasOutdirFromCli: Boolean(args[\"--outdir\"]),\n    isInvokedFromCli: true,\n    hasAppDir: false,\n    buildExport: false\n  };\n  (0, _export.default)(dir, options, nextExportCliSpan).then(() => {\n    nextExportCliSpan.stop();\n    (0, _utils.printAndExit)(`Export successful. Files written to ${options.outdir}`, 0);\n  }).catch(err => {\n    nextExportCliSpan.stop();\n    if (err instanceof _export.ExportError || err.code === \"NEXT_EXPORT_ERROR\") {\n      _log.error(err.message);\n    } else {\n      console.error(err);\n    }\n    process.exit(1);\n  });\n};","map":{"version":3,"names":["nextExport","args","nextExportCliSpan","_trace","trace","console","log","_chalk","default","cyan","process","exit","dir","_getprojectdir","getProjectDir","_","_fs","existsSync","_utils","printAndExit","options","silent","threads","outdir","_path","resolve","join","hasOutdirFromCli","Boolean","isInvokedFromCli","hasAppDir","buildExport","_export","then","stop","catch","err","ExportError","code","_log","error","message"],"sources":["../../src/cli/next-export.ts"],"sourcesContent":[null],"mappings":";;;;;;+BAuES;;;WAAAA,UAAA;;;sBAtEqB;oBACH;6DACT;+DACoC;4DACjC;uBACQ;uBAEP;+BACQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE9B,MAAMA,UAAA,GAA0BC,IAAA;EAC9B,MAAMC,iBAAA,GAAoB,IAAAC,MAAA,CAAAC,KAAK,EAAC;EAChC,IAAIH,IAAI,CAAC,SAAS,EAAE;IAClBI,OAAA,CAAQC,GAAG,CAAE;;;;;;;;;;;;;;;;;oBAiBGC,MAAA,CAAAC,OAAK,CAACC,IAAI,CACtB,+DACA;KACH;IACDC,OAAA,CAAQC,IAAI,CAAC;EACf;EAEA,MAAMC,GAAA,GAAM,IAAAC,cAAA,CAAAC,aAAa,EAACb,IAAA,CAAKc,CAAC,CAAC,EAAE;EAEnC;EACA,IAAI,CAAC,IAAAC,GAAA,CAAAC,UAAU,EAACL,GAAA,GAAM;IACpB,IAAAM,MAAA,CAAAC,YAAY,EAAE,mDAAkDP,GAAI,EAAC;EACvE;EAEA,MAAMQ,OAAA,GAAyB;IAC7BC,MAAA,EAAQpB,IAAI,CAAC,WAAW,IAAI;IAC5BqB,OAAA,EAASrB,IAAI,CAAC,YAAY;IAC1BsB,MAAA,EAAQtB,IAAI,CAAC,WAAW,GAAG,IAAAuB,KAAA,CAAAC,OAAO,EAACxB,IAAI,CAAC,WAAW,IAAI,IAAAuB,KAAA,CAAAE,IAAI,EAACd,GAAA,EAAK;IACjEe,gBAAA,EAAkBC,OAAA,CAAQ3B,IAAI,CAAC,WAAW;IAC1C4B,gBAAA,EAAkB;IAClBC,SAAA,EAAW;IACXC,WAAA,EAAa;EACf;EAEA,IAAAC,OAAA,CAAAxB,OAAS,EAACI,GAAA,EAAKQ,OAAA,EAASlB,iBAAA,EACrB+B,IAAI,CAAC;IACJ/B,iBAAA,CAAkBgC,IAAI;IACtB,IAAAhB,MAAA,CAAAC,YAAY,EAAE,uCAAsCC,OAAA,CAAQG,MAAO,EAAC,EAAE;EACxE,GACCY,KAAK,CAAEC,GAAA;IACNlC,iBAAA,CAAkBgC,IAAI;IACtB,IAAIE,GAAA,YAAeJ,OAAA,CAAAK,WAAW,IAAID,GAAA,CAAIE,IAAI,KAAK,qBAAqB;MAClEC,IAAA,CAAIC,KAAK,CAACJ,GAAA,CAAIK,OAAO;IACvB,OAAO;MACLpC,OAAA,CAAQmC,KAAK,CAACJ,GAAA;IAChB;IACA1B,OAAA,CAAQC,IAAI,CAAC;EACf;AACJ"},"metadata":{},"sourceType":"script","externalDependencies":[]}