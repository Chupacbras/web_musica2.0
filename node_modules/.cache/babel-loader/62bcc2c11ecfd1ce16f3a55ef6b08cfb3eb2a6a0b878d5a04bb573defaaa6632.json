{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  NoFallbackError: null,\n  WrappedBuildError: null,\n  default: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  NoFallbackError: function () {\n    return NoFallbackError;\n  },\n  WrappedBuildError: function () {\n    return WrappedBuildError;\n  },\n  default: function () {\n    return Server;\n  }\n});\nconst _utils = require(\"../shared/lib/utils\");\nconst _url = require(\"url\");\nconst _formathostname = require(\"./lib/format-hostname\");\nconst _redirectstatus = require(\"../lib/redirect-status\");\nconst _isedgeruntime = require(\"../lib/is-edge-runtime\");\nconst _constants = require(\"../shared/lib/constants\");\nconst _utils1 = require(\"../shared/lib/router/utils\");\nconst _apiutils = require(\"./api-utils\");\nconst _runtimeconfigexternal = require(\"../shared/lib/runtime-config.external\");\nconst _revalidateheaders = require(\"./send-payload/revalidate-headers\");\nconst _utils2 = require(\"./utils\");\nconst _isbot = require(\"../shared/lib/router/utils/is-bot\");\nconst _renderresult = /*#__PURE__*/_interop_require_default(require(\"./render-result\"));\nconst _removetrailingslash = require(\"../shared/lib/router/utils/remove-trailing-slash\");\nconst _denormalizepagepath = require(\"../shared/lib/page-path/denormalize-page-path\");\nconst _log = /*#__PURE__*/_interop_require_wildcard(require(\"../build/output/log\"));\nconst _escapepathdelimiters = /*#__PURE__*/_interop_require_default(require(\"../shared/lib/router/utils/escape-path-delimiters\"));\nconst _serverutils = require(\"./server-utils\");\nconst _iserror = /*#__PURE__*/_interop_require_wildcard(require(\"../lib/is-error\"));\nconst _requestmeta = require(\"./request-meta\");\nconst _removepathprefix = require(\"../shared/lib/router/utils/remove-path-prefix\");\nconst _apppaths = require(\"../shared/lib/router/utils/app-paths\");\nconst _gethostname = require(\"../shared/lib/get-hostname\");\nconst _parseurl = require(\"../shared/lib/router/utils/parse-url\");\nconst _getnextpathnameinfo = require(\"../shared/lib/router/utils/get-next-pathname-info\");\nconst _approuterheaders = require(\"../client/components/app-router-headers\");\nconst _localeroutenormalizer = require(\"./future/normalizers/locale-route-normalizer\");\nconst _defaultroutematchermanager = require(\"./future/route-matcher-managers/default-route-matcher-manager\");\nconst _apppageroutematcherprovider = require(\"./future/route-matcher-providers/app-page-route-matcher-provider\");\nconst _approuteroutematcherprovider = require(\"./future/route-matcher-providers/app-route-route-matcher-provider\");\nconst _pagesapiroutematcherprovider = require(\"./future/route-matcher-providers/pages-api-route-matcher-provider\");\nconst _pagesroutematcherprovider = require(\"./future/route-matcher-providers/pages-route-matcher-provider\");\nconst _servermanifestloader = require(\"./future/route-matcher-providers/helpers/manifest-loaders/server-manifest-loader\");\nconst _tracer = require(\"./lib/trace/tracer\");\nconst _constants1 = require(\"./lib/trace/constants\");\nconst _i18nprovider = require(\"./future/helpers/i18n-provider\");\nconst _sendresponse = require(\"./send-response\");\nconst _routekind = require(\"./future/route-kind\");\nconst _responsehandlers = require(\"./future/route-modules/helpers/response-handlers\");\nconst _utils3 = require(\"./web/utils\");\nconst _constants2 = require(\"../lib/constants\");\nconst _normalizelocalepath = require(\"../shared/lib/i18n/normalize-locale-path\");\nconst _nextrequest = require(\"./web/spec-extension/adapters/next-request\");\nconst _matchnextdatapathname = require(\"./lib/match-next-data-pathname\");\nconst _getroutefromassetpath = /*#__PURE__*/_interop_require_default(require(\"../shared/lib/router/utils/get-route-from-asset-path\"));\nconst _internalutils = require(\"./internal-utils\");\nfunction _interop_require_default(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function (nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interop_require_wildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nclass NoFallbackError extends Error {}\nclass WrappedBuildError extends Error {\n  constructor(innerError) {\n    super();\n    this.innerError = innerError;\n  }\n}\nclass Server {\n  constructor(options) {\n    var _this_nextConfig_i18n, _this_nextConfig_experimental_amp, _this_nextConfig_i18n1;\n    this.prepared = false;\n    this.preparedPromise = null;\n    this.customErrorNo404Warn = (0, _utils.execOnce)(() => {\n      _log.warn(`You have added a custom /_error page without a custom /404 page. This prevents the 404 page from being auto statically optimized.\\nSee here for info: https://nextjs.org/docs/messages/custom-error-no-custom-404`);\n    });\n    const {\n      dir = \".\",\n      quiet = false,\n      conf,\n      dev = false,\n      minimalMode = false,\n      customServer = true,\n      hostname,\n      port\n    } = options;\n    this.serverOptions = options;\n    this.isRenderWorker = options._renderWorker;\n    this.dir = process.env.NEXT_RUNTIME === \"edge\" ? dir : require(\"path\").resolve(dir);\n    this.quiet = quiet;\n    this.loadEnvConfig({\n      dev\n    });\n    // TODO: should conf be normalized to prevent missing\n    // values from causing issues as this can be user provided\n    this.nextConfig = conf;\n    this.hostname = hostname;\n    if (this.hostname) {\n      // we format the hostname so that it can be fetched\n      this.fetchHostname = (0, _formathostname.formatHostname)(this.hostname);\n    }\n    this.port = port;\n    this.distDir = process.env.NEXT_RUNTIME === \"edge\" ? this.nextConfig.distDir : require(\"path\").join(this.dir, this.nextConfig.distDir);\n    this.publicDir = this.getPublicDir();\n    this.hasStaticDir = !minimalMode && this.getHasStaticDir();\n    this.i18nProvider = ((_this_nextConfig_i18n = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n.locales) ? new _i18nprovider.I18NProvider(this.nextConfig.i18n) : undefined;\n    // Configure the locale normalizer, it's used for routes inside `pages/`.\n    this.localeNormalizer = this.i18nProvider ? new _localeroutenormalizer.LocaleRouteNormalizer(this.i18nProvider) : undefined;\n    // Only serverRuntimeConfig needs the default\n    // publicRuntimeConfig gets it's default in client/index.js\n    const {\n      serverRuntimeConfig = {},\n      publicRuntimeConfig,\n      assetPrefix,\n      generateEtags\n    } = this.nextConfig;\n    this.buildId = this.getBuildId();\n    // this is a hack to avoid Webpack knowing this is equal to this.minimalMode\n    // because we replace this.minimalMode to true in production bundles.\n    const minimalModeKey = \"minimalMode\";\n    this[minimalModeKey] = minimalMode || !!process.env.NEXT_PRIVATE_MINIMAL_MODE;\n    this.hasAppDir = this.getHasAppDir(dev);\n    const serverComponents = this.hasAppDir;\n    this.nextFontManifest = this.getNextFontManifest();\n    if (process.env.NEXT_RUNTIME !== \"edge\") {\n      if (this.nextConfig.experimental.deploymentId) {\n        process.env.NEXT_DEPLOYMENT_ID = this.nextConfig.experimental.deploymentId;\n      }\n    }\n    this.renderOpts = {\n      deploymentId: this.nextConfig.experimental.deploymentId,\n      strictNextHead: !!this.nextConfig.experimental.strictNextHead,\n      poweredByHeader: this.nextConfig.poweredByHeader,\n      canonicalBase: this.nextConfig.amp.canonicalBase || \"\",\n      buildId: this.buildId,\n      generateEtags,\n      previewProps: this.getPrerenderManifest().preview,\n      customServer: customServer === true ? true : undefined,\n      ampOptimizerConfig: (_this_nextConfig_experimental_amp = this.nextConfig.experimental.amp) == null ? void 0 : _this_nextConfig_experimental_amp.optimizer,\n      basePath: this.nextConfig.basePath,\n      images: this.nextConfig.images,\n      optimizeFonts: this.nextConfig.optimizeFonts,\n      fontManifest: this.nextConfig.optimizeFonts && !dev ? this.getFontManifest() : undefined,\n      optimizeCss: this.nextConfig.experimental.optimizeCss,\n      nextConfigOutput: this.nextConfig.output,\n      nextScriptWorkers: this.nextConfig.experimental.nextScriptWorkers,\n      disableOptimizedLoading: this.nextConfig.experimental.disableOptimizedLoading,\n      domainLocales: (_this_nextConfig_i18n1 = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n1.domains,\n      distDir: this.distDir,\n      serverComponents,\n      crossOrigin: this.nextConfig.crossOrigin ? this.nextConfig.crossOrigin : undefined,\n      largePageDataBytes: this.nextConfig.experimental.largePageDataBytes,\n      // Only the `publicRuntimeConfig` key is exposed to the client side\n      // It'll be rendered as part of __NEXT_DATA__ on the client side\n      runtimeConfig: Object.keys(publicRuntimeConfig).length > 0 ? publicRuntimeConfig : undefined\n    };\n    // Initialize next/config with the environment configuration\n    (0, _runtimeconfigexternal.setConfig)({\n      serverRuntimeConfig,\n      publicRuntimeConfig\n    });\n    this.pagesManifest = this.getPagesManifest();\n    this.appPathsManifest = this.getAppPathsManifest();\n    this.appPathRoutes = this.getAppPathRoutes();\n    // Configure the routes.\n    this.matchers = this.getRouteMatchers();\n    // Start route compilation. We don't wait for the routes to finish loading\n    // because we use the `waitTillReady` promise below in `handleRequest` to\n    // wait. Also we can't `await` in the constructor.\n    void this.matchers.reload();\n    this.setAssetPrefix(assetPrefix);\n    this.responseCache = this.getResponseCache({\n      dev\n    });\n  }\n  reloadMatchers() {\n    return this.matchers.reload();\n  }\n  async handleNextDataRequest(req, res, parsedUrl) {\n    const middleware = this.getMiddleware();\n    const params = (0, _matchnextdatapathname.matchNextDataPathname)(parsedUrl.pathname);\n    // ignore for non-next data URLs\n    if (!params || !params.path) {\n      return {\n        finished: false\n      };\n    }\n    if (params.path[0] !== this.buildId) {\n      // Ignore if its a middleware request when we aren't on edge.\n      if (process.env.NEXT_RUNTIME !== \"edge\" && req.headers[\"x-middleware-invoke\"]) {\n        return {\n          finished: false\n        };\n      }\n      // Make sure to 404 if the buildId isn't correct\n      await this.render404(req, res, parsedUrl);\n      return {\n        finished: true\n      };\n    }\n    // remove buildId from URL\n    params.path.shift();\n    const lastParam = params.path[params.path.length - 1];\n    // show 404 if it doesn't end with .json\n    if (typeof lastParam !== \"string\" || !lastParam.endsWith(\".json\")) {\n      await this.render404(req, res, parsedUrl);\n      return {\n        finished: true\n      };\n    }\n    // re-create page's pathname\n    let pathname = `/${params.path.join(\"/\")}`;\n    pathname = (0, _getroutefromassetpath.default)(pathname, \".json\");\n    // ensure trailing slash is normalized per config\n    if (middleware) {\n      if (this.nextConfig.trailingSlash && !pathname.endsWith(\"/\")) {\n        pathname += \"/\";\n      }\n      if (!this.nextConfig.trailingSlash && pathname.length > 1 && pathname.endsWith(\"/\")) {\n        pathname = pathname.substring(0, pathname.length - 1);\n      }\n    }\n    if (this.i18nProvider) {\n      var _req_headers_host;\n      // Remove the port from the hostname if present.\n      const hostname = req == null ? void 0 : (_req_headers_host = req.headers.host) == null ? void 0 : _req_headers_host.split(\":\")[0].toLowerCase();\n      const domainLocale = this.i18nProvider.detectDomainLocale(hostname);\n      const defaultLocale = (domainLocale == null ? void 0 : domainLocale.defaultLocale) ?? this.i18nProvider.config.defaultLocale;\n      const localePathResult = this.i18nProvider.analyze(pathname);\n      // If the locale is detected from the path, we need to remove it\n      // from the pathname.\n      if (localePathResult.detectedLocale) {\n        pathname = localePathResult.pathname;\n      }\n      // Update the query with the detected locale and default locale.\n      parsedUrl.query.__nextLocale = localePathResult.detectedLocale;\n      parsedUrl.query.__nextDefaultLocale = defaultLocale;\n      // If the locale is not detected from the path, we need to mark that\n      // it was not inferred from default.\n      if (!localePathResult.detectedLocale) {\n        delete parsedUrl.query.__nextInferredLocaleFromDefault;\n      }\n      // If no locale was detected and we don't have middleware, we need\n      // to render a 404 page.\n      if (!localePathResult.detectedLocale && !middleware) {\n        parsedUrl.query.__nextLocale = defaultLocale;\n        await this.render404(req, res, parsedUrl);\n        return {\n          finished: true\n        };\n      }\n    }\n    parsedUrl.pathname = pathname;\n    parsedUrl.query.__nextDataReq = \"1\";\n    return {\n      finished: false\n    };\n  }\n  async handleNextImageRequest(_req, _res, _parsedUrl) {\n    return {\n      finished: false\n    };\n  }\n  async handleCatchallRenderRequest(_req, _res, _parsedUrl) {\n    return {\n      finished: false\n    };\n  }\n  async handleCatchallMiddlewareRequest(_req, _res, _parsedUrl) {\n    return {\n      finished: false\n    };\n  }\n  getRouteMatchers() {\n    // Create a new manifest loader that get's the manifests from the server.\n    const manifestLoader = new _servermanifestloader.ServerManifestLoader(name => {\n      switch (name) {\n        case _constants.PAGES_MANIFEST:\n          return this.getPagesManifest() ?? null;\n        case _constants.APP_PATHS_MANIFEST:\n          return this.getAppPathsManifest() ?? null;\n        default:\n          return null;\n      }\n    });\n    // Configure the matchers and handlers.\n    const matchers = new _defaultroutematchermanager.DefaultRouteMatcherManager();\n    // Match pages under `pages/`.\n    matchers.push(new _pagesroutematcherprovider.PagesRouteMatcherProvider(this.distDir, manifestLoader, this.i18nProvider));\n    // Match api routes under `pages/api/`.\n    matchers.push(new _pagesapiroutematcherprovider.PagesAPIRouteMatcherProvider(this.distDir, manifestLoader, this.i18nProvider));\n    // If the app directory is enabled, then add the app matchers and handlers.\n    if (this.hasAppDir) {\n      // Match app pages under `app/`.\n      matchers.push(new _apppageroutematcherprovider.AppPageRouteMatcherProvider(this.distDir, manifestLoader));\n      matchers.push(new _approuteroutematcherprovider.AppRouteRouteMatcherProvider(this.distDir, manifestLoader));\n    }\n    return matchers;\n  }\n  logError(err) {\n    if (this.quiet) return;\n    console.error(err);\n  }\n  async handleRequest(req, res, parsedUrl) {\n    await this.prepare();\n    const method = req.method.toUpperCase();\n    return (0, _tracer.getTracer)().trace(_constants1.BaseServerSpan.handleRequest, {\n      spanName: `${method} ${req.url}`,\n      kind: _tracer.SpanKind.SERVER,\n      attributes: {\n        \"http.method\": method,\n        \"http.target\": req.url\n      }\n    }, async span => this.handleRequestImpl(req, res, parsedUrl).finally(() => {\n      if (!span) return;\n      span.setAttributes({\n        \"http.status_code\": res.statusCode\n      });\n      const rootSpanAttributes = (0, _tracer.getTracer)().getRootSpanAttributes();\n      // We were unable to get attributes, probably OTEL is not enabled\n      if (!rootSpanAttributes) return;\n      if (rootSpanAttributes.get(\"next.span_type\") !== _constants1.BaseServerSpan.handleRequest) {\n        console.warn(`Unexpected root span type '${rootSpanAttributes.get(\"next.span_type\")}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n        return;\n      }\n      const route = rootSpanAttributes.get(\"next.route\");\n      if (route) {\n        const newName = `${method} ${route}`;\n        span.setAttributes({\n          \"next.route\": route,\n          \"http.route\": route,\n          \"next.span_name\": newName\n        });\n        span.updateName(newName);\n      }\n    }));\n  }\n  async handleRequestImpl(req, res, parsedUrl) {\n    try {\n      var _this_i18nProvider, _this_nextConfig_i18n;\n      // Wait for the matchers to be ready.\n      await this.matchers.waitTillReady();\n      // ensure cookies set in middleware are merged and\n      // not overridden by API routes/getServerSideProps\n      const _res = res.originalResponse || res;\n      const origSetHeader = _res.setHeader.bind(_res);\n      _res.setHeader = (name, val) => {\n        // When renders /_error after page is failed,\n        // it could attempt to set headers after headers\n        if (_res.headersSent) {\n          return;\n        }\n        if (name.toLowerCase() === \"set-cookie\") {\n          const middlewareValue = (0, _requestmeta.getRequestMeta)(req, \"_nextMiddlewareCookie\");\n          if (!middlewareValue || !Array.isArray(val) || !val.every((item, idx) => item === middlewareValue[idx])) {\n            val = [\n            // TODO: (wyattjoh) find out why this is called multiple times resulting in duplicate cookies being added\n            ...new Set([...(middlewareValue || []), ...(typeof val === \"string\" ? [val] : Array.isArray(val) ? val : [])])];\n          }\n        }\n        return origSetHeader(name, val);\n      };\n      const urlParts = (req.url || \"\").split(\"?\");\n      const urlNoQuery = urlParts[0];\n      // this normalizes repeated slashes in the path e.g. hello//world ->\n      // hello/world or backslashes to forward slashes, this does not\n      // handle trailing slash as that is handled the same as a next.config.js\n      // redirect\n      if (urlNoQuery == null ? void 0 : urlNoQuery.match(/(\\\\|\\/\\/)/)) {\n        const cleanUrl = (0, _utils.normalizeRepeatedSlashes)(req.url);\n        res.redirect(cleanUrl, 308).body(cleanUrl).send();\n        return;\n      }\n      // Parse url if parsedUrl not provided\n      if (!parsedUrl || typeof parsedUrl !== \"object\") {\n        parsedUrl = (0, _url.parse)(req.url, true);\n      }\n      // Parse the querystring ourselves if the user doesn't handle querystring parsing\n      if (typeof parsedUrl.query === \"string\") {\n        parsedUrl.query = Object.fromEntries(new URLSearchParams(parsedUrl.query));\n      }\n      // in minimal mode we detect RSC revalidate if the .rsc\n      // path is requested\n      if (this.minimalMode) {\n        if (req.url.endsWith(\".rsc\")) {\n          parsedUrl.query.__nextDataReq = \"1\";\n        } else if (req.headers[\"x-now-route-matches\"]) {\n          for (const param of _approuterheaders.FLIGHT_PARAMETERS) {\n            delete req.headers[param.toString().toLowerCase()];\n          }\n        }\n      }\n      req.url = (0, _apppaths.normalizeRscPath)(req.url, this.hasAppDir);\n      parsedUrl.pathname = (0, _apppaths.normalizeRscPath)(parsedUrl.pathname || \"\", this.hasAppDir);\n      this.attachRequestMeta(req, parsedUrl);\n      const domainLocale = (_this_i18nProvider = this.i18nProvider) == null ? void 0 : _this_i18nProvider.detectDomainLocale((0, _gethostname.getHostname)(parsedUrl, req.headers));\n      const defaultLocale = (domainLocale == null ? void 0 : domainLocale.defaultLocale) || ((_this_nextConfig_i18n = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n.defaultLocale);\n      parsedUrl.query.__nextDefaultLocale = defaultLocale;\n      const url = (0, _parseurl.parseUrl)(req.url.replace(/^\\/+/, \"/\"));\n      const pathnameInfo = (0, _getnextpathnameinfo.getNextPathnameInfo)(url.pathname, {\n        nextConfig: this.nextConfig,\n        i18nProvider: this.i18nProvider\n      });\n      url.pathname = pathnameInfo.pathname;\n      if (pathnameInfo.basePath) {\n        req.url = (0, _removepathprefix.removePathPrefix)(req.url, this.nextConfig.basePath);\n        (0, _requestmeta.addRequestMeta)(req, \"_nextHadBasePath\", true);\n      }\n      const useMatchedPathHeader = this.minimalMode && typeof req.headers[\"x-matched-path\"] === \"string\";\n      // TODO: merge handling with x-invoke-path\n      if (useMatchedPathHeader) {\n        try {\n          var _this_i18nProvider1, _this_getRoutesManifest;\n          if (this.hasAppDir) {\n            // ensure /index path is normalized for prerender\n            // in minimal mode\n            if (req.url.match(/^\\/index($|\\?)/)) {\n              req.url = req.url.replace(/^\\/index/, \"/\");\n            }\n            parsedUrl.pathname = parsedUrl.pathname === \"/index\" ? \"/\" : parsedUrl.pathname;\n          }\n          // x-matched-path is the source of truth, it tells what page\n          // should be rendered because we don't process rewrites in minimalMode\n          let matchedPath = (0, _apppaths.normalizeRscPath)(new URL(req.headers[\"x-matched-path\"], \"http://localhost\").pathname, this.hasAppDir);\n          let urlPathname = new URL(req.url, \"http://localhost\").pathname;\n          // For ISR  the URL is normalized to the prerenderPath so if\n          // it's a data request the URL path will be the data URL,\n          // basePath is already stripped by this point\n          if (urlPathname.startsWith(`/_next/data/`)) {\n            parsedUrl.query.__nextDataReq = \"1\";\n          }\n          const normalizedUrlPath = this.stripNextDataPath(urlPathname);\n          matchedPath = this.stripNextDataPath(matchedPath, false);\n          // Perform locale detection and normalization.\n          const localeAnalysisResult = (_this_i18nProvider1 = this.i18nProvider) == null ? void 0 : _this_i18nProvider1.analyze(matchedPath, {\n            defaultLocale\n          });\n          // The locale result will be defined even if the locale was not\n          // detected for the request because it will be inferred from the\n          // default locale.\n          if (localeAnalysisResult) {\n            parsedUrl.query.__nextLocale = localeAnalysisResult.detectedLocale;\n            // If the detected locale was inferred from the default locale, we\n            // need to modify the metadata on the request to indicate that.\n            if (localeAnalysisResult.inferredFromDefault) {\n              parsedUrl.query.__nextInferredLocaleFromDefault = \"1\";\n            } else {\n              delete parsedUrl.query.__nextInferredLocaleFromDefault;\n            }\n          }\n          // TODO: check if this is needed any more?\n          matchedPath = (0, _denormalizepagepath.denormalizePagePath)(matchedPath);\n          let srcPathname = matchedPath;\n          const match = await this.matchers.match(matchedPath, {\n            i18n: localeAnalysisResult\n          });\n          // Update the source pathname to the matched page's pathname.\n          if (match) srcPathname = match.definition.pathname;\n          // The page is dynamic if the params are defined.\n          const pageIsDynamic = typeof (match == null ? void 0 : match.params) !== \"undefined\";\n          // The rest of this function can't handle i18n properly, so ensure we\n          // restore the pathname with the locale information stripped from it\n          // now that we're done matching if we're using i18n.\n          if (localeAnalysisResult) {\n            matchedPath = localeAnalysisResult.pathname;\n          }\n          const utils = (0, _serverutils.getUtils)({\n            pageIsDynamic,\n            page: srcPathname,\n            i18n: this.nextConfig.i18n,\n            basePath: this.nextConfig.basePath,\n            rewrites: ((_this_getRoutesManifest = this.getRoutesManifest()) == null ? void 0 : _this_getRoutesManifest.rewrites) || {\n              beforeFiles: [],\n              afterFiles: [],\n              fallback: []\n            },\n            caseSensitive: !!this.nextConfig.experimental.caseSensitiveRoutes\n          });\n          // Ensure parsedUrl.pathname includes locale before processing\n          // rewrites or they won't match correctly.\n          if (defaultLocale && !pathnameInfo.locale) {\n            parsedUrl.pathname = `/${defaultLocale}${parsedUrl.pathname}`;\n          }\n          const pathnameBeforeRewrite = parsedUrl.pathname;\n          const rewriteParams = utils.handleRewrites(req, parsedUrl);\n          const rewriteParamKeys = Object.keys(rewriteParams);\n          const didRewrite = pathnameBeforeRewrite !== parsedUrl.pathname;\n          if (didRewrite) {\n            (0, _requestmeta.addRequestMeta)(req, \"_nextRewroteUrl\", parsedUrl.pathname);\n            (0, _requestmeta.addRequestMeta)(req, \"_nextDidRewrite\", true);\n          }\n          const routeParamKeys = new Set();\n          for (const key of Object.keys(parsedUrl.query)) {\n            const value = parsedUrl.query[key];\n            if (key !== _constants2.NEXT_QUERY_PARAM_PREFIX && key.startsWith(_constants2.NEXT_QUERY_PARAM_PREFIX)) {\n              const normalizedKey = key.substring(_constants2.NEXT_QUERY_PARAM_PREFIX.length);\n              parsedUrl.query[normalizedKey] = value;\n              routeParamKeys.add(normalizedKey);\n              delete parsedUrl.query[key];\n            }\n          }\n          // interpolate dynamic params and normalize URL if needed\n          if (pageIsDynamic) {\n            let params = {};\n            let paramsResult = utils.normalizeDynamicRouteParams(parsedUrl.query);\n            // for prerendered ISR paths we attempt parsing the route\n            // params from the URL directly as route-matches may not\n            // contain the correct values due to the filesystem path\n            // matching before the dynamic route has been matched\n            if (!paramsResult.hasValidParams && pageIsDynamic && !(0, _utils1.isDynamicRoute)(normalizedUrlPath)) {\n              let matcherParams = utils.dynamicRouteMatcher == null ? void 0 : utils.dynamicRouteMatcher.call(utils, normalizedUrlPath);\n              if (matcherParams) {\n                utils.normalizeDynamicRouteParams(matcherParams);\n                Object.assign(paramsResult.params, matcherParams);\n                paramsResult.hasValidParams = true;\n              }\n            }\n            if (paramsResult.hasValidParams) {\n              params = paramsResult.params;\n            }\n            if (req.headers[\"x-now-route-matches\"] && (0, _utils1.isDynamicRoute)(matchedPath) && !paramsResult.hasValidParams) {\n              const opts = {};\n              const routeParams = utils.getParamsFromRouteMatches(req, opts, parsedUrl.query.__nextLocale || \"\");\n              // If this returns a locale, it means that the locale was detected\n              // from the pathname.\n              if (opts.locale) {\n                parsedUrl.query.__nextLocale = opts.locale;\n                // As the locale was parsed from the pathname, we should mark\n                // that the locale was not inferred as the default.\n                delete parsedUrl.query.__nextInferredLocaleFromDefault;\n              }\n              paramsResult = utils.normalizeDynamicRouteParams(routeParams, true);\n              if (paramsResult.hasValidParams) {\n                params = paramsResult.params;\n              }\n            }\n            // handle the actual dynamic route name being requested\n            if (pageIsDynamic && utils.defaultRouteMatches && normalizedUrlPath === srcPathname && !paramsResult.hasValidParams && !utils.normalizeDynamicRouteParams({\n              ...params\n            }, true).hasValidParams) {\n              params = utils.defaultRouteMatches;\n            }\n            if (params) {\n              matchedPath = utils.interpolateDynamicPath(srcPathname, params);\n              req.url = utils.interpolateDynamicPath(req.url, params);\n            }\n          }\n          if (pageIsDynamic || didRewrite) {\n            var _utils_defaultRouteRegex;\n            utils.normalizeVercelUrl(req, true, [...rewriteParamKeys, ...Object.keys(((_utils_defaultRouteRegex = utils.defaultRouteRegex) == null ? void 0 : _utils_defaultRouteRegex.groups) || {})]);\n          }\n          for (const key of routeParamKeys) {\n            delete parsedUrl.query[key];\n          }\n          parsedUrl.pathname = matchedPath;\n          url.pathname = parsedUrl.pathname;\n          const normalizeResult = await this.handleNextDataRequest(req, res, parsedUrl);\n          if (normalizeResult.finished) {\n            return;\n          }\n        } catch (err) {\n          if (err instanceof _utils.DecodeError || err instanceof _utils.NormalizeError) {\n            res.statusCode = 400;\n            return this.renderError(null, req, res, \"/_error\", {});\n          }\n          throw err;\n        }\n      }\n      if (\n      // Edge runtime always has minimal mode enabled.\n      process.env.NEXT_RUNTIME !== \"edge\" && !this.minimalMode && defaultLocale) {\n        const {\n          getLocaleRedirect\n        } = require(\"../shared/lib/i18n/get-locale-redirect\");\n        const redirect = getLocaleRedirect({\n          defaultLocale,\n          domainLocale,\n          headers: req.headers,\n          nextConfig: this.nextConfig,\n          pathLocale: pathnameInfo.locale,\n          urlParsed: {\n            ...url,\n            pathname: pathnameInfo.locale ? `/${pathnameInfo.locale}${url.pathname}` : url.pathname\n          }\n        });\n        if (redirect) {\n          return res.redirect(redirect, _constants.TEMPORARY_REDIRECT_STATUS).body(redirect).send();\n        }\n      }\n      (0, _requestmeta.addRequestMeta)(req, \"__nextIsLocaleDomain\", Boolean(domainLocale));\n      if (pathnameInfo.locale) {\n        req.url = (0, _url.format)(url);\n        (0, _requestmeta.addRequestMeta)(req, \"__nextStrippedLocale\", true);\n      }\n      // If we aren't in minimal mode or there is no locale in the query\n      // string, add the locale to the query string.\n      if (!this.minimalMode || !parsedUrl.query.__nextLocale) {\n        // If the locale is in the pathname, add it to the query string.\n        if (pathnameInfo.locale) {\n          parsedUrl.query.__nextLocale = pathnameInfo.locale;\n        } else if (defaultLocale) {\n          parsedUrl.query.__nextLocale = defaultLocale;\n          parsedUrl.query.__nextInferredLocaleFromDefault = \"1\";\n        }\n      }\n      // set incremental cache to request meta so it can\n      // be passed down for edge functions and the fetch disk\n      // cache can be leveraged locally\n      if (!this.serverOptions.webServerConfig && !(0, _requestmeta.getRequestMeta)(req, \"_nextIncrementalCache\")) {\n        let protocol = \"https:\";\n        try {\n          const parsedFullUrl = new URL((0, _requestmeta.getRequestMeta)(req, \"__NEXT_INIT_URL\") || \"/\", \"http://n\");\n          protocol = parsedFullUrl.protocol;\n        } catch {}\n        const incrementalCache = this.getIncrementalCache({\n          requestHeaders: Object.assign({}, req.headers),\n          requestProtocol: protocol.substring(0, protocol.length - 1)\n        });\n        (0, _requestmeta.addRequestMeta)(req, \"_nextIncrementalCache\", incrementalCache);\n        globalThis.__incrementalCache = incrementalCache;\n      }\n      // when x-invoke-path is specified we can short short circuit resolving\n      // we only honor this header if we are inside of a render worker to\n      // prevent external users coercing the routing path\n      const invokePath = req.headers[\"x-invoke-path\"];\n      const useInvokePath = !useMatchedPathHeader && process.env.NEXT_RUNTIME !== \"edge\" && invokePath;\n      if (useInvokePath) {\n        var _this_nextConfig_i18n1;\n        if (req.headers[\"x-invoke-status\"]) {\n          const invokeQuery = req.headers[\"x-invoke-query\"];\n          if (typeof invokeQuery === \"string\") {\n            Object.assign(parsedUrl.query, JSON.parse(decodeURIComponent(invokeQuery)));\n          }\n          res.statusCode = Number(req.headers[\"x-invoke-status\"]);\n          let err = null;\n          if (typeof req.headers[\"x-invoke-error\"] === \"string\") {\n            const invokeError = JSON.parse(req.headers[\"x-invoke-error\"] || \"{}\");\n            err = new Error(invokeError.message);\n          }\n          return this.renderError(err, req, res, \"/_error\", parsedUrl.query);\n        }\n        const parsedMatchedPath = new URL(invokePath || \"/\", \"http://n\");\n        const invokePathnameInfo = (0, _getnextpathnameinfo.getNextPathnameInfo)(parsedMatchedPath.pathname, {\n          nextConfig: this.nextConfig,\n          parseData: false\n        });\n        if (invokePathnameInfo.locale) {\n          parsedUrl.query.__nextLocale = invokePathnameInfo.locale;\n        }\n        if (parsedUrl.pathname !== parsedMatchedPath.pathname) {\n          parsedUrl.pathname = parsedMatchedPath.pathname;\n          (0, _requestmeta.addRequestMeta)(req, \"_nextRewroteUrl\", invokePathnameInfo.pathname);\n          (0, _requestmeta.addRequestMeta)(req, \"_nextDidRewrite\", true);\n        }\n        const normalizeResult = (0, _normalizelocalepath.normalizeLocalePath)((0, _removepathprefix.removePathPrefix)(parsedUrl.pathname, this.nextConfig.basePath || \"\"), ((_this_nextConfig_i18n1 = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n1.locales) || []);\n        if (normalizeResult.detectedLocale) {\n          parsedUrl.query.__nextLocale = normalizeResult.detectedLocale;\n        }\n        parsedUrl.pathname = normalizeResult.pathname;\n        for (const key of Object.keys(parsedUrl.query)) {\n          if (!key.startsWith(\"__next\") && !key.startsWith(\"_next\")) {\n            delete parsedUrl.query[key];\n          }\n        }\n        const invokeQuery = req.headers[\"x-invoke-query\"];\n        if (typeof invokeQuery === \"string\") {\n          Object.assign(parsedUrl.query, JSON.parse(decodeURIComponent(invokeQuery)));\n        }\n        if (parsedUrl.pathname.startsWith(\"/_next/image\")) {\n          const imageResult = await this.handleNextImageRequest(req, res, parsedUrl);\n          if (imageResult.finished) {\n            return;\n          }\n        }\n        const nextDataResult = await this.handleNextDataRequest(req, res, parsedUrl);\n        if (nextDataResult.finished) {\n          return;\n        }\n        await this.handleCatchallRenderRequest(req, res, parsedUrl);\n        return;\n      }\n      if (process.env.NEXT_RUNTIME !== \"edge\" && req.headers[\"x-middleware-invoke\"]) {\n        const nextDataResult = await this.handleNextDataRequest(req, res, parsedUrl);\n        if (nextDataResult.finished) {\n          return;\n        }\n        const result = await this.handleCatchallMiddlewareRequest(req, res, parsedUrl);\n        if (result.finished) {\n          return;\n        } else {\n          const err = new Error();\n          err.result = {\n            response: new Response(null, {\n              headers: {\n                \"x-middleware-next\": \"1\"\n              }\n            })\n          };\n          err.bubble = true;\n          throw err;\n        }\n      }\n      // ensure we strip the basePath when not using an invoke header\n      if (!(useMatchedPathHeader || useInvokePath) && pathnameInfo.basePath) {\n        parsedUrl.pathname = (0, _removepathprefix.removePathPrefix)(parsedUrl.pathname, pathnameInfo.basePath);\n      }\n      res.statusCode = 200;\n      return await this.run(req, res, parsedUrl);\n    } catch (err) {\n      if (err instanceof NoFallbackError) {\n        throw err;\n      }\n      if (err && typeof err === \"object\" && err.code === \"ERR_INVALID_URL\" || err instanceof _utils.DecodeError || err instanceof _utils.NormalizeError) {\n        res.statusCode = 400;\n        return this.renderError(null, req, res, \"/_error\", {});\n      }\n      if (this.minimalMode || this.renderOpts.dev || err.bubble) {\n        throw err;\n      }\n      this.logError((0, _iserror.getProperError)(err));\n      res.statusCode = 500;\n      res.body(\"Internal Server Error\").send();\n    }\n  }\n  getRequestHandler() {\n    return this.handleRequest.bind(this);\n  }\n  setAssetPrefix(prefix) {\n    this.renderOpts.assetPrefix = prefix ? prefix.replace(/\\/$/, \"\") : \"\";\n  }\n  /**\n  * Runs async initialization of server.\n  * It is idempotent, won't fire underlying initialization more than once.\n  */\n  async prepare() {\n    if (this.prepared) return;\n    if (this.preparedPromise === null) {\n      this.preparedPromise = this.prepareImpl().then(() => {\n        this.prepared = true;\n        this.preparedPromise = null;\n      });\n    }\n    return this.preparedPromise;\n  }\n  async prepareImpl() {}\n  // Backwards compatibility\n  async close() {}\n  getAppPathRoutes() {\n    const appPathRoutes = {};\n    Object.keys(this.appPathsManifest || {}).forEach(entry => {\n      const normalizedPath = (0, _apppaths.normalizeAppPath)(entry);\n      if (!appPathRoutes[normalizedPath]) {\n        appPathRoutes[normalizedPath] = [];\n      }\n      appPathRoutes[normalizedPath].push(entry);\n    });\n    return appPathRoutes;\n  }\n  async run(req, res, parsedUrl) {\n    return (0, _tracer.getTracer)().trace(_constants1.BaseServerSpan.run, async () => this.runImpl(req, res, parsedUrl));\n  }\n  async runImpl(req, res, parsedUrl) {\n    await this.handleCatchallRenderRequest(req, res, parsedUrl);\n  }\n  async pipe(fn, partialContext) {\n    return (0, _tracer.getTracer)().trace(_constants1.BaseServerSpan.pipe, async () => this.pipeImpl(fn, partialContext));\n  }\n  async pipeImpl(fn, partialContext) {\n    const isBotRequest = (0, _isbot.isBot)(partialContext.req.headers[\"user-agent\"] || \"\");\n    const ctx = {\n      ...partialContext,\n      renderOpts: {\n        ...this.renderOpts,\n        supportsDynamicHTML: !isBotRequest,\n        isBot: !!isBotRequest\n      }\n    };\n    const payload = await fn(ctx);\n    if (payload === null) {\n      return;\n    }\n    const {\n      req,\n      res\n    } = ctx;\n    const {\n      body,\n      type,\n      revalidateOptions\n    } = payload;\n    if (!res.sent) {\n      const {\n        generateEtags,\n        poweredByHeader,\n        dev\n      } = this.renderOpts;\n      if (dev) {\n        // In dev, we should not cache pages for any reason.\n        res.setHeader(\"Cache-Control\", \"no-store, must-revalidate\");\n      }\n      return this.sendRenderResult(req, res, {\n        result: body,\n        type,\n        generateEtags,\n        poweredByHeader,\n        options: revalidateOptions\n      });\n    }\n  }\n  async getStaticHTML(fn, partialContext) {\n    const ctx = {\n      ...partialContext,\n      renderOpts: {\n        ...this.renderOpts,\n        supportsDynamicHTML: false\n      }\n    };\n    const payload = await fn(ctx);\n    if (payload === null) {\n      return null;\n    }\n    return payload.body.toUnchunkedString();\n  }\n  async render(req, res, pathname, query = {}, parsedUrl, internalRender = false) {\n    return (0, _tracer.getTracer)().trace(_constants1.BaseServerSpan.render, async () => this.renderImpl(req, res, pathname, query, parsedUrl, internalRender));\n  }\n  async renderImpl(req, res, pathname, query = {}, parsedUrl, internalRender = false) {\n    var _req_url;\n    if (!pathname.startsWith(\"/\")) {\n      console.warn(`Cannot render page with path \"${pathname}\", did you mean \"/${pathname}\"?. See more info here: https://nextjs.org/docs/messages/render-no-starting-slash`);\n    }\n    if (this.renderOpts.customServer && pathname === \"/index\" && !(await this.hasPage(\"/index\"))) {\n      // maintain backwards compatibility for custom server\n      // (see custom-server integration tests)\n      pathname = \"/\";\n    }\n    // we allow custom servers to call render for all URLs\n    // so check if we need to serve a static _next file or not.\n    // we don't modify the URL for _next/data request but still\n    // call render so we special case this to prevent an infinite loop\n    if (!internalRender && !this.minimalMode && !query.__nextDataReq && (((_req_url = req.url) == null ? void 0 : _req_url.match(/^\\/_next\\//)) || this.hasStaticDir && req.url.match(/^\\/static\\//))) {\n      return this.handleRequest(req, res, parsedUrl);\n    }\n    if ((0, _utils2.isBlockedPage)(pathname)) {\n      return this.render404(req, res, parsedUrl);\n    }\n    return this.pipe(ctx => this.renderToResponse(ctx), {\n      req,\n      res,\n      pathname,\n      query\n    });\n  }\n  async getStaticPaths({\n    pathname\n  }) {\n    var _this_getPrerenderManifest_dynamicRoutes_pathname;\n    // Read whether or not fallback should exist from the manifest.\n    const fallbackField = (_this_getPrerenderManifest_dynamicRoutes_pathname = this.getPrerenderManifest().dynamicRoutes[pathname]) == null ? void 0 : _this_getPrerenderManifest_dynamicRoutes_pathname.fallback;\n    return {\n      // `staticPaths` is intentionally set to `undefined` as it should've\n      // been caught when checking disk data.\n      staticPaths: undefined,\n      fallbackMode: typeof fallbackField === \"string\" ? \"static\" : fallbackField === null ? \"blocking\" : fallbackField\n    };\n  }\n  async renderToResponseWithComponents(requestContext, findComponentsResult) {\n    return (0, _tracer.getTracer)().trace(_constants1.BaseServerSpan.renderToResponseWithComponents, async () => this.renderToResponseWithComponentsImpl(requestContext, findComponentsResult));\n  }\n  stripInternalHeaders(req) {\n    // Skip stripping internal headers in test mode while the header stripping\n    // has been explicitly disabled. This allows tests to verify internal\n    // routing behavior.\n    if (process.env.__NEXT_TEST_MODE && process.env.__NEXT_NO_STRIP_INTERNAL_HEADERS === \"1\") {\n      return;\n    }\n    // Strip the internal headers from both the request and the original\n    // request.\n    (0, _internalutils.stripInternalHeaders)(req.headers);\n    if (\"originalRequest\" in req && \"headers\" in req.originalRequest) {\n      (0, _internalutils.stripInternalHeaders)(req.originalRequest.headers);\n    }\n  }\n  async renderToResponseWithComponentsImpl({\n    req,\n    res,\n    pathname,\n    renderOpts: opts\n  }, {\n    components,\n    query\n  }) {\n    var _components_Component, _this_nextConfig_i18n, _this_nextConfig_i18n1;\n    const is404Page =\n    // For edge runtime 404 page, /_not-found needs to be treated as 404 page\n    process.env.NEXT_RUNTIME === \"edge\" && pathname === \"/_not-found\" || pathname === \"/404\";\n    // Strip the internal headers.\n    this.stripInternalHeaders(req);\n    const is500Page = pathname === \"/500\";\n    const isAppPath = components.isAppPath === true;\n    const hasServerProps = !!components.getServerSideProps;\n    let hasStaticPaths = !!components.getStaticPaths;\n    const actionId = req.headers[_approuterheaders.ACTION.toLowerCase()];\n    const contentType = req.headers[\"content-type\"];\n    const isMultipartAction = req.method === \"POST\" && (contentType == null ? void 0 : contentType.startsWith(\"multipart/form-data\"));\n    const isFetchAction = actionId !== undefined && typeof actionId === \"string\" && req.method === \"POST\";\n    const isServerAction = isFetchAction || isMultipartAction;\n    const hasGetInitialProps = !!((_components_Component = components.Component) == null ? void 0 : _components_Component.getInitialProps);\n    let isSSG = !!components.getStaticProps;\n    // Compute the iSSG cache key. We use the rewroteUrl since\n    // pages with fallback: false are allowed to be rewritten to\n    // and we need to look up the path by the rewritten path\n    let urlPathname = (0, _url.parse)(req.url || \"\").pathname || \"/\";\n    let resolvedUrlPathname = (0, _requestmeta.getRequestMeta)(req, \"_nextRewroteUrl\") || urlPathname;\n    let staticPaths;\n    let fallbackMode;\n    let hasFallback = false;\n    const isDynamic = (0, _utils1.isDynamicRoute)(components.page);\n    if (isAppPath && isDynamic) {\n      const pathsResult = await this.getStaticPaths({\n        pathname,\n        page: components.page,\n        isAppPath,\n        requestHeaders: req.headers\n      });\n      staticPaths = pathsResult.staticPaths;\n      fallbackMode = pathsResult.fallbackMode;\n      hasFallback = typeof fallbackMode !== \"undefined\";\n      if (this.nextConfig.output === \"export\") {\n        const page = components.page;\n        if (fallbackMode !== \"static\") {\n          throw new Error(`Page \"${page}\" is missing exported function \"generateStaticParams()\", which is required with \"output: export\" config.`);\n        }\n        const resolvedWithoutSlash = (0, _removetrailingslash.removeTrailingSlash)(resolvedUrlPathname);\n        if (!(staticPaths == null ? void 0 : staticPaths.includes(resolvedWithoutSlash))) {\n          throw new Error(`Page \"${page}\" is missing param \"${resolvedWithoutSlash}\" in \"generateStaticParams()\", which is required with \"output: export\" config.`);\n        }\n      }\n      if (hasFallback) {\n        hasStaticPaths = true;\n      }\n    }\n    if (hasFallback || (staticPaths == null ? void 0 : staticPaths.includes(resolvedUrlPathname)) ||\n    // this signals revalidation in deploy environments\n    // TODO: make this more generic\n    req.headers[\"x-now-route-matches\"]) {\n      isSSG = true;\n    } else if (!this.renderOpts.dev) {\n      const manifest = this.getPrerenderManifest();\n      isSSG = isSSG || !!manifest.routes[pathname === \"/index\" ? \"/\" : pathname];\n    }\n    // Toggle whether or not this is a Data request\n    let isDataReq = !!(query.__nextDataReq || req.headers[\"x-nextjs-data\"] && this.serverOptions.webServerConfig) && (isSSG || hasServerProps);\n    // when we are handling a middleware prefetch and it doesn't\n    // resolve to a static data route we bail early to avoid\n    // unexpected SSR invocations\n    if (!isSSG && req.headers[\"x-middleware-prefetch\"] && !(is404Page || pathname === \"/_error\")) {\n      res.setHeader(\"x-middleware-skip\", \"1\");\n      res.setHeader(\"cache-control\", \"private, no-cache, no-store, max-age=0, must-revalidate\");\n      res.body(\"{}\").send();\n      return null;\n    }\n    delete query.__nextDataReq;\n    // normalize req.url for SSG paths as it is not exposed\n    // to getStaticProps and the asPath should not expose /_next/data\n    if (isSSG && this.minimalMode && req.headers[\"x-matched-path\"] && req.url.startsWith(\"/_next/data\")) {\n      req.url = this.stripNextDataPath(req.url);\n    }\n    if (!!req.headers[\"x-nextjs-data\"] && (!res.statusCode || res.statusCode === 200)) {\n      res.setHeader(\"x-nextjs-matched-path\", `${query.__nextLocale ? `/${query.__nextLocale}` : \"\"}${pathname}`);\n    }\n    // Don't delete headers[RSC] yet, it still needs to be used in renderToHTML later\n    const isFlightRequest = Boolean(req.headers[_approuterheaders.RSC.toLowerCase()]);\n    // For pages we need to ensure the correct Vary header is set too, to avoid\n    // caching issues when navigating between pages and app\n    if (!isAppPath && isFlightRequest) {\n      res.setHeader(\"vary\", _approuterheaders.RSC_VARY_HEADER);\n    }\n    // we need to ensure the status code if /404 is visited directly\n    if (is404Page && !isDataReq && !isFlightRequest) {\n      res.statusCode = 404;\n    }\n    // ensure correct status is set when visiting a status page\n    // directly e.g. /500\n    if (_constants.STATIC_STATUS_PAGES.includes(pathname)) {\n      res.statusCode = parseInt(pathname.slice(1), 10);\n    }\n    // static pages can only respond to GET/HEAD\n    // requests so ensure we respond with 405 for\n    // invalid requests\n    if (!isServerAction && !is404Page && !is500Page && pathname !== \"/_error\" && req.method !== \"HEAD\" && req.method !== \"GET\" && (typeof components.Component === \"string\" || isSSG)) {\n      res.statusCode = 405;\n      res.setHeader(\"Allow\", [\"GET\", \"HEAD\"]);\n      await this.renderError(null, req, res, pathname);\n      return null;\n    }\n    // handle static page\n    if (typeof components.Component === \"string\") {\n      return {\n        type: \"html\",\n        // TODO: Static pages should be serialized as RenderResult\n        body: _renderresult.default.fromStatic(components.Component)\n      };\n    }\n    if (!query.amp) {\n      delete query.amp;\n    }\n    if (opts.supportsDynamicHTML === true) {\n      var _components_Document;\n      const isBotRequest = (0, _isbot.isBot)(req.headers[\"user-agent\"] || \"\");\n      const isSupportedDocument = typeof ((_components_Document = components.Document) == null ? void 0 : _components_Document.getInitialProps) !== \"function\" ||\n      // The built-in `Document` component also supports dynamic HTML for concurrent mode.\n      _constants.NEXT_BUILTIN_DOCUMENT in components.Document;\n      // Disable dynamic HTML in cases that we know it won't be generated,\n      // so that we can continue generating a cache key when possible.\n      // TODO-APP: should the first render for a dynamic app path\n      // be static so we can collect revalidate and populate the\n      // cache if there are no dynamic data requirements\n      opts.supportsDynamicHTML = !isSSG && !isBotRequest && !query.amp && isSupportedDocument;\n      opts.isBot = isBotRequest;\n    }\n    // In development, we always want to generate dynamic HTML.\n    if (!isDataReq && isAppPath && opts.dev && opts.supportsDynamicHTML === false) {\n      opts.supportsDynamicHTML = true;\n    }\n    const defaultLocale = isSSG ? (_this_nextConfig_i18n = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n.defaultLocale : query.__nextDefaultLocale;\n    const locale = query.__nextLocale;\n    const locales = (_this_nextConfig_i18n1 = this.nextConfig.i18n) == null ? void 0 : _this_nextConfig_i18n1.locales;\n    let previewData;\n    let isPreviewMode = false;\n    if (hasServerProps || isSSG) {\n      // For the edge runtime, we don't support preview mode in SSG.\n      if (process.env.NEXT_RUNTIME !== \"edge\") {\n        const {\n          tryGetPreviewData\n        } = require(\"./api-utils/node\");\n        previewData = tryGetPreviewData(req, res, this.renderOpts.previewProps);\n        isPreviewMode = previewData !== false;\n      }\n    }\n    if (isAppPath) {\n      res.setHeader(\"vary\", _approuterheaders.RSC_VARY_HEADER);\n      // We don't clear RSC headers in development since SSG doesn't apply\n      // These headers are cleared for SSG as we need to always generate the\n      // full RSC response for ISR\n      if (!this.renderOpts.dev && !isPreviewMode && isSSG && req.headers[_approuterheaders.RSC.toLowerCase()]) {\n        if (!this.minimalMode) {\n          isDataReq = true;\n        }\n        // strip header so we generate HTML still\n        if (!(0, _isedgeruntime.isEdgeRuntime)(opts.runtime) || this.serverOptions.webServerConfig) {\n          for (const param of _approuterheaders.FLIGHT_PARAMETERS) {\n            delete req.headers[param.toString().toLowerCase()];\n          }\n        }\n      }\n    }\n    let isOnDemandRevalidate = false;\n    let revalidateOnlyGenerated = false;\n    if (isSSG) {\n      ({\n        isOnDemandRevalidate,\n        revalidateOnlyGenerated\n      } = (0, _apiutils.checkIsOnDemandRevalidate)(req, this.renderOpts.previewProps));\n    }\n    if (isSSG && this.minimalMode && req.headers[\"x-matched-path\"]) {\n      // the url value is already correct when the matched-path header is set\n      resolvedUrlPathname = urlPathname;\n    }\n    urlPathname = (0, _removetrailingslash.removeTrailingSlash)(urlPathname);\n    resolvedUrlPathname = (0, _removetrailingslash.removeTrailingSlash)(resolvedUrlPathname);\n    if (this.localeNormalizer) {\n      resolvedUrlPathname = this.localeNormalizer.normalize(resolvedUrlPathname);\n    }\n    const handleRedirect = pageData => {\n      const redirect = {\n        destination: pageData.pageProps.__N_REDIRECT,\n        statusCode: pageData.pageProps.__N_REDIRECT_STATUS,\n        basePath: pageData.pageProps.__N_REDIRECT_BASE_PATH\n      };\n      const statusCode = (0, _redirectstatus.getRedirectStatus)(redirect);\n      const {\n        basePath\n      } = this.nextConfig;\n      if (basePath && redirect.basePath !== false && redirect.destination.startsWith(\"/\")) {\n        redirect.destination = `${basePath}${redirect.destination}`;\n      }\n      if (redirect.destination.startsWith(\"/\")) {\n        redirect.destination = (0, _utils.normalizeRepeatedSlashes)(redirect.destination);\n      }\n      res.redirect(redirect.destination, statusCode).body(redirect.destination).send();\n    };\n    // remove /_next/data prefix from urlPathname so it matches\n    // for direct page visit and /_next/data visit\n    if (isDataReq) {\n      resolvedUrlPathname = this.stripNextDataPath(resolvedUrlPathname);\n      urlPathname = this.stripNextDataPath(urlPathname);\n    }\n    let ssgCacheKey = isPreviewMode || !isSSG || opts.supportsDynamicHTML || isServerAction ? null // Preview mode, on-demand revalidate, server actions, flight request can bypass the cache\n    : `${locale ? `/${locale}` : \"\"}${(pathname === \"/\" || resolvedUrlPathname === \"/\") && locale ? \"\" : resolvedUrlPathname}${query.amp ? \".amp\" : \"\"}`;\n    if ((is404Page || is500Page) && isSSG) {\n      ssgCacheKey = `${locale ? `/${locale}` : \"\"}${pathname}${query.amp ? \".amp\" : \"\"}`;\n    }\n    if (ssgCacheKey) {\n      // we only encode path delimiters for path segments from\n      // getStaticPaths so we need to attempt decoding the URL\n      // to match against and only escape the path delimiters\n      // this allows non-ascii values to be handled e.g. Japanese characters\n      // TODO: investigate adding this handling for non-SSG pages so\n      // non-ascii names work there also\n      ssgCacheKey = ssgCacheKey.split(\"/\").map(seg => {\n        try {\n          seg = (0, _escapepathdelimiters.default)(decodeURIComponent(seg), true);\n        } catch (_) {\n          // An improperly encoded URL was provided\n          throw new _utils.DecodeError(\"failed to decode param\");\n        }\n        return seg;\n      }).join(\"/\");\n      // ensure /index and / is normalized to one key\n      ssgCacheKey = ssgCacheKey === \"/index\" && pathname === \"/\" ? \"/\" : ssgCacheKey;\n    }\n    let protocol = \"https:\";\n    try {\n      const parsedFullUrl = new URL((0, _requestmeta.getRequestMeta)(req, \"__NEXT_INIT_URL\") || \"/\", \"http://n\");\n      protocol = parsedFullUrl.protocol;\n    } catch {}\n    // use existing incrementalCache instance if available\n    const incrementalCache = globalThis.__incrementalCache || this.getIncrementalCache({\n      requestHeaders: Object.assign({}, req.headers),\n      requestProtocol: protocol.substring(0, protocol.length - 1)\n    });\n    const doRender = async () => {\n      var _components_routeModule, _components_routeModule1, _components_routeModule2;\n      // In development, we always want to generate dynamic HTML.\n      const supportsDynamicHTML = !isDataReq && opts.dev || !(isSSG || hasStaticPaths);\n      let headers;\n      const origQuery = (0, _url.parse)(req.url || \"\", true).query;\n      // clear any dynamic route params so they aren't in\n      // the resolvedUrl\n      if (opts.params) {\n        Object.keys(opts.params).forEach(key => {\n          delete origQuery[key];\n        });\n      }\n      const hadTrailingSlash = urlPathname !== \"/\" && this.nextConfig.trailingSlash;\n      const resolvedUrl = (0, _url.format)({\n        pathname: `${resolvedUrlPathname}${hadTrailingSlash ? \"/\" : \"\"}`,\n        // make sure to only add query values from original URL\n        query: origQuery\n      });\n      const renderOpts = {\n        ...components,\n        ...opts,\n        ...(isAppPath ? {\n          incrementalCache,\n          isRevalidate: isSSG,\n          originalPathname: components.ComponentMod.originalPathname,\n          serverActionsBodySizeLimit: this.nextConfig.experimental.serverActionsBodySizeLimit\n        } : {}),\n        isDataReq,\n        resolvedUrl,\n        locale,\n        locales,\n        defaultLocale,\n        // For getServerSideProps and getInitialProps we need to ensure we use the original URL\n        // and not the resolved URL to prevent a hydration mismatch on\n        // asPath\n        resolvedAsPath: hasServerProps || hasGetInitialProps ? (0, _url.format)({\n          // we use the original URL pathname less the _next/data prefix if\n          // present\n          pathname: `${urlPathname}${hadTrailingSlash ? \"/\" : \"\"}`,\n          query: origQuery\n        }) : resolvedUrl,\n        supportsDynamicHTML,\n        isOnDemandRevalidate,\n        isDraftMode: isPreviewMode,\n        isServerAction\n      };\n      // Legacy render methods will return a render result that needs to be\n      // served by the server.\n      let result;\n      if (((_components_routeModule = components.routeModule) == null ? void 0 : _components_routeModule.definition.kind) === _routekind.RouteKind.APP_ROUTE) {\n        const routeModule = components.routeModule;\n        const context = {\n          params: opts.params,\n          prerenderManifest: this.getPrerenderManifest(),\n          staticGenerationContext: {\n            originalPathname: components.ComponentMod.originalPathname,\n            supportsDynamicHTML,\n            incrementalCache,\n            isRevalidate: isSSG\n          }\n        };\n        try {\n          const request = _nextrequest.NextRequestAdapter.fromBaseNextRequest(req, (0, _nextrequest.signalFromNodeResponse)(res.originalResponse));\n          const response = await routeModule.handle(request, context);\n          req.fetchMetrics = context.staticGenerationContext.fetchMetrics;\n          const cacheTags = context.staticGenerationContext.fetchTags;\n          // If the request is for a static response, we can cache it so long\n          // as it's not edge.\n          if (isSSG && process.env.NEXT_RUNTIME !== \"edge\") {\n            var _context_staticGenerationContext_store;\n            const blob = await response.blob();\n            // Copy the headers from the response.\n            headers = (0, _utils3.toNodeOutgoingHttpHeaders)(response.headers);\n            if (cacheTags) {\n              headers[_constants2.NEXT_CACHE_TAGS_HEADER] = cacheTags;\n            }\n            if (!headers[\"content-type\"] && blob.type) {\n              headers[\"content-type\"] = blob.type;\n            }\n            const revalidate = ((_context_staticGenerationContext_store = context.staticGenerationContext.store) == null ? void 0 : _context_staticGenerationContext_store.revalidate) ?? false;\n            // Create the cache entry for the response.\n            const cacheEntry = {\n              value: {\n                kind: \"ROUTE\",\n                status: response.status,\n                body: Buffer.from(await blob.arrayBuffer()),\n                headers\n              },\n              revalidate\n            };\n            return cacheEntry;\n          }\n          // Send the response now that we have copied it into the cache.\n          await (0, _sendresponse.sendResponse)(req, res, response);\n          return null;\n        } catch (err) {\n          // If this is during static generation, throw the error again.\n          if (isSSG) throw err;\n          _log.error(err);\n          // Otherwise, send a 500 response.\n          await (0, _sendresponse.sendResponse)(req, res, (0, _responsehandlers.handleInternalServerErrorResponse)());\n          return null;\n        }\n      } else if (((_components_routeModule1 = components.routeModule) == null ? void 0 : _components_routeModule1.definition.kind) === _routekind.RouteKind.PAGES) {\n        const module1 = components.routeModule;\n        // Due to the way we pass data by mutating `renderOpts`, we can't extend\n        // the object here but only updating its `clientReferenceManifest` and\n        // `nextFontManifest` properties.\n        // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n        renderOpts.nextFontManifest = this.nextFontManifest;\n        renderOpts.clientReferenceManifest = components.clientReferenceManifest;\n        // Call the built-in render method on the module.\n        result = await module1.render(req.originalRequest ?? req, res.originalResponse ?? res, {\n          page: pathname,\n          params: opts.params,\n          query,\n          renderOpts\n        });\n      } else if (((_components_routeModule2 = components.routeModule) == null ? void 0 : _components_routeModule2.definition.kind) === _routekind.RouteKind.APP_PAGE) {\n        const isAppPrefetch = req.headers[_approuterheaders.NEXT_ROUTER_PREFETCH.toLowerCase()];\n        if (isAppPrefetch && ssgCacheKey && process.env.NODE_ENV === \"production\") {\n          try {\n            const prefetchRsc = await this.getPrefetchRsc(ssgCacheKey);\n            if (prefetchRsc) {\n              res.setHeader(\"cache-control\", \"private, no-cache, no-store, max-age=0, must-revalidate\");\n              res.setHeader(\"content-type\", _approuterheaders.RSC_CONTENT_TYPE_HEADER);\n              res.body(prefetchRsc).send();\n              return null;\n            }\n          } catch (_) {\n            // we fallback to invoking the function if prefetch\n            // data is not available\n          }\n        }\n        const module1 = components.routeModule;\n        // Due to the way we pass data by mutating `renderOpts`, we can't extend the\n        // object here but only updating its `nextFontManifest` field.\n        // https://github.com/vercel/next.js/blob/df7cbd904c3bd85f399d1ce90680c0ecf92d2752/packages/next/server/render.tsx#L947-L952\n        renderOpts.nextFontManifest = this.nextFontManifest;\n        // Call the built-in render method on the module.\n        result = await module1.render(req.originalRequest ?? req, res.originalResponse ?? res, {\n          page: is404Page ? \"/404\" : pathname,\n          params: opts.params,\n          query,\n          renderOpts\n        });\n      } else {\n        // If we didn't match a page, we should fallback to using the legacy\n        // render method.\n        result = await this.renderHTML(req, res, pathname, query, renderOpts);\n      }\n      const {\n        metadata\n      } = result;\n      // Add any fetch tags that were on the page to the response headers.\n      const cacheTags = metadata.fetchTags;\n      if (cacheTags) {\n        headers = {\n          [_constants2.NEXT_CACHE_TAGS_HEADER]: cacheTags\n        };\n      }\n      req.fetchMetrics = metadata.fetchMetrics;\n      // we don't throw static to dynamic errors in dev as isSSG\n      // is a best guess in dev since we don't have the prerender pass\n      // to know whether the path is actually static or not\n      if (isAppPath && isSSG && metadata.revalidate === 0 && !this.renderOpts.dev) {\n        const staticBailoutInfo = metadata.staticBailoutInfo || {};\n        const err = new Error(`Page changed from static to dynamic at runtime ${urlPathname}${staticBailoutInfo.description ? `, reason: ${staticBailoutInfo.description}` : ``}` + `\\nsee more here https://nextjs.org/docs/messages/app-static-to-dynamic-error`);\n        if (staticBailoutInfo.stack) {\n          const stack = staticBailoutInfo.stack;\n          err.stack = err.message + stack.substring(stack.indexOf(\"\\n\"));\n        }\n        throw err;\n      }\n      // Based on the metadata, we can determine what kind of cache result we\n      // should return.\n      // Handle `isNotFound`.\n      if (metadata.isNotFound) {\n        return {\n          value: null,\n          revalidate: metadata.revalidate\n        };\n      }\n      // Handle `isRedirect`.\n      if (metadata.isRedirect) {\n        return {\n          value: {\n            kind: \"REDIRECT\",\n            props: metadata.pageData\n          },\n          revalidate: metadata.revalidate\n        };\n      }\n      // Handle `isNull`.\n      if (result.isNull) {\n        return null;\n      }\n      // We now have a valid HTML result that we can return to the user.\n      return {\n        value: {\n          kind: \"PAGE\",\n          html: result,\n          pageData: metadata.pageData,\n          headers,\n          status: isAppPath ? res.statusCode : undefined\n        },\n        revalidate: metadata.revalidate\n      };\n    };\n    const cacheEntry = await this.responseCache.get(ssgCacheKey, async (hasResolved, hadCache) => {\n      const isProduction = !this.renderOpts.dev;\n      const didRespond = hasResolved || res.sent;\n      if (!staticPaths) {\n        ({\n          staticPaths,\n          fallbackMode\n        } = hasStaticPaths ? await this.getStaticPaths({\n          pathname,\n          requestHeaders: req.headers,\n          isAppPath,\n          page: components.page\n        }) : {\n          staticPaths: undefined,\n          fallbackMode: false\n        });\n      }\n      if (fallbackMode === \"static\" && (0, _isbot.isBot)(req.headers[\"user-agent\"] || \"\")) {\n        fallbackMode = \"blocking\";\n      }\n      // skip on-demand revalidate if cache is not present and\n      // revalidate-if-generated is set\n      if (isOnDemandRevalidate && revalidateOnlyGenerated && !hadCache && !this.minimalMode) {\n        await this.render404(req, res);\n        return null;\n      }\n      if ((hadCache == null ? void 0 : hadCache.isStale) === -1) {\n        isOnDemandRevalidate = true;\n      }\n      // only allow on-demand revalidate for fallback: true/blocking\n      // or for prerendered fallback: false paths\n      if (isOnDemandRevalidate && (fallbackMode !== false || hadCache)) {\n        fallbackMode = \"blocking\";\n      }\n      // We use `ssgCacheKey` here as it is normalized to match the encoding\n      // from getStaticPaths along with including the locale.\n      //\n      // We use the `resolvedUrlPathname` for the development case when this\n      // is an app path since it doesn't include locale information.\n      let staticPathKey = ssgCacheKey ?? (opts.dev && isAppPath ? resolvedUrlPathname : null);\n      if (staticPathKey && query.amp) {\n        staticPathKey = staticPathKey.replace(/\\.amp$/, \"\");\n      }\n      const isPageIncludedInStaticPaths = staticPathKey && (staticPaths == null ? void 0 : staticPaths.includes(staticPathKey));\n      // When we did not respond from cache, we need to choose to block on\n      // rendering or return a skeleton.\n      //\n      // - Data requests always block.\n      // - Blocking mode fallback always blocks.\n      // - Preview mode toggles all pages to be resolved in a blocking manner.\n      // - Non-dynamic pages should block (though this is an impossible\n      //   case in production).\n      // - Dynamic pages should return their skeleton if not defined in\n      //   getStaticPaths, then finish the data request on the client-side.\n      //\n      if (process.env.NEXT_RUNTIME !== \"edge\" && !this.minimalMode && fallbackMode !== \"blocking\" && staticPathKey && !didRespond && !isPreviewMode && isDynamic && (isProduction || !staticPaths || !isPageIncludedInStaticPaths)) {\n        if (\n        // In development, fall through to render to handle missing\n        // getStaticPaths.\n        (isProduction || staticPaths && (staticPaths == null ? void 0 : staticPaths.length) > 0) &&\n        // When fallback isn't present, abort this render so we 404\n        fallbackMode !== \"static\") {\n          throw new NoFallbackError();\n        }\n        if (!isDataReq) {\n          // Production already emitted the fallback as static HTML.\n          if (isProduction) {\n            const html = await this.getFallback(locale ? `/${locale}${pathname}` : pathname);\n            return {\n              value: {\n                kind: \"PAGE\",\n                html: _renderresult.default.fromStatic(html),\n                pageData: {}\n              }\n            };\n          } else {\n            query.__nextFallback = \"true\";\n            const result = await doRender();\n            if (!result) {\n              return null;\n            }\n            // Prevent caching this result\n            delete result.revalidate;\n            return result;\n          }\n        }\n      }\n      const result = await doRender();\n      if (!result) {\n        return null;\n      }\n      return {\n        ...result,\n        revalidate: result.revalidate !== undefined ? result.revalidate : /* default to minimum revalidate (this should be an invariant) */1\n      };\n    }, {\n      incrementalCache,\n      isOnDemandRevalidate: isOnDemandRevalidate,\n      isPrefetch: req.headers.purpose === \"prefetch\"\n    });\n    if (!cacheEntry) {\n      if (ssgCacheKey && !(isOnDemandRevalidate && revalidateOnlyGenerated)) {\n        // A cache entry might not be generated if a response is written\n        // in `getInitialProps` or `getServerSideProps`, but those shouldn't\n        // have a cache key. If we do have a cache key but we don't end up\n        // with a cache entry, then either Next.js or the application has a\n        // bug that needs fixing.\n        throw new Error(\"invariant: cache entry required but not generated\");\n      }\n      return null;\n    }\n    if (isSSG && !this.minimalMode) {\n      // set x-nextjs-cache header to match the header\n      // we set for the image-optimizer\n      res.setHeader(\"x-nextjs-cache\", isOnDemandRevalidate ? \"REVALIDATED\" : cacheEntry.isMiss ? \"MISS\" : cacheEntry.isStale ? \"STALE\" : \"HIT\");\n    }\n    const {\n      revalidate,\n      value: cachedData\n    } = cacheEntry;\n    const revalidateOptions = typeof revalidate !== \"undefined\" && (!this.renderOpts.dev || hasServerProps && !isDataReq) ? {\n      // When the page is 404 cache-control should not be added unless\n      // we are rendering the 404 page for notFound: true which should\n      // cache according to revalidate correctly\n      private: isPreviewMode || is404Page && cachedData,\n      stateful: !isSSG,\n      revalidate\n    } : undefined;\n    if (!cachedData) {\n      if (revalidateOptions) {\n        (0, _revalidateheaders.setRevalidateHeaders)(res, revalidateOptions);\n      }\n      if (isDataReq) {\n        res.statusCode = 404;\n        res.body('{\"notFound\":true}').send();\n        return null;\n      } else {\n        if (this.renderOpts.dev) {\n          query.__nextNotFoundSrcPage = pathname;\n        }\n        await this.render404(req, res, {\n          pathname,\n          query\n        }, false);\n        return null;\n      }\n    } else if (cachedData.kind === \"REDIRECT\") {\n      if (revalidateOptions) {\n        (0, _revalidateheaders.setRevalidateHeaders)(res, revalidateOptions);\n      }\n      if (isDataReq) {\n        return {\n          type: \"json\",\n          body: _renderresult.default.fromStatic(\n          // @TODO: Handle flight data.\n          JSON.stringify(cachedData.props)),\n          revalidateOptions\n        };\n      } else {\n        await handleRedirect(cachedData.props);\n        return null;\n      }\n    } else if (cachedData.kind === \"IMAGE\") {\n      throw new Error(\"invariant SSG should not return an image cache value\");\n    } else if (cachedData.kind === \"ROUTE\") {\n      const headers = {\n        ...cachedData.headers\n      };\n      if (!(this.minimalMode && isSSG)) {\n        delete headers[_constants2.NEXT_CACHE_TAGS_HEADER];\n      }\n      await (0, _sendresponse.sendResponse)(req, res, new Response(cachedData.body, {\n        headers: (0, _utils3.fromNodeOutgoingHttpHeaders)(headers),\n        status: cachedData.status || 200\n      }));\n      return null;\n    } else {\n      if (isAppPath) {\n        var _cachedData_headers;\n        if (this.minimalMode && isSSG && ((_cachedData_headers = cachedData.headers) == null ? void 0 : _cachedData_headers[_constants2.NEXT_CACHE_TAGS_HEADER])) {\n          res.setHeader(_constants2.NEXT_CACHE_TAGS_HEADER, cachedData.headers[_constants2.NEXT_CACHE_TAGS_HEADER]);\n        }\n        if (isDataReq && typeof cachedData.pageData !== \"string\") {\n          throw new Error(\"invariant: Expected pageData to be a string for app data request but received \" + typeof cachedData.pageData + \". This is a bug in Next.js.\");\n        }\n        if (cachedData.status) {\n          res.statusCode = cachedData.status;\n        }\n        return {\n          type: isDataReq ? \"rsc\" : \"html\",\n          body: isDataReq ? _renderresult.default.fromStatic(cachedData.pageData) : cachedData.html,\n          revalidateOptions\n        };\n      }\n      return {\n        type: isDataReq ? \"json\" : \"html\",\n        body: isDataReq ? _renderresult.default.fromStatic(JSON.stringify(cachedData.pageData)) : cachedData.html,\n        revalidateOptions\n      };\n    }\n  }\n  stripNextDataPath(path, stripLocale = true) {\n    if (path.includes(this.buildId)) {\n      const splitPath = path.substring(path.indexOf(this.buildId) + this.buildId.length);\n      path = (0, _denormalizepagepath.denormalizePagePath)(splitPath.replace(/\\.json$/, \"\"));\n    }\n    if (this.localeNormalizer && stripLocale) {\n      return this.localeNormalizer.normalize(path);\n    }\n    return path;\n  }\n  // map the route to the actual bundle name\n  getOriginalAppPaths(route) {\n    if (this.hasAppDir) {\n      var _this_appPathRoutes;\n      const originalAppPath = (_this_appPathRoutes = this.appPathRoutes) == null ? void 0 : _this_appPathRoutes[route];\n      if (!originalAppPath) {\n        return null;\n      }\n      return originalAppPath;\n    }\n    return null;\n  }\n  async renderPageComponent(ctx, bubbleNoFallback) {\n    var _this_nextConfig_experimental_sri;\n    const {\n      query,\n      pathname\n    } = ctx;\n    const appPaths = this.getOriginalAppPaths(pathname);\n    const isAppPath = Array.isArray(appPaths);\n    let page = pathname;\n    if (isAppPath) {\n      // the last item in the array is the root page, if there are parallel routes\n      page = appPaths[appPaths.length - 1];\n    }\n    const result = await this.findPageComponents({\n      page,\n      query,\n      params: ctx.renderOpts.params || {},\n      isAppPath,\n      sriEnabled: !!((_this_nextConfig_experimental_sri = this.nextConfig.experimental.sri) == null ? void 0 : _this_nextConfig_experimental_sri.algorithm),\n      appPaths,\n      // Ensuring for loading page component routes is done via the matcher.\n      shouldEnsure: false\n    });\n    if (result) {\n      try {\n        return await this.renderToResponseWithComponents(ctx, result);\n      } catch (err) {\n        const isNoFallbackError = err instanceof NoFallbackError;\n        if (!isNoFallbackError || isNoFallbackError && bubbleNoFallback) {\n          throw err;\n        }\n      }\n    }\n    return false;\n  }\n  async renderToResponse(ctx) {\n    return (0, _tracer.getTracer)().trace(_constants1.BaseServerSpan.renderToResponse, {\n      spanName: `rendering page`,\n      attributes: {\n        \"next.route\": ctx.pathname\n      }\n    }, async () => {\n      return this.renderToResponseImpl(ctx);\n    });\n  }\n  async renderToResponseImpl(ctx) {\n    var _this_i18nProvider;\n    const {\n      res,\n      query,\n      pathname\n    } = ctx;\n    let page = pathname;\n    const bubbleNoFallback = !!query._nextBubbleNoFallback;\n    delete query[_approuterheaders.NEXT_RSC_UNION_QUERY];\n    delete query._nextBubbleNoFallback;\n    const options = {\n      i18n: (_this_i18nProvider = this.i18nProvider) == null ? void 0 : _this_i18nProvider.fromQuery(pathname, query)\n    };\n    try {\n      for await (const match of this.matchers.matchAll(pathname, options)) {\n        // when a specific invoke-output is meant to be matched\n        // ensure a prior dynamic route/page doesn't take priority\n        const invokeOutput = ctx.req.headers[\"x-invoke-output\"];\n        if (!this.minimalMode && this.isRenderWorker && typeof invokeOutput === \"string\" && (0, _utils1.isDynamicRoute)(invokeOutput || \"\") && invokeOutput !== match.definition.pathname) {\n          continue;\n        }\n        const result = await this.renderPageComponent({\n          ...ctx,\n          pathname: match.definition.pathname,\n          renderOpts: {\n            ...ctx.renderOpts,\n            params: match.params\n          }\n        }, bubbleNoFallback);\n        if (result !== false) return result;\n      }\n      // currently edge functions aren't receiving the x-matched-path\n      // header so we need to fallback to matching the current page\n      // when we weren't able to match via dynamic route to handle\n      // the rewrite case\n      // @ts-expect-error extended in child class web-server\n      if (this.serverOptions.webServerConfig) {\n        // @ts-expect-error extended in child class web-server\n        ctx.pathname = this.serverOptions.webServerConfig.page;\n        const result = await this.renderPageComponent(ctx, bubbleNoFallback);\n        if (result !== false) return result;\n      }\n    } catch (error) {\n      const err = (0, _iserror.getProperError)(error);\n      if (error instanceof _utils.MissingStaticPage) {\n        console.error(\"Invariant: failed to load static page\", JSON.stringify({\n          page,\n          url: ctx.req.url,\n          matchedPath: ctx.req.headers[\"x-matched-path\"],\n          initUrl: (0, _requestmeta.getRequestMeta)(ctx.req, \"__NEXT_INIT_URL\"),\n          didRewrite: (0, _requestmeta.getRequestMeta)(ctx.req, \"_nextDidRewrite\"),\n          rewroteUrl: (0, _requestmeta.getRequestMeta)(ctx.req, \"_nextRewroteUrl\")\n        }, null, 2));\n        throw err;\n      }\n      if (err instanceof NoFallbackError && bubbleNoFallback) {\n        throw err;\n      }\n      if (err instanceof _utils.DecodeError || err instanceof _utils.NormalizeError) {\n        res.statusCode = 400;\n        return await this.renderErrorToResponse(ctx, err);\n      }\n      res.statusCode = 500;\n      // if pages/500 is present we still need to trigger\n      // /_error `getInitialProps` to allow reporting error\n      if (await this.hasPage(\"/500\")) {\n        ctx.query.__nextCustomErrorRender = \"1\";\n        await this.renderErrorToResponse(ctx, err);\n        delete ctx.query.__nextCustomErrorRender;\n      }\n      const isWrappedError = err instanceof WrappedBuildError;\n      if (!isWrappedError) {\n        if (this.minimalMode && process.env.NEXT_RUNTIME !== \"edge\" || this.renderOpts.dev) {\n          if ((0, _iserror.default)(err)) err.page = page;\n          throw err;\n        }\n        this.logError((0, _iserror.getProperError)(err));\n      }\n      const response = await this.renderErrorToResponse(ctx, isWrappedError ? err.innerError : err);\n      return response;\n    }\n    if (this.getMiddleware() && !!ctx.req.headers[\"x-nextjs-data\"] && (!res.statusCode || res.statusCode === 200 || res.statusCode === 404)) {\n      res.setHeader(\"x-nextjs-matched-path\", `${query.__nextLocale ? `/${query.__nextLocale}` : \"\"}${pathname}`);\n      res.statusCode = 200;\n      res.setHeader(\"content-type\", \"application/json\");\n      res.body(\"{}\");\n      res.send();\n      return null;\n    }\n    res.statusCode = 404;\n    return this.renderErrorToResponse(ctx, null);\n  }\n  async renderToHTML(req, res, pathname, query = {}) {\n    return (0, _tracer.getTracer)().trace(_constants1.BaseServerSpan.renderToHTML, async () => {\n      return this.renderToHTMLImpl(req, res, pathname, query);\n    });\n  }\n  async renderToHTMLImpl(req, res, pathname, query = {}) {\n    return this.getStaticHTML(ctx => this.renderToResponse(ctx), {\n      req,\n      res,\n      pathname,\n      query\n    });\n  }\n  async renderError(err, req, res, pathname, query = {}, setHeaders = true) {\n    return (0, _tracer.getTracer)().trace(_constants1.BaseServerSpan.renderError, async () => {\n      return this.renderErrorImpl(err, req, res, pathname, query, setHeaders);\n    });\n  }\n  async renderErrorImpl(err, req, res, pathname, query = {}, setHeaders = true) {\n    if (setHeaders) {\n      res.setHeader(\"Cache-Control\", \"no-cache, no-store, max-age=0, must-revalidate\");\n    }\n    return this.pipe(async ctx => {\n      const response = await this.renderErrorToResponse(ctx, err);\n      if (this.minimalMode && res.statusCode === 500) {\n        throw err;\n      }\n      return response;\n    }, {\n      req,\n      res,\n      pathname,\n      query\n    });\n  }\n  async renderErrorToResponse(ctx, err) {\n    return (0, _tracer.getTracer)().trace(_constants1.BaseServerSpan.renderErrorToResponse, async () => {\n      return this.renderErrorToResponseImpl(ctx, err);\n    });\n  }\n  async renderErrorToResponseImpl(ctx, err) {\n    // Short-circuit favicon.ico in development to avoid compiling 404 page when the app has no favicon.ico.\n    // Since favicon.ico is automatically requested by the browser.\n    if (this.renderOpts.dev && ctx.pathname === \"/favicon.ico\") {\n      return {\n        type: \"html\",\n        body: new _renderresult.default(\"\")\n      };\n    }\n    const {\n      res,\n      query\n    } = ctx;\n    try {\n      let result = null;\n      const is404 = res.statusCode === 404;\n      let using404Page = false;\n      if (is404) {\n        if (this.hasAppDir) {\n          // Use the not-found entry in app directory\n          result = await this.findPageComponents({\n            page: this.renderOpts.dev ? \"/not-found\" : \"/_not-found\",\n            query,\n            params: {},\n            isAppPath: true,\n            shouldEnsure: true\n          });\n          using404Page = result !== null;\n        }\n        if (!result && (await this.hasPage(\"/404\"))) {\n          result = await this.findPageComponents({\n            page: \"/404\",\n            query,\n            params: {},\n            isAppPath: false,\n            // Ensuring can't be done here because you never \"match\" a 404 route.\n            shouldEnsure: true\n          });\n          using404Page = result !== null;\n        }\n      }\n      let statusPage = `/${res.statusCode}`;\n      if (!ctx.query.__nextCustomErrorRender && !result && _constants.STATIC_STATUS_PAGES.includes(statusPage)) {\n        // skip ensuring /500 in dev mode as it isn't used and the\n        // dev overlay is used instead\n        if (statusPage !== \"/500\" || !this.renderOpts.dev) {\n          result = await this.findPageComponents({\n            page: statusPage,\n            query,\n            params: {},\n            isAppPath: false,\n            // Ensuring can't be done here because you never \"match\" a 500\n            // route.\n            shouldEnsure: true\n          });\n        }\n      }\n      if (!result) {\n        result = await this.findPageComponents({\n          page: \"/_error\",\n          query,\n          params: {},\n          isAppPath: false,\n          // Ensuring can't be done here because you never \"match\" an error\n          // route.\n          shouldEnsure: true\n        });\n        statusPage = \"/_error\";\n      }\n      if (process.env.NODE_ENV !== \"production\" && !using404Page && (await this.hasPage(\"/_error\")) && !(await this.hasPage(\"/404\"))) {\n        this.customErrorNo404Warn();\n      }\n      if (!result) {\n        // this can occur when a project directory has been moved/deleted\n        // which is handled in the parent process in development\n        if (this.renderOpts.dev) {\n          return {\n            type: \"html\",\n            // wait for dev-server to restart before refreshing\n            body: _renderresult.default.fromStatic(`\n              <pre>missing required error components, refreshing...</pre>\n              <script>\n                async function check() {\n                  const res = await fetch(location.href).catch(() => ({}))\n\n                  if (res.status === 200) {\n                    location.reload()\n                  } else {\n                    setTimeout(check, 1000)\n                  }\n                }\n                check()\n              </script>`)\n          };\n        }\n        throw new WrappedBuildError(new Error(\"missing required error components\"));\n      }\n      // If the page has a route module, use it for the new match. If it doesn't\n      // have a route module, remove the match.\n      if (result.components.routeModule) {\n        (0, _requestmeta.addRequestMeta)(ctx.req, \"_nextMatch\", {\n          definition: result.components.routeModule.definition,\n          params: undefined\n        });\n      } else {\n        (0, _requestmeta.removeRequestMeta)(ctx.req, \"_nextMatch\");\n      }\n      try {\n        return await this.renderToResponseWithComponents({\n          ...ctx,\n          pathname: statusPage,\n          renderOpts: {\n            ...ctx.renderOpts,\n            err\n          }\n        }, result);\n      } catch (maybeFallbackError) {\n        if (maybeFallbackError instanceof NoFallbackError) {\n          throw new Error(\"invariant: failed to render error page\");\n        }\n        throw maybeFallbackError;\n      }\n    } catch (error) {\n      const renderToHtmlError = (0, _iserror.getProperError)(error);\n      const isWrappedError = renderToHtmlError instanceof WrappedBuildError;\n      if (!isWrappedError) {\n        this.logError(renderToHtmlError);\n      }\n      res.statusCode = 500;\n      const fallbackComponents = await this.getFallbackErrorComponents();\n      if (fallbackComponents) {\n        // There was an error, so use it's definition from the route module\n        // to add the match to the request.\n        (0, _requestmeta.addRequestMeta)(ctx.req, \"_nextMatch\", {\n          definition: fallbackComponents.routeModule.definition,\n          params: undefined\n        });\n        return this.renderToResponseWithComponents({\n          ...ctx,\n          pathname: \"/_error\",\n          renderOpts: {\n            ...ctx.renderOpts,\n            // We render `renderToHtmlError` here because `err` is\n            // already captured in the stacktrace.\n            err: isWrappedError ? renderToHtmlError.innerError : renderToHtmlError\n          }\n        }, {\n          query,\n          components: fallbackComponents\n        });\n      }\n      return {\n        type: \"html\",\n        body: _renderresult.default.fromStatic(\"Internal Server Error\")\n      };\n    }\n  }\n  async renderErrorToHTML(err, req, res, pathname, query = {}) {\n    return this.getStaticHTML(ctx => this.renderErrorToResponse(ctx, err), {\n      req,\n      res,\n      pathname,\n      query\n    });\n  }\n  async render404(req, res, parsedUrl, setHeaders = true) {\n    const {\n      pathname,\n      query\n    } = parsedUrl ? parsedUrl : (0, _url.parse)(req.url, true);\n    if (this.nextConfig.i18n) {\n      query.__nextLocale ||= this.nextConfig.i18n.defaultLocale;\n      query.__nextDefaultLocale ||= this.nextConfig.i18n.defaultLocale;\n    }\n    res.statusCode = 404;\n    return this.renderError(null, req, res, pathname, query, setHeaders);\n  }\n}","map":{"version":3,"names":["NoFallbackError","WrappedBuildError","default","Server","Error","constructor","innerError","options","_this_nextConfig_i18n","_this_nextConfig_experimental_amp","_this_nextConfig_i18n1","prepared","preparedPromise","customErrorNo404Warn","_utils","execOnce","_log","warn","dir","quiet","conf","dev","minimalMode","customServer","hostname","port","serverOptions","isRenderWorker","_renderWorker","process","env","NEXT_RUNTIME","require","resolve","loadEnvConfig","nextConfig","fetchHostname","_formathostname","formatHostname","distDir","join","publicDir","getPublicDir","hasStaticDir","getHasStaticDir","i18nProvider","i18n","locales","_i18nprovider","I18NProvider","undefined","localeNormalizer","_localeroutenormalizer","LocaleRouteNormalizer","serverRuntimeConfig","publicRuntimeConfig","assetPrefix","generateEtags","buildId","getBuildId","minimalModeKey","NEXT_PRIVATE_MINIMAL_MODE","hasAppDir","getHasAppDir","serverComponents","nextFontManifest","getNextFontManifest","experimental","deploymentId","NEXT_DEPLOYMENT_ID","renderOpts","strictNextHead","poweredByHeader","canonicalBase","amp","previewProps","getPrerenderManifest","preview","ampOptimizerConfig","optimizer","basePath","images","optimizeFonts","fontManifest","getFontManifest","optimizeCss","nextConfigOutput","output","nextScriptWorkers","disableOptimizedLoading","domainLocales","domains","crossOrigin","largePageDataBytes","runtimeConfig","Object","keys","length","_runtimeconfigexternal","setConfig","pagesManifest","getPagesManifest","appPathsManifest","getAppPathsManifest","appPathRoutes","getAppPathRoutes","matchers","getRouteMatchers","reload","setAssetPrefix","responseCache","getResponseCache","reloadMatchers","handleNextDataRequest","req","res","parsedUrl","middleware","getMiddleware","params","_matchnextdatapathname","matchNextDataPathname","pathname","path","finished","headers","render404","shift","lastParam","endsWith","_getroutefromassetpath","trailingSlash","substring","_req_headers_host","host","split","toLowerCase","domainLocale","detectDomainLocale","defaultLocale","config","localePathResult","analyze","detectedLocale","query","__nextLocale","__nextDefaultLocale","__nextInferredLocaleFromDefault","__nextDataReq","handleNextImageRequest","_req","_res","_parsedUrl","handleCatchallRenderRequest","handleCatchallMiddlewareRequest","manifestLoader","_servermanifestloader","ServerManifestLoader","name","_constants","PAGES_MANIFEST","APP_PATHS_MANIFEST","_defaultroutematchermanager","DefaultRouteMatcherManager","push","_pagesroutematcherprovider","PagesRouteMatcherProvider","_pagesapiroutematcherprovider","PagesAPIRouteMatcherProvider","_apppageroutematcherprovider","AppPageRouteMatcherProvider","_approuteroutematcherprovider","AppRouteRouteMatcherProvider","logError","err","console","error","handleRequest","prepare","method","toUpperCase","_tracer","getTracer","trace","_constants1","BaseServerSpan","spanName","url","kind","SpanKind","SERVER","attributes","span","handleRequestImpl","finally","setAttributes","statusCode","rootSpanAttributes","getRootSpanAttributes","get","route","newName","updateName","_this_i18nProvider","waitTillReady","originalResponse","origSetHeader","setHeader","bind","val","headersSent","middlewareValue","_requestmeta","getRequestMeta","Array","isArray","every","item","idx","Set","urlParts","urlNoQuery","match","cleanUrl","normalizeRepeatedSlashes","redirect","body","send","_url","parse","fromEntries","URLSearchParams","param","_approuterheaders","FLIGHT_PARAMETERS","toString","_apppaths","normalizeRscPath","attachRequestMeta","_gethostname","getHostname","_parseurl","parseUrl","replace","pathnameInfo","_getnextpathnameinfo","getNextPathnameInfo","_removepathprefix","removePathPrefix","addRequestMeta","useMatchedPathHeader","_this_i18nProvider1","_this_getRoutesManifest","matchedPath","URL","urlPathname","startsWith","normalizedUrlPath","stripNextDataPath","localeAnalysisResult","inferredFromDefault","_denormalizepagepath","denormalizePagePath","srcPathname","definition","pageIsDynamic","utils","_serverutils","getUtils","page","rewrites","getRoutesManifest","beforeFiles","afterFiles","fallback","caseSensitive","caseSensitiveRoutes","locale","pathnameBeforeRewrite","rewriteParams","handleRewrites","rewriteParamKeys","didRewrite","routeParamKeys","key","value","_constants2","NEXT_QUERY_PARAM_PREFIX","normalizedKey","add","paramsResult","normalizeDynamicRouteParams","hasValidParams","_utils1","isDynamicRoute","matcherParams","dynamicRouteMatcher","call","assign","opts","routeParams","getParamsFromRouteMatches","defaultRouteMatches","interpolateDynamicPath","_utils_defaultRouteRegex","normalizeVercelUrl","defaultRouteRegex","groups","normalizeResult","DecodeError","NormalizeError","renderError","getLocaleRedirect","pathLocale","urlParsed","TEMPORARY_REDIRECT_STATUS","Boolean","format","webServerConfig","protocol","parsedFullUrl","incrementalCache","getIncrementalCache","requestHeaders","requestProtocol","globalThis","__incrementalCache","invokePath","useInvokePath","invokeQuery","JSON","decodeURIComponent","Number","invokeError","message","parsedMatchedPath","invokePathnameInfo","parseData","_normalizelocalepath","normalizeLocalePath","imageResult","nextDataResult","result","response","Response","bubble","run","code","_iserror","getProperError","getRequestHandler","prefix","prepareImpl","then","close","forEach","entry","normalizedPath","normalizeAppPath","runImpl","pipe","fn","partialContext","pipeImpl","isBotRequest","_isbot","isBot","ctx","supportsDynamicHTML","payload","type","revalidateOptions","sent","sendRenderResult","getStaticHTML","toUnchunkedString","render","internalRender","renderImpl","_req_url","hasPage","_utils2","isBlockedPage","renderToResponse","getStaticPaths","_this_getPrerenderManifest_dynamicRoutes_pathname","fallbackField","dynamicRoutes","staticPaths","fallbackMode","renderToResponseWithComponents","requestContext","findComponentsResult","renderToResponseWithComponentsImpl","stripInternalHeaders","__NEXT_TEST_MODE","__NEXT_NO_STRIP_INTERNAL_HEADERS","_internalutils","originalRequest","components","_components_Component","is404Page","is500Page","isAppPath","hasServerProps","getServerSideProps","hasStaticPaths","actionId","ACTION","contentType","isMultipartAction","isFetchAction","isServerAction","hasGetInitialProps","Component","getInitialProps","isSSG","getStaticProps","resolvedUrlPathname","hasFallback","isDynamic","pathsResult","resolvedWithoutSlash","_removetrailingslash","removeTrailingSlash","includes","manifest","routes","isDataReq","isFlightRequest","RSC","RSC_VARY_HEADER","STATIC_STATUS_PAGES","parseInt","slice","_renderresult","fromStatic","_components_Document","isSupportedDocument","Document","NEXT_BUILTIN_DOCUMENT","previewData","isPreviewMode","tryGetPreviewData","_isedgeruntime","isEdgeRuntime","runtime","isOnDemandRevalidate","revalidateOnlyGenerated","_apiutils","checkIsOnDemandRevalidate","normalize","handleRedirect","pageData","destination","pageProps","__N_REDIRECT","__N_REDIRECT_STATUS","__N_REDIRECT_BASE_PATH","_redirectstatus","getRedirectStatus","ssgCacheKey","map","seg","_escapepathdelimiters","_","doRender","_components_routeModule","_components_routeModule1","_components_routeModule2","origQuery","hadTrailingSlash","resolvedUrl","isRevalidate","originalPathname","ComponentMod","serverActionsBodySizeLimit","resolvedAsPath","isDraftMode","routeModule","_routekind","RouteKind","APP_ROUTE","context","prerenderManifest","staticGenerationContext","request","_nextrequest","NextRequestAdapter","fromBaseNextRequest","signalFromNodeResponse","handle","fetchMetrics","cacheTags","fetchTags","_context_staticGenerationContext_store","blob","_utils3","toNodeOutgoingHttpHeaders","NEXT_CACHE_TAGS_HEADER","revalidate","store","cacheEntry","status","Buffer","from","arrayBuffer","_sendresponse","sendResponse","_responsehandlers","handleInternalServerErrorResponse","PAGES","module1","clientReferenceManifest","APP_PAGE","isAppPrefetch","NEXT_ROUTER_PREFETCH","NODE_ENV","prefetchRsc","getPrefetchRsc","RSC_CONTENT_TYPE_HEADER","renderHTML","metadata","staticBailoutInfo","description","stack","indexOf","isNotFound","isRedirect","props","isNull","html","hasResolved","hadCache","isProduction","didRespond","isStale","staticPathKey","isPageIncludedInStaticPaths","getFallback","__nextFallback","isPrefetch","purpose","isMiss","cachedData","private","stateful","_revalidateheaders","setRevalidateHeaders","__nextNotFoundSrcPage","stringify","fromNodeOutgoingHttpHeaders","_cachedData_headers","stripLocale","splitPath","getOriginalAppPaths","_this_appPathRoutes","originalAppPath","renderPageComponent","bubbleNoFallback","_this_nextConfig_experimental_sri","appPaths","findPageComponents","sriEnabled","sri","algorithm","shouldEnsure","isNoFallbackError","renderToResponseImpl","_nextBubbleNoFallback","NEXT_RSC_UNION_QUERY","fromQuery","matchAll","invokeOutput","MissingStaticPage","initUrl","rewroteUrl","renderErrorToResponse","__nextCustomErrorRender","isWrappedError","renderToHTML","renderToHTMLImpl","setHeaders","renderErrorImpl","renderErrorToResponseImpl","is404","using404Page","statusPage","removeRequestMeta","maybeFallbackError","renderToHtmlError","fallbackComponents","getFallbackErrorComponents","renderErrorToHTML"],"sources":["../../src/server/base-server.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}