{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function () {\n    return _default;\n  }\n});\nconst _icssutils = require(\"next/dist/compiled/icss-utils\");\nconst _utils = require(\"../utils\");\nconst plugin = (options = {}) => {\n  return {\n    postcssPlugin: \"postcss-icss-parser\",\n    async OnceExit(root) {\n      const importReplacements = Object.create(null);\n      const {\n        icssImports,\n        icssExports\n      } = (0, _icssutils.extractICSS)(root);\n      const imports = new Map();\n      const tasks = [];\n      // eslint-disable-next-line guard-for-in\n      for (const url in icssImports) {\n        const tokens = icssImports[url];\n        if (Object.keys(tokens).length === 0) {\n          continue;\n        }\n        let normalizedUrl = url;\n        let prefix = \"\";\n        const queryParts = normalizedUrl.split(\"!\");\n        if (queryParts.length > 1) {\n          normalizedUrl = queryParts.pop();\n          prefix = queryParts.join(\"!\");\n        }\n        const request = (0, _utils.requestify)((0, _utils.normalizeUrl)(normalizedUrl, true), options.rootContext);\n        const doResolve = async () => {\n          const {\n            resolver,\n            context\n          } = options;\n          const resolvedUrl = await (0, _utils.resolveRequests)(resolver, context, [...new Set([normalizedUrl, request])]);\n          if (!resolvedUrl) {\n            return;\n          }\n          // eslint-disable-next-line consistent-return\n          return {\n            url: resolvedUrl,\n            prefix,\n            tokens\n          };\n        };\n        tasks.push(doResolve());\n      }\n      const results = await Promise.all(tasks);\n      for (let index = 0; index <= results.length - 1; index++) {\n        const item = results[index];\n        if (!item) {\n          continue;\n        }\n        const newUrl = item.prefix ? `${item.prefix}!${item.url}` : item.url;\n        const importKey = newUrl;\n        let importName = imports.get(importKey);\n        if (!importName) {\n          importName = `___CSS_LOADER_ICSS_IMPORT_${imports.size}___`;\n          imports.set(importKey, importName);\n          options.imports.push({\n            type: \"icss_import\",\n            importName,\n            url: options.urlHandler(newUrl),\n            icss: true,\n            index\n          });\n          options.api.push({\n            importName,\n            dedupe: true,\n            index\n          });\n        }\n        for (const [replacementIndex, token] of Object.keys(item.tokens).entries()) {\n          const replacementName = `___CSS_LOADER_ICSS_IMPORT_${index}_REPLACEMENT_${replacementIndex}___`;\n          const localName = item.tokens[token];\n          importReplacements[token] = replacementName;\n          options.replacements.push({\n            replacementName,\n            importName,\n            localName\n          });\n        }\n      }\n      if (Object.keys(importReplacements).length > 0) {\n        (0, _icssutils.replaceSymbols)(root, importReplacements);\n      }\n      for (const name of Object.keys(icssExports)) {\n        const value = (0, _icssutils.replaceValueSymbols)(icssExports[name], importReplacements);\n        options.exports.push({\n          name,\n          value\n        });\n      }\n    }\n  };\n};\nplugin.postcss = true;\nconst _default = plugin;","map":{"version":3,"names":["_default","plugin","options","postcssPlugin","OnceExit","root","importReplacements","Object","create","icssImports","icssExports","_icssutils","extractICSS","imports","Map","tasks","url","tokens","keys","length","normalizedUrl","prefix","queryParts","split","pop","join","request","_utils","requestify","normalizeUrl","rootContext","doResolve","resolver","context","resolvedUrl","resolveRequests","Set","push","results","Promise","all","index","item","newUrl","importKey","importName","get","size","set","type","urlHandler","icss","api","dedupe","replacementIndex","token","entries","replacementName","localName","replacements","replaceSymbols","name","value","replaceValueSymbols","exports","postcss"],"sources":["../../../../../../../src/build/webpack/loaders/css-loader/src/plugins/postcss-icss-parser.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}