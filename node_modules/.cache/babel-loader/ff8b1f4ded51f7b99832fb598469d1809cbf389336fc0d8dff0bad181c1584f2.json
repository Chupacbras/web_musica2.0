{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"DraftModeProvider\", {\n  enumerable: true,\n  get: function () {\n    return DraftModeProvider;\n  }\n});\nconst _apiutils = require(\"../api-utils\");\nclass DraftModeProvider {\n  constructor(previewProps, req, cookies, mutableCookies) {\n    var _cookies_get;\n    // The logic for draftMode() is very similar to tryGetPreviewData()\n    // but Draft Mode does not have any data associated with it.\n    const isOnDemandRevalidate = previewProps && (0, _apiutils.checkIsOnDemandRevalidate)(req, previewProps).isOnDemandRevalidate;\n    const cookieValue = (_cookies_get = cookies.get(_apiutils.COOKIE_NAME_PRERENDER_BYPASS)) == null ? void 0 : _cookies_get.value;\n    this.isEnabled = Boolean(!isOnDemandRevalidate && cookieValue && previewProps && cookieValue === previewProps.previewModeId);\n    this._previewModeId = previewProps == null ? void 0 : previewProps.previewModeId;\n    this._mutableCookies = mutableCookies;\n  }\n  enable() {\n    if (!this._previewModeId) {\n      throw new Error(\"Invariant: previewProps missing previewModeId this should never happen\");\n    }\n    this._mutableCookies.set({\n      name: _apiutils.COOKIE_NAME_PRERENDER_BYPASS,\n      value: this._previewModeId,\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== \"development\" ? \"none\" : \"lax\",\n      secure: process.env.NODE_ENV !== \"development\",\n      path: \"/\"\n    });\n  }\n  disable() {\n    // To delete a cookie, set `expires` to a date in the past:\n    // https://tools.ietf.org/html/rfc6265#section-4.1.1\n    // `Max-Age: 0` is not valid, thus ignored, and the cookie is persisted.\n    this._mutableCookies.set({\n      name: _apiutils.COOKIE_NAME_PRERENDER_BYPASS,\n      value: \"\",\n      httpOnly: true,\n      sameSite: process.env.NODE_ENV !== \"development\" ? \"none\" : \"lax\",\n      secure: process.env.NODE_ENV !== \"development\",\n      path: \"/\",\n      expires: new Date(0)\n    });\n  }\n}","map":{"version":3,"names":["DraftModeProvider","constructor","previewProps","req","cookies","mutableCookies","_cookies_get","isOnDemandRevalidate","_apiutils","checkIsOnDemandRevalidate","cookieValue","get","COOKIE_NAME_PRERENDER_BYPASS","value","isEnabled","Boolean","previewModeId","_previewModeId","_mutableCookies","enable","Error","set","name","httpOnly","sameSite","process","env","NODE_ENV","secure","path","disable","expires","Date"],"sources":["../../../src/server/async-storage/draft-mode-provider.ts"],"sourcesContent":[null],"mappings":";;;;;+BAYa;;;WAAAA,iBAAA;;;0BAFN;AAEA,MAAMA,iBAAA;EAaXC,YACEC,YAA2C,EAC3CC,GAA6D,EAC7DC,OAA+B,EAC/BC,cAA+B,EAC/B;QAOoBC,YAAA;IANpB;IACA;IACA,MAAMC,oBAAA,GACJL,YAAA,IACA,IAAAM,SAAA,CAAAC,yBAAyB,EAACN,GAAA,EAAKD,YAAA,EAAcK,oBAAoB;IAEnE,MAAMG,WAAA,IAAcJ,YAAA,GAAAF,OAAA,CAAQO,GAAG,CAACH,SAAA,CAAAI,4BAA4B,sBAAxCN,YAAA,CAA2CO,KAAK;IAEpE,IAAI,CAACC,SAAS,GAAGC,OAAA,CACf,CAACR,oBAAA,IACCG,WAAA,IACAR,YAAA,IACAQ,WAAA,KAAgBR,YAAA,CAAac,aAAa;IAG9C,IAAI,CAACC,cAAc,GAAGf,YAAA,oBAAAA,YAAA,CAAcc,aAAa;IACjD,IAAI,CAACE,eAAe,GAAGb,cAAA;EACzB;EAEAc,OAAA,EAAS;IACP,IAAI,CAAC,IAAI,CAACF,cAAc,EAAE;MACxB,MAAM,IAAIG,KAAA,CACR;IAEJ;IAEA,IAAI,CAACF,eAAe,CAACG,GAAG,CAAC;MACvBC,IAAA,EAAMd,SAAA,CAAAI,4BAA4B;MAClCC,KAAA,EAAO,IAAI,CAACI,cAAc;MAC1BM,QAAA,EAAU;MACVC,QAAA,EAAUC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,gBAAgB,SAAS;MAC5DC,MAAA,EAAQH,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK;MACjCE,IAAA,EAAM;IACR;EACF;EAEAC,QAAA,EAAU;IACR;IACA;IACA;IACA,IAAI,CAACZ,eAAe,CAACG,GAAG,CAAC;MACvBC,IAAA,EAAMd,SAAA,CAAAI,4BAA4B;MAClCC,KAAA,EAAO;MACPU,QAAA,EAAU;MACVC,QAAA,EAAUC,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK,gBAAgB,SAAS;MAC5DC,MAAA,EAAQH,OAAA,CAAQC,GAAG,CAACC,QAAQ,KAAK;MACjCE,IAAA,EAAM;MACNE,OAAA,EAAS,IAAIC,IAAA,CAAK;IACpB;EACF;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}