{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"hasNecessaryDependencies\", {\n  enumerable: true,\n  get: function () {\n    return hasNecessaryDependencies;\n  }\n});\nconst _fs = require(\"fs\");\nconst _fileexists = require(\"./file-exists\");\nconst _resolvefrom = require(\"./resolve-from\");\nconst _path = require(\"path\");\nasync function hasNecessaryDependencies(baseDir, requiredPackages) {\n  let resolutions = new Map();\n  const missingPackages = [];\n  await Promise.all(requiredPackages.map(async p => {\n    try {\n      const pkgPath = await _fs.promises.realpath((0, _resolvefrom.resolveFrom)(baseDir, `${p.pkg}/package.json`));\n      const pkgDir = (0, _path.dirname)(pkgPath);\n      if (p.exportsRestrict) {\n        const fileNameToVerify = (0, _path.relative)(p.pkg, p.file);\n        if (fileNameToVerify) {\n          const fileToVerify = (0, _path.join)(pkgDir, fileNameToVerify);\n          if (await (0, _fileexists.fileExists)(fileToVerify)) {\n            resolutions.set(p.pkg, fileToVerify);\n          } else {\n            return missingPackages.push(p);\n          }\n        } else {\n          resolutions.set(p.pkg, pkgPath);\n        }\n      } else {\n        resolutions.set(p.pkg, (0, _resolvefrom.resolveFrom)(baseDir, p.file));\n      }\n    } catch (_) {\n      return missingPackages.push(p);\n    }\n  }));\n  return {\n    resolved: resolutions,\n    missing: missingPackages\n  };\n}","map":{"version":3,"names":["hasNecessaryDependencies","baseDir","requiredPackages","resolutions","Map","missingPackages","Promise","all","map","p","pkgPath","_fs","promises","realpath","_resolvefrom","resolveFrom","pkg","pkgDir","_path","dirname","exportsRestrict","fileNameToVerify","relative","file","fileToVerify","join","_fileexists","fileExists","set","push","_","resolved","missing"],"sources":["../../src/lib/has-necessary-dependencies.ts"],"sourcesContent":[null],"mappings":";;;;;+BAgBsB;;;WAAAA,wBAAA;;;oBAhBS;4BACJ;6BACC;sBACY;AAajC,eAAeA,yBACpBC,OAAe,EACfC,gBAAqC;EAErC,IAAIC,WAAA,GAAc,IAAIC,GAAA;EACtB,MAAMC,eAAA,GAAuC,EAAE;EAE/C,MAAMC,OAAA,CAAQC,GAAG,CACfL,gBAAA,CAAiBM,GAAG,CAAC,MAAOC,CAAA;IAC1B,IAAI;MACF,MAAMC,OAAA,GAAU,MAAMC,GAAA,CAAAC,QAAE,CAACC,QAAQ,CAC/B,IAAAC,YAAA,CAAAC,WAAW,EAACd,OAAA,EAAU,GAAEQ,CAAA,CAAEO,GAAI,eAAc;MAE9C,MAAMC,MAAA,GAAS,IAAAC,KAAA,CAAAC,OAAO,EAACT,OAAA;MAEvB,IAAID,CAAA,CAAEW,eAAe,EAAE;QACrB,MAAMC,gBAAA,GAAmB,IAAAH,KAAA,CAAAI,QAAQ,EAACb,CAAA,CAAEO,GAAG,EAAEP,CAAA,CAAEc,IAAI;QAC/C,IAAIF,gBAAA,EAAkB;UACpB,MAAMG,YAAA,GAAe,IAAAN,KAAA,CAAAO,IAAI,EAACR,MAAA,EAAQI,gBAAA;UAClC,IAAI,MAAM,IAAAK,WAAA,CAAAC,UAAU,EAACH,YAAA,GAAe;YAClCrB,WAAA,CAAYyB,GAAG,CAACnB,CAAA,CAAEO,GAAG,EAAEQ,YAAA;UACzB,OAAO;YACL,OAAOnB,eAAA,CAAgBwB,IAAI,CAACpB,CAAA;UAC9B;QACF,OAAO;UACLN,WAAA,CAAYyB,GAAG,CAACnB,CAAA,CAAEO,GAAG,EAAEN,OAAA;QACzB;MACF,OAAO;QACLP,WAAA,CAAYyB,GAAG,CAACnB,CAAA,CAAEO,GAAG,EAAE,IAAAF,YAAA,CAAAC,WAAW,EAACd,OAAA,EAASQ,CAAA,CAAEc,IAAI;MACpD;IACF,EAAE,OAAOO,CAAA,EAAG;MACV,OAAOzB,eAAA,CAAgBwB,IAAI,CAACpB,CAAA;IAC9B;EACF;EAGF,OAAO;IACLsB,QAAA,EAAU5B,WAAA;IACV6B,OAAA,EAAS3B;EACX;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}