{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n0 && (module.exports = {\n  ReadonlyRequestCookiesError: null,\n  RequestCookiesAdapter: null,\n  getModifiedCookieValues: null,\n  appendMutableCookies: null,\n  MutableRequestCookiesAdapter: null\n});\nfunction _export(target, all) {\n  for (var name in all) Object.defineProperty(target, name, {\n    enumerable: true,\n    get: all[name]\n  });\n}\n_export(exports, {\n  ReadonlyRequestCookiesError: function () {\n    return ReadonlyRequestCookiesError;\n  },\n  RequestCookiesAdapter: function () {\n    return RequestCookiesAdapter;\n  },\n  getModifiedCookieValues: function () {\n    return getModifiedCookieValues;\n  },\n  appendMutableCookies: function () {\n    return appendMutableCookies;\n  },\n  MutableRequestCookiesAdapter: function () {\n    return MutableRequestCookiesAdapter;\n  }\n});\nconst _cookies = require(\"../cookies\");\nconst _reflect = require(\"./reflect\");\nclass ReadonlyRequestCookiesError extends Error {\n  constructor() {\n    super(\"Cookies can only be modified in a Server Action or Route Handler. Read more: https://nextjs.org/docs/app/api-reference/functions/cookies#cookiessetname-value-options\");\n  }\n  static callable() {\n    throw new ReadonlyRequestCookiesError();\n  }\n}\nclass RequestCookiesAdapter {\n  static seal(cookies) {\n    return new Proxy(cookies, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          case \"clear\":\n          case \"delete\":\n          case \"set\":\n            return ReadonlyRequestCookiesError.callable;\n          default:\n            return _reflect.ReflectAdapter.get(target, prop, receiver);\n        }\n      }\n    });\n  }\n}\nconst SYMBOL_MODIFY_COOKIE_VALUES = Symbol.for(\"next.mutated.cookies\");\nfunction getModifiedCookieValues(cookies) {\n  const modified = cookies[SYMBOL_MODIFY_COOKIE_VALUES];\n  if (!modified || !Array.isArray(modified) || modified.length === 0) {\n    return [];\n  }\n  return modified;\n}\nfunction appendMutableCookies(headers, mutableCookies) {\n  const modifiedCookieValues = getModifiedCookieValues(mutableCookies);\n  if (modifiedCookieValues.length === 0) {\n    return false;\n  }\n  // Return a new response that extends the response with\n  // the modified cookies as fallbacks. `res` cookies\n  // will still take precedence.\n  const resCookies = new _cookies.ResponseCookies(headers);\n  const returnedCookies = resCookies.getAll();\n  // Set the modified cookies as fallbacks.\n  for (const cookie of modifiedCookieValues) {\n    resCookies.set(cookie);\n  }\n  // Set the original cookies as the final values.\n  for (const cookie of returnedCookies) {\n    resCookies.set(cookie);\n  }\n  return true;\n}\nclass MutableRequestCookiesAdapter {\n  static wrap(cookies, onUpdateCookies) {\n    const responseCookes = new _cookies.ResponseCookies(new Headers());\n    for (const cookie of cookies.getAll()) {\n      responseCookes.set(cookie);\n    }\n    let modifiedValues = [];\n    const modifiedCookies = new Set();\n    const updateResponseCookies = () => {\n      var _fetch___nextGetStaticStore;\n      // TODO-APP: change method of getting staticGenerationAsyncStore\n      const staticGenerationAsyncStore = fetch.__nextGetStaticStore == null ? void 0 : (_fetch___nextGetStaticStore = fetch.__nextGetStaticStore.call(fetch)) == null ? void 0 : _fetch___nextGetStaticStore.getStore();\n      if (staticGenerationAsyncStore) {\n        staticGenerationAsyncStore.pathWasRevalidated = true;\n      }\n      const allCookies = responseCookes.getAll();\n      modifiedValues = allCookies.filter(c => modifiedCookies.has(c.name));\n      if (onUpdateCookies) {\n        const serializedCookies = [];\n        for (const cookie of modifiedValues) {\n          const tempCookies = new _cookies.ResponseCookies(new Headers());\n          tempCookies.set(cookie);\n          serializedCookies.push(tempCookies.toString());\n        }\n        onUpdateCookies(serializedCookies);\n      }\n    };\n    return new Proxy(responseCookes, {\n      get(target, prop, receiver) {\n        switch (prop) {\n          // A special symbol to get the modified cookie values\n          case SYMBOL_MODIFY_COOKIE_VALUES:\n            return modifiedValues;\n          // TODO: Throw error if trying to set a cookie after the response\n          // headers have been set.\n          case \"delete\":\n            return function (...args) {\n              modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n              try {\n                target.delete(...args);\n              } finally {\n                updateResponseCookies();\n              }\n            };\n          case \"set\":\n            return function (...args) {\n              modifiedCookies.add(typeof args[0] === \"string\" ? args[0] : args[0].name);\n              try {\n                return target.set(...args);\n              } finally {\n                updateResponseCookies();\n              }\n            };\n          default:\n            return _reflect.ReflectAdapter.get(target, prop, receiver);\n        }\n      }\n    });\n  }\n}","map":{"version":3,"names":["ReadonlyRequestCookiesError","RequestCookiesAdapter","getModifiedCookieValues","appendMutableCookies","MutableRequestCookiesAdapter","Error","constructor","callable","seal","cookies","Proxy","get","target","prop","receiver","_reflect","ReflectAdapter","SYMBOL_MODIFY_COOKIE_VALUES","Symbol","for","modified","Array","isArray","length","headers","mutableCookies","modifiedCookieValues","resCookies","_cookies","ResponseCookies","returnedCookies","getAll","cookie","set","wrap","onUpdateCookies","responseCookes","Headers","modifiedValues","modifiedCookies","Set","updateResponseCookies","_fetch___nextGetStaticStore","staticGenerationAsyncStore","fetch","__nextGetStaticStore","call","getStore","pathWasRevalidated","allCookies","filter","c","has","name","serializedCookies","tempCookies","push","toString","args","add","delete"],"sources":["../../../../../src/server/web/spec-extension/adapters/request-cookies.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}